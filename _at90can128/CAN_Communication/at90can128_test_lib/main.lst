   1               		.file	"main.c"
   2               	__SREG__ = 0x3f
   3               	__SP_H__ = 0x3e
   4               	__SP_L__ = 0x3d
   5               	__CCP__  = 0x34
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   9               		.text
  10               	.Ltext0:
  75               	.global	can_set_baudrate
  77               	can_set_baudrate:
  79               	.Ltext1:
   1:can_at90can128.c **** /* <Type Definitions> */
   2:can_at90can128.c **** enum mob_mode {DISABLED, TRANSMIT_DATA, TRANSMIT_REMOTE, RECEIVE_DATA, AUTO_REPLY};	// Message obje
   3:can_at90can128.c **** enum int_mode {NONE, TX, RX, TXRX};	// Interrupt mode
   4:can_at90can128.c **** // Message object structure
   5:can_at90can128.c **** typedef struct
   6:can_at90can128.c **** {	
   7:can_at90can128.c **** 	uint32_t	id;			// Identifier (29 Bits)
   8:can_at90can128.c **** 	uint32_t	idm;		// ID-Mask
   9:can_at90can128.c **** 	uint8_t		length;		// Length of dataframe 
  10:can_at90can128.c **** 	uint8_t		data[8];	// Dataframe
  11:can_at90can128.c **** }
  12:can_at90can128.c **** can_message;
  13:can_at90can128.c **** /* </Type Definitions> */
  14:can_at90can128.c **** 
  15:can_at90can128.c **** /* <Defines> */
  16:can_at90can128.c **** #define MOBS_NUM 15		// Number of available MOBs
  17:can_at90can128.c **** #define NOMOB   0xff	// Definition of prohibited MOB
  18:can_at90can128.c **** /* </Defines> */
  19:can_at90can128.c **** 
  20:can_at90can128.c **** /* <Macros> */
  21:can_at90can128.c **** #define setbit(ADR,BIT)		(ADR|=(1<<BIT))		// Macro to set a bit
  22:can_at90can128.c **** #define clearbit(ADR,BIT)	(ADR&=~(1<<BIT))	// Macro to clear a bit
  23:can_at90can128.c **** #define getbit(ADR, BIT)	(ADR & (1<<BIT))	// Macro to get status of a bit
  24:can_at90can128.c **** /* </Macros> */
  25:can_at90can128.c **** 
  26:can_at90can128.c **** /* <Function declarations> */
  27:can_at90can128.c **** /* Return void */
  28:can_at90can128.c **** void can_set_baudrate(uint16_t baud);
  29:can_at90can128.c **** void can_set_interrupt(uint8_t mode);
  30:can_at90can128.c **** void can_select_mob(uint8_t mob);
  31:can_at90can128.c **** void can_set_mob_id_mask(uint32_t idm);
  32:can_at90can128.c **** void can_set_mob_id(uint32_t id);
  33:can_at90can128.c **** void can_set_mob_mode(uint8_t mode);
  34:can_at90can128.c **** void can_set_mob_data(uint8_t *data, uint8_t length);
  35:can_at90can128.c **** void can_set_mob_interrupt(uint8_t object);
  36:can_at90can128.c **** void can_clear_mob_interrupt(uint8_t object);
  37:can_at90can128.c **** void can_init(uint16_t baud, uint8_t intmode);
  38:can_at90can128.c **** void can_enable_mob(uint8_t object, uint8_t mode, can_message msg);
  39:can_at90can128.c **** void can_disable_mob(uint8_t object);
  40:can_at90can128.c **** void can_send_data(uint8_t mob, uint8_t *data, uint8_t length);
  41:can_at90can128.c **** /* Return int */
  42:can_at90can128.c **** uint32_t can_get_mob_id(void);
  43:can_at90can128.c **** uint8_t can_get_mob_mode(void);
  44:can_at90can128.c **** uint8_t can_get_mob_interrupt(void);
  45:can_at90can128.c **** /* Return can_message */
  46:can_at90can128.c **** can_message can_get_mob_data(void);
  47:can_at90can128.c **** /* </Function declarations> */
  48:can_at90can128.c **** 
  49:can_at90can128.c **** /* Set baudrate (1000, 500, 250, 200, 125, 100kbits/s) for cpu clock (16, 12, 8, 6, 4MHz) */
  50:can_at90can128.c **** void can_set_baudrate(uint16_t baud)
  51:can_at90can128.c **** {
  80               	
  81               		in r28,__SP_L__
  82               		in r29,__SP_H__
  83 0000 DF93      	/* prologue: function */
  84 0002 CF93      	/* frame size = 4 */
  85 0004 00D0      		std Y+2,r25
  86 0006 00D0      		std Y+1,r24
  88 000a DEB7      	.LM1:
  89               		ldd r24,Y+1
  90               		ldd r25,Y+2
  91 000c 9A83      		std Y+4,r25
  92 000e 8983      		std Y+3,r24
  52:can_at90can128.c **** #if F_CPU	== 16000000
  53:can_at90can128.c **** 	switch(baud)
  93               	
  94               		ldd r25,Y+4
  95 0010 8981      		cpi r24,200
  96 0012 9A81      		cpc r25,__zero_reg__
  97 0014 9C83      		brne .+2
  98 0016 8B83      		rjmp .L5
  99 0018 8B81      		ldd r24,Y+3
 100 001a 9C81      		ldd r25,Y+4
 101 001c 883C      		cpi r24,201
 102 001e 9105      		cpc r25,__zero_reg__
 103 0020 01F4      		brsh .L9
 104 0022 00C0      		ldd r24,Y+3
 105 0024 8B81      		ldd r25,Y+4
 106 0026 9C81      		cpi r24,100
 107 0028 893C      		cpc r25,__zero_reg__
 108 002a 9105      		brne .+2
 109 002c 00F4      		rjmp .L3
 110 002e 8B81      		ldd r24,Y+3
 111 0030 9C81      		ldd r25,Y+4
 112 0032 8436      		cpi r24,125
 113 0034 9105      		cpc r25,__zero_reg__
 114 0036 01F4      		brne .+2
 115 0038 00C0      		rjmp .L4
 116 003a 8B81      		rjmp .L10
 117 003c 9C81      	.L9:
 118 003e 8D37      		ldd r24,Y+3
 119 0040 9105      		ldd r25,Y+4
 120 0042 01F4      		ldi r18,hi8(500)
 121 0044 00C0      		cpi r24,lo8(500)
 122 0046 00C0      		cpc r25,r18
 123               		breq .L7
 124 0048 8B81      		ldd r24,Y+3
 125 004a 9C81      		ldd r25,Y+4
 126 004c 21E0      		ldi r18,hi8(1000)
 127 004e 843F      		cpi r24,lo8(1000)
 128 0050 9207      		cpc r25,r18
 129 0052 01F0      		breq .L8
 130 0054 8B81      		ldd r24,Y+3
 131 0056 9C81      		ldd r25,Y+4
 132 0058 23E0      		cpi r24,250
 133 005a 883E      		cpc r25,__zero_reg__
 134 005c 9207      		breq .L6
 135 005e 01F0      		rjmp .L10
 136 0060 8B81      	.L8:
 138 0064 8A3F      	.LM2:
 139 0066 9105      		ldi r30,lo8(226)
 140 0068 01F0      		ldi r31,hi8(226)
 141 006a 00C0      		st Z,__zero_reg__
  54:can_at90can128.c **** 	{
  55:can_at90can128.c **** 		case 1000:
  56:can_at90can128.c **** 			CANBT1		= 0x00;
 143               	4,lo8(12)
 144               		st Z,r24
 146 006e F0E0      	.LM4:
 147 0070 1082      		ldi r30,lo8(228)
  57:can_at90can128.c **** 			CANBT2		= 0x0c;
 148               	r31,hi8(228)
 149               		ldi r24,lo8(55)
 150 0072 E3EE      		st Z,r24
 151 0074 F0E0      		rjmp .L10
 152 0076 8CE0      	.L7:
  58:can_at90can128.c **** 			CANBT3		= 0x37;
 154               		ldi r30,lo8(226)
 155               		ldi r31,hi8(226)
 156 007a E4EE      		ldi r24,lo8(2)
 157 007c F0E0      		st Z,r24
 159 0080 8083      	.LM6:
 160 0082 00C0      		ldi r30,lo8(227)
 161               		ldi r31,hi8(227)
  59:can_at90can128.c **** 			break;
  60:can_at90can128.c **** 		case 500:
  61:can_at90can128.c **** 			CANBT1		= 0x02;
 162               	,lo8(12)
 163               		st Z,r24
 165 0086 F0E0      	.LM7:
 166 0088 82E0      		ldi r30,lo8(228)
 167 008a 8083      		ldi r31,hi8(228)
  62:can_at90can128.c **** 			CANBT2		= 0x0c;
 168               	24,lo8(55)
 169               		st Z,r24
 170 008c E3EE      		rjmp .L10
 171 008e F0E0      	.L6:
 173 0092 8083      	.LM8:
  63:can_at90can128.c **** 			CANBT3		= 0x37;
 174               	30,lo8(226)
 175               		ldi r31,hi8(226)
 176 0094 E4EE      		ldi r24,lo8(6)
 177 0096 F0E0      		st Z,r24
 179 009a 8083      	.LM9:
 180 009c 00C0      		ldi r30,lo8(227)
 181               		ldi r31,hi8(227)
  64:can_at90can128.c **** 			break;
  65:can_at90can128.c **** 		case 250:
  66:can_at90can128.c **** 			CANBT1		= 0x06;
 182               	,lo8(12)
 183               		st Z,r24
 185 00a0 F0E0      	.LM10:
 186 00a2 86E0      		ldi r30,lo8(228)
 187 00a4 8083      		ldi r31,hi8(228)
  67:can_at90can128.c **** 			CANBT2		= 0x0c;
 188               	24,lo8(55)
 189               		st Z,r24
 190 00a6 E3EE      		rjmp .L10
 191 00a8 F0E0      	.L5:
 193 00ac 8083      	.LM11:
  68:can_at90can128.c **** 			CANBT3		= 0x37;
 194               	30,lo8(226)
 195               		ldi r31,hi8(226)
 196 00ae E4EE      		ldi r24,lo8(8)
 197 00b0 F0E0      		st Z,r24
 199 00b4 8083      	.LM12:
 200 00b6 00C0      		ldi r30,lo8(227)
 201               		ldi r31,hi8(227)
  69:can_at90can128.c **** 			break;
  70:can_at90can128.c **** 		case 200:
  71:can_at90can128.c **** 			CANBT1		= 0x08;
 202               	,lo8(12)
 203               		st Z,r24
 205 00ba F0E0      	.LM13:
 206 00bc 88E0      		ldi r30,lo8(228)
 207 00be 8083      		ldi r31,hi8(228)
  72:can_at90can128.c **** 			CANBT2		= 0x0c;
 208               	24,lo8(55)
 209               		st Z,r24
 210 00c0 E3EE      		rjmp .L10
 211 00c2 F0E0      	.L4:
 213 00c6 8083      	.LM14:
  73:can_at90can128.c **** 			CANBT3		= 0x37;
 214               	30,lo8(226)
 215               		ldi r31,hi8(226)
 216 00c8 E4EE      		ldi r24,lo8(14)
 217 00ca F0E0      		st Z,r24
 219 00ce 8083      	.LM15:
 220 00d0 00C0      		ldi r30,lo8(227)
 221               		ldi r31,hi8(227)
  74:can_at90can128.c **** 			break;
  75:can_at90can128.c **** 		case 125:
  76:can_at90can128.c **** 			CANBT1		= 0x0e;
 222               	,lo8(12)
 223               		st Z,r24
 225 00d4 F0E0      	.LM16:
 226 00d6 8EE0      		ldi r30,lo8(228)
 227 00d8 8083      		ldi r31,hi8(228)
  77:can_at90can128.c **** 			CANBT2		= 0x0c;
 228               	24,lo8(55)
 229               		st Z,r24
 230 00da E3EE      		rjmp .L10
 231 00dc F0E0      	.L3:
 233 00e0 8083      	.LM17:
  78:can_at90can128.c **** 			CANBT3		= 0x37;
 234               	30,lo8(226)
 235               		ldi r31,hi8(226)
 236 00e2 E4EE      		ldi r24,lo8(18)
 237 00e4 F0E0      		st Z,r24
 239 00e8 8083      	.LM18:
 240 00ea 00C0      		ldi r30,lo8(227)
 241               		ldi r31,hi8(227)
  79:can_at90can128.c **** 			break;
  80:can_at90can128.c **** 		case 100:
  81:can_at90can128.c **** 			CANBT1		= 0x12;
 242               	,lo8(12)
 243               		st Z,r24
 245 00ee F0E0      	.LM19:
 246 00f0 82E1      		ldi r30,lo8(228)
 247 00f2 8083      		ldi r31,hi8(228)
  82:can_at90can128.c **** 			CANBT2		= 0x0c;
 248               	24,lo8(55)
 249               		st Z,r24
 250 00f4 E3EE      	.L10:
 251 00f6 F0E0      	/* epilogue start */
 253 00fa 8083      	.LM20:
  83:can_at90can128.c **** 			CANBT3		= 0x37;
 254               	_tmp_reg__
 255               		pop __tmp_reg__
 256 00fc E4EE      		pop __tmp_reg__
 257 00fe F0E0      		pop __tmp_reg__
 258 0100 87E3      		pop r28
 259 0102 8083      		pop r29
 260               		ret
  84:can_at90can128.c **** 			break;
  85:can_at90can128.c **** 		default:
  86:can_at90can128.c **** 			break;
  87:can_at90can128.c **** 	}
  88:can_at90can128.c **** #elif F_CPU	== 12000000
  89:can_at90can128.c **** 	switch(baud)
  90:can_at90can128.c **** 	{
  91:can_at90can128.c **** 		case 1000:
  92:can_at90can128.c **** 			CANBT1		= 0x00;
  93:can_at90can128.c **** 			CANBT2		= 0x08;
  94:can_at90can128.c **** 			CANBT3		= 0x25;
  95:can_at90can128.c **** 			break;
  96:can_at90can128.c **** 		case 500:
  97:can_at90can128.c **** 			CANBT1		= 0x02;
  98:can_at90can128.c **** 			CANBT2		= 0x08;
  99:can_at90can128.c **** 			CANBT3		= 0x25;
 100:can_at90can128.c **** 			break;
 101:can_at90can128.c **** 		case 250:
 102:can_at90can128.c **** 			CANBT1		= 0x04;
 103:can_at90can128.c **** 			CANBT2		= 0x0c;
 104:can_at90can128.c **** 			CANBT3		= 0x37;
 105:can_at90can128.c **** 			break;
 106:can_at90can128.c **** 		case 200:
 107:can_at90can128.c **** 			CANBT1		= 0x04;
 108:can_at90can128.c **** 			CANBT2		= 0x0e;
 109:can_at90can128.c **** 			CANBT3		= 0x4b;
 110:can_at90can128.c **** 			break;
 111:can_at90can128.c **** 		case 125:
 112:can_at90can128.c **** 			CANBT1		= 0x0a;
 113:can_at90can128.c **** 			CANBT2		= 0x0c;
 114:can_at90can128.c **** 			CANBT3		= 0x37;
 115:can_at90can128.c **** 			break;
 116:can_at90can128.c **** 		case 100:
 117:can_at90can128.c **** 			CANBT1		= 0x0a;
 118:can_at90can128.c **** 			CANBT2		= 0x0e;
 119:can_at90can128.c **** 			CANBT3		= 0x4b;
 120:can_at90can128.c **** 			break;
 121:can_at90can128.c **** 		default:
 122:can_at90can128.c **** 			break;
 123:can_at90can128.c **** 	}
 124:can_at90can128.c **** #elif F_CPU	==  8000000
 125:can_at90can128.c **** 	switch(baud)
 126:can_at90can128.c **** 	{
 127:can_at90can128.c **** 		case 1000:
 128:can_at90can128.c **** 			CANBT1		= 0x00;
 129:can_at90can128.c **** 			CANBT2		= 0x04;
 130:can_at90can128.c **** 			CANBT3		= 0x13;
 131:can_at90can128.c **** 			break;
 132:can_at90can128.c **** 		case 500:
 133:can_at90can128.c **** 			CANBT1		= 0x00;
 134:can_at90can128.c **** 			CANBT2		= 0x0c;
 135:can_at90can128.c **** 			CANBT3		= 0x37;
 136:can_at90can128.c **** 			break;
 137:can_at90can128.c **** 		case 250:
 138:can_at90can128.c **** 			CANBT1		= 0x02;
 139:can_at90can128.c **** 			CANBT2		= 0x0c;
 140:can_at90can128.c **** 			CANBT3		= 0x37;
 141:can_at90can128.c **** 			break;
 142:can_at90can128.c **** 		case 200:
 143:can_at90can128.c **** 			CANBT1		= 0x02;
 144:can_at90can128.c **** 			CANBT2		= 0x0e;
 145:can_at90can128.c **** 			CANBT3		= 0x4b;
 146:can_at90can128.c **** 			break;
 147:can_at90can128.c **** 		case 125:
 148:can_at90can128.c **** 			CANBT1		= 0x06;
 149:can_at90can128.c **** 			CANBT2		= 0x0c;
 150:can_at90can128.c **** 			CANBT3		= 0x37;
 151:can_at90can128.c **** 			break;
 152:can_at90can128.c **** 		case 100:
 153:can_at90can128.c **** 			CANBT1		= 0x08;
 154:can_at90can128.c **** 			CANBT2		= 0x0c;
 155:can_at90can128.c **** 			CANBT3		= 0x37;
 156:can_at90can128.c **** 			break;
 157:can_at90can128.c **** 		default:
 158:can_at90can128.c **** 			break;
 159:can_at90can128.c **** 	}
 160:can_at90can128.c **** #elif F_CPU	==  6000000
 161:can_at90can128.c **** 	switch(baud)
 162:can_at90can128.c **** 	{
 163:can_at90can128.c **** 		case 1000:
 164:can_at90can128.c **** 			break;
 165:can_at90can128.c **** 		case 500:
 166:can_at90can128.c **** 			CANBT1		= 0x00;
 167:can_at90can128.c **** 			CANBT2		= 0x08;
 168:can_at90can128.c **** 			CANBT3		= 0x25;
 169:can_at90can128.c **** 			break;
 170:can_at90can128.c **** 		case 250:
 171:can_at90can128.c **** 			CANBT1		= 0x02;
 172:can_at90can128.c **** 			CANBT2		= 0x08;
 173:can_at90can128.c **** 			CANBT3		= 0x25;
 174:can_at90can128.c **** 			break;
 175:can_at90can128.c **** 		case 200:
 176:can_at90can128.c **** 			CANBT1		= 0x02;
 177:can_at90can128.c **** 			CANBT2		= 0x0c;
 178:can_at90can128.c **** 			CANBT3		= 0x35;
 179:can_at90can128.c **** 			break;
 180:can_at90can128.c **** 		case 125:
 181:can_at90can128.c **** 			CANBT1		= 0x04;
 182:can_at90can128.c **** 			CANBT2		= 0x0c;
 183:can_at90can128.c **** 			CANBT3		= 0x37;
 184:can_at90can128.c **** 			break;
 185:can_at90can128.c **** 		case 100:
 186:can_at90can128.c **** 			CANBT1		= 0x04;
 187:can_at90can128.c **** 			CANBT2		= 0x0e;
 188:can_at90can128.c **** 			CANBT3		= 0x4b;
 189:can_at90can128.c **** 			break;
 190:can_at90can128.c **** 		default:
 191:can_at90can128.c **** 			break;
 192:can_at90can128.c **** 	}
 193:can_at90can128.c **** #elif F_CPU	==  4000000
 194:can_at90can128.c **** 	switch(baud)
 195:can_at90can128.c **** 	{
 196:can_at90can128.c **** 		case 1000:
 197:can_at90can128.c **** 			break;
 198:can_at90can128.c **** 		case 500:
 199:can_at90can128.c **** 			CANBT1		= 0x00;
 200:can_at90can128.c **** 			CANBT2		= 0x04;
 201:can_at90can128.c **** 			CANBT3		= 0x13;
 202:can_at90can128.c **** 			break;
 203:can_at90can128.c **** 		case 250:
 204:can_at90can128.c **** 			CANBT1		= 0x02;
 205:can_at90can128.c **** 			CANBT2		= 0x04;
 206:can_at90can128.c **** 			CANBT3		= 0x13;
 207:can_at90can128.c **** 			break;
 208:can_at90can128.c **** 		case 200:
 209:can_at90can128.c **** 			CANBT1		= 0x00;
 210:can_at90can128.c **** 			CANBT2		= 0x0e;
 211:can_at90can128.c **** 			CANBT3		= 0x4b;
 212:can_at90can128.c **** 			break;
 213:can_at90can128.c **** 		case 125:
 214:can_at90can128.c **** 			CANBT1		= 0x02;
 215:can_at90can128.c **** 			CANBT2		= 0x0c;
 216:can_at90can128.c **** 			CANBT3		= 0x37;
 217:can_at90can128.c **** 			break;
 218:can_at90can128.c **** 		case 100:
 219:can_at90can128.c **** 			CANBT1		= 0x02;
 220:can_at90can128.c **** 			CANBT2		= 0x0e;
 221:can_at90can128.c **** 			CANBT3		= 0x4b;
 222:can_at90can128.c **** 			break;
 223:can_at90can128.c **** 		default:
 224:can_at90can128.c **** 			break;
 225:can_at90can128.c **** 	}
 226:can_at90can128.c **** #endif
 227:can_at90can128.c **** }
 262               	:
 265 0106 0F90      	.global	can_set_interrupt
 267 010a 0F90      	can_set_interrupt:
 269 010e DF91      	.LM21:
 270 0110 0895      	.LFBB2:
 271               		push r29
 272               		push r28
 273               		rcall .
 274               		push __tmp_reg__
 275               		in r28,__SP_L__
 276               		in r29,__SP_H__
 277               	/* prologue: function */
 228:can_at90can128.c **** /* Set interrupt mode */
 229:can_at90can128.c **** void can_set_interrupt(uint8_t mode)
 230:can_at90can128.c **** {
 278               	3 */
 279               		std Y+1,r24
 281 0112 DF93      	.LM22:
 282 0114 CF93      		ldd r24,Y+1
 283 0116 00D0      		mov r18,r24
 284 0118 0F92      		ldi r19,lo8(0)
 285 011a CDB7      		std Y+3,r19
 286 011c DEB7      		std Y+2,r18
 287               		ldd r24,Y+2
 288               		ldd r25,Y+3
 289 011e 8983      		cpi r24,1
 231:can_at90can128.c **** 	switch(mode)
 290               	ero_reg__
 291               		breq .L14
 292 0120 8981      		ldd r18,Y+2
 293 0122 282F      		ldd r19,Y+3
 294 0124 30E0      		cpi r18,2
 295 0126 3B83      		cpc r19,__zero_reg__
 296 0128 2A83      		brge .L17
 297 012a 8A81      		ldd r24,Y+2
 298 012c 9B81      		ldd r25,Y+3
 299 012e 8130      		sbiw r24,0
 300 0130 9105      		breq .L13
 301 0132 01F0      		rjmp .L18
 302 0134 2A81      	.L17:
 303 0136 3B81      		ldd r18,Y+2
 304 0138 2230      		ldd r19,Y+3
 305 013a 3105      		cpi r18,2
 306 013c 04F4      		cpc r19,__zero_reg__
 307 013e 8A81      		breq .L15
 308 0140 9B81      		ldd r24,Y+2
 309 0142 0097      		ldd r25,Y+3
 310 0144 01F0      		cpi r24,3
 311 0146 00C0      		cpc r25,__zero_reg__
 312               		brne .+2
 313 0148 2A81      		rjmp .L16
 314 014a 3B81      		rjmp .L18
 315 014c 2230      	.L13:
 317 0150 01F0      	.LM23:
 318 0152 8A81      		ldi r26,lo8(219)
 319 0154 9B81      		ldi r27,hi8(219)
 320 0156 8330      		ldi r30,lo8(219)
 321 0158 9105      		ldi r31,hi8(219)
 322 015a 01F4      		ld r24,Z
 323 015c 00C0      		andi r24,lo8(127)
 324 015e 00C0      		st X,r24
 232:can_at90can128.c **** 	{
 233:can_at90can128.c **** 		case NONE:
 234:can_at90can128.c **** 			clearbit(CANGIE, ENIT);
 326               	8(219)
 327               		ldi r30,lo8(219)
 328 0160 ABED      		ldi r31,hi8(219)
 329 0162 B0E0      		ld r24,Z
 330 0164 EBED      		andi r24,lo8(-33)
 331 0166 F0E0      		st X,r24
 333 016a 8F77      	.LM25:
 334 016c 8C93      		ldi r26,lo8(219)
 235:can_at90can128.c **** 		  	clearbit(CANGIE, ENRX);
 335               	hi8(219)
 336               		ldi r30,lo8(219)
 337 016e ABED      		ldi r31,hi8(219)
 338 0170 B0E0      		ld r24,Z
 339 0172 EBED      		andi r24,lo8(-17)
 340 0174 F0E0      		st X,r24
 341 0176 8081      		rjmp .L18
 342 0178 8F7D      	.L14:
 236:can_at90can128.c **** 			clearbit(CANGIE, ENTX);
 344               	di r26,lo8(219)
 345               		ldi r27,hi8(219)
 346 017c ABED      		ldi r30,lo8(219)
 347 017e B0E0      		ldi r31,hi8(219)
 348 0180 EBED      		ld r24,Z
 349 0182 F0E0      		ori r24,lo8(-128)
 350 0184 8081      		st X,r24
 352 0188 8C93      	.LM27:
 353 018a 00C0      		ldi r26,lo8(219)
 354               		ldi r27,hi8(219)
 237:can_at90can128.c **** 			break;
 238:can_at90can128.c **** 		case TX:
 239:can_at90can128.c **** 			setbit(CANGIE, ENIT);
 355               	8(219)
 356               		ldi r31,hi8(219)
 357 018c ABED      		ld r24,Z
 358 018e B0E0      		andi r24,lo8(-33)
 359 0190 EBED      		st X,r24
 361 0194 8081      	.LM28:
 362 0196 8068      		ldi r26,lo8(219)
 363 0198 8C93      		ldi r27,hi8(219)
 240:can_at90can128.c **** 		  	clearbit(CANGIE, ENRX);
 364               	lo8(219)
 365               		ldi r31,hi8(219)
 366 019a ABED      		ld r24,Z
 367 019c B0E0      		ori r24,lo8(16)
 368 019e EBED      		st X,r24
 369 01a0 F0E0      		rjmp .L18
 370 01a2 8081      	.L15:
 372 01a6 8C93      	.LM29:
 241:can_at90can128.c **** 			setbit(CANGIE, ENTX);
 373               	lo8(219)
 374               		ldi r27,hi8(219)
 375 01a8 ABED      		ldi r30,lo8(219)
 376 01aa B0E0      		ldi r31,hi8(219)
 377 01ac EBED      		ld r24,Z
 378 01ae F0E0      		ori r24,lo8(-128)
 379 01b0 8081      		st X,r24
 381 01b4 8C93      	.LM30:
 382 01b6 00C0      		ldi r26,lo8(219)
 383               		ldi r27,hi8(219)
 242:can_at90can128.c **** 			break;
 243:can_at90can128.c **** 		case RX:
 244:can_at90can128.c **** 			setbit(CANGIE, ENIT);
 384               	8(219)
 385               		ldi r31,hi8(219)
 386 01b8 ABED      		ld r24,Z
 387 01ba B0E0      		ori r24,lo8(32)
 388 01bc EBED      		st X,r24
 390 01c0 8081      	.LM31:
 391 01c2 8068      		ldi r26,lo8(219)
 392 01c4 8C93      		ldi r27,hi8(219)
 245:can_at90can128.c **** 		  	setbit(CANGIE, ENRX);
 393               	lo8(219)
 394               		ldi r31,hi8(219)
 395 01c6 ABED      		ld r24,Z
 396 01c8 B0E0      		andi r24,lo8(-17)
 397 01ca EBED      		st X,r24
 398 01cc F0E0      		rjmp .L18
 399 01ce 8081      	.L16:
 401 01d2 8C93      	.LM32:
 246:can_at90can128.c **** 			clearbit(CANGIE, ENTX);
 402               	lo8(219)
 403               		ldi r27,hi8(219)
 404 01d4 ABED      		ldi r30,lo8(219)
 405 01d6 B0E0      		ldi r31,hi8(219)
 406 01d8 EBED      		ld r24,Z
 407 01da F0E0      		ori r24,lo8(-128)
 408 01dc 8081      		st X,r24
 410 01e0 8C93      	.LM33:
 411 01e2 00C0      		ldi r26,lo8(219)
 412               		ldi r27,hi8(219)
 247:can_at90can128.c **** 			break;
 248:can_at90can128.c **** 		case TXRX:
 249:can_at90can128.c **** 			setbit(CANGIE, ENIT);
 413               	8(219)
 414               		ldi r31,hi8(219)
 415 01e4 ABED      		ld r24,Z
 416 01e6 B0E0      		ori r24,lo8(32)
 417 01e8 EBED      		st X,r24
 419 01ec 8081      	.LM34:
 420 01ee 8068      		ldi r26,lo8(219)
 421 01f0 8C93      		ldi r27,hi8(219)
 250:can_at90can128.c **** 		  	setbit(CANGIE, ENRX);
 422               	lo8(219)
 423               		ldi r31,hi8(219)
 424 01f2 ABED      		ld r24,Z
 425 01f4 B0E0      		ori r24,lo8(16)
 426 01f6 EBED      		st X,r24
 427 01f8 F0E0      	.L18:
 428 01fa 8081      	/* epilogue start */
 430 01fe 8C93      	.LM35:
 251:can_at90can128.c **** 			setbit(CANGIE, ENTX);
 431               	p_reg__
 432               		pop __tmp_reg__
 433 0200 ABED      		pop __tmp_reg__
 434 0202 B0E0      		pop r28
 435 0204 EBED      		pop r29
 436 0206 F0E0      		ret
 438 020a 8061      	.Lscope2:
 441               	.global	can_select_mob
 252:can_at90can128.c **** 			break;
 253:can_at90can128.c **** 		default:
 254:can_at90can128.c **** 			break;
 255:can_at90can128.c **** 	}
 256:can_at90can128.c **** }
 442               	select_mob, @function
 443               	can_select_mob:
 445 0210 0F90      	.LM36:
 446 0212 0F90      	.LFBB3:
 447 0214 CF91      		push r29
 448 0216 DF91      		push r28
 449 0218 0895      		push __tmp_reg__
 450               		in r28,__SP_L__
 451               		in r29,__SP_H__
 452               	/* prologue: function */
 453               	/* frame size = 1 */
 454               		std Y+1,r24
 456               	.LM37:
 257:can_at90can128.c **** /* Select MOB */
 258:can_at90can128.c **** void can_select_mob(uint8_t mob)
 259:can_at90can128.c **** {
 457               	7)
 458               		ldi r31,hi8(237)
 459               		ldd r24,Y+1
 460 021a DF93      		swap r24
 461 021c CF93      		andi r24,lo8(-16)
 462 021e 0F92      		st Z,r24
 463 0220 CDB7      	/* epilogue start */
 465               	.LM38:
 466               		pop __tmp_reg__
 467 0224 8983      		pop r28
 260:can_at90can128.c **** 	CANPAGE	= (mob << 4);
 468               	et
 470 0226 EDEE      	.Lscope3:
 473 022c 8295      	.global	can_set_id_mask
 475 0230 8083      	can_set_id_mask:
 261:can_at90can128.c **** }
 477               	FBB4:
 478               		push r29
 479 0232 0F90      		push r28
 480 0234 CF91      		rcall .
 481 0236 DF91      		rcall .
 482 0238 0895      		in r28,__SP_L__
 483               		in r29,__SP_H__
 484               	/* prologue: function */
 485               	/* frame size = 4 */
 486               		std Y+1,r22
 487               		std Y+2,r23
 488               		std Y+3,r24
 489               		std Y+4,r25
 262:can_at90can128.c **** /* Set ID mask for selected MOB */
 263:can_at90can128.c **** void can_set_id_mask(uint32_t idm)
 264:can_at90can128.c **** {
 490               	265,.LM40-.LFBB4
 491               	.LM40:
 492               		ldd r24,Y+1
 493 023a DF93      		ldd r25,Y+2
 494 023c CF93      		ldd r26,Y+3
 495 023e 00D0      		ldd r27,Y+4
 496 0240 00D0      		add r24,r24
 497 0242 CDB7      		adc r25,r25
 498 0244 DEB7      		adc r26,r26
 499               		adc r27,r27
 500               		add r24,r24
 501 0246 6983      		adc r25,r25
 502 0248 7A83      		adc r26,r26
 503 024a 8B83      		adc r27,r27
 504 024c 9C83      		add r24,r24
 265:can_at90can128.c **** 	idm	<<= 3;
 505               	dc r26,r26
 506               		adc r27,r27
 507 024e 8981      		std Y+1,r24
 508 0250 9A81      		std Y+2,r25
 509 0252 AB81      		std Y+3,r26
 510 0254 BC81      		std Y+4,r27
 512 0258 991F      	.LM41:
 513 025a AA1F      		ldi r30,lo8(244)
 514 025c BB1F      		ldi r31,hi8(244)
 515 025e 880F      		ldd r24,Y+1
 516 0260 991F      		st Z,r24
 518 0264 BB1F      	.LM42:
 519 0266 880F      		ldi r26,lo8(244)
 520 0268 991F      		ldi r27,hi8(244)
 521 026a AA1F      		ldi r30,lo8(244)
 522 026c BB1F      		ldi r31,hi8(244)
 523 026e 8983      		ld r24,Z
 524 0270 9A83      		ori r24,lo8(5)
 525 0272 AB83      		st X,r24
 266:can_at90can128.c **** 	CANIDM4 = ((unsigned char) (idm));
 527               	5)
 528               		ldi r31,hi8(245)
 529 0276 E4EF      		ldd r24,Y+1
 530 0278 F0E0      		ldd r25,Y+2
 531 027a 8981      		ldd r26,Y+3
 532 027c 8083      		ldd r27,Y+4
 267:can_at90can128.c **** 	CANIDM4 |= (0x01 << RTRMSK) | (0x01 << IDEMSK);
 533               	24,r25
 534               		mov r25,r26
 535 027e A4EF      		mov r26,r27
 536 0280 B0E0      		clr r27
 537 0282 E4EF      		st Z,r24
 539 0286 8081      	.LM44:
 540 0288 8560      		ldi r30,lo8(246)
 541 028a 8C93      		ldi r31,hi8(246)
 268:can_at90can128.c **** 	CANIDM3 = (unsigned char) (idm >> 8);
 542               	Y+1
 543               		ldd r25,Y+2
 544 028c E5EF      		ldd r26,Y+3
 545 028e F0E0      		ldd r27,Y+4
 546 0290 8981      		movw r24,r26
 547 0292 9A81      		clr r26
 548 0294 AB81      		clr r27
 549 0296 BC81      		st Z,r24
 551 029a 9A2F      	.LM45:
 552 029c AB2F      		ldi r30,lo8(247)
 553 029e BB27      		ldi r31,hi8(247)
 554 02a0 8083      		ldd r24,Y+1
 269:can_at90can128.c **** 	CANIDM2 = (unsigned char) (idm >> 16);
 555               		ldd r26,Y+3
 556               		ldd r27,Y+4
 557 02a2 E6EF      		mov r24,r27
 558 02a4 F0E0      		clr r25
 559 02a6 8981      		clr r26
 560 02a8 9A81      		clr r27
 561 02aa AB81      		st Z,r24
 562 02ac BC81      	/* epilogue start */
 564 02b0 AA27      	.LM46:
 565 02b2 BB27      		pop __tmp_reg__
 566 02b4 8083      		pop __tmp_reg__
 270:can_at90can128.c **** 	CANIDM1 = (unsigned char) (idm >> 24);
 567               	eg__
 568               		pop __tmp_reg__
 569 02b6 E7EF      		pop r28
 570 02b8 F0E0      		pop r29
 571 02ba 8981      		ret
 573 02be AB81      	.Lscope4:
 576 02c4 9927      	.global	can_set_id
 578 02c8 BB27      	can_set_id:
 580               	.LM47:
 271:can_at90can128.c **** }
 581               	r29
 582               		push r28
 583 02cc 0F90      		rcall .
 584 02ce 0F90      		rcall .
 585 02d0 0F90      		in r28,__SP_L__
 586 02d2 0F90      		in r29,__SP_H__
 587 02d4 CF91      	/* prologue: function */
 588 02d6 DF91      	/* frame size = 4 */
 589 02d8 0895      		std Y+1,r22
 590               		std Y+2,r23
 591               		std Y+3,r24
 592               		std Y+4,r25
 594               	.LM48:
 595               		ldd r24,Y+1
 596               		ldd r25,Y+2
 272:can_at90can128.c **** /* Set ID for selected MOB */
 273:can_at90can128.c **** void can_set_id(uint32_t id)
 274:can_at90can128.c **** {
 597               	d r27,Y+4
 598               		add r24,r24
 599               		adc r25,r25
 600 02da DF93      		adc r26,r26
 601 02dc CF93      		adc r27,r27
 602 02de 00D0      		add r24,r24
 603 02e0 00D0      		adc r25,r25
 604 02e2 CDB7      		adc r26,r26
 605 02e4 DEB7      		adc r27,r27
 606               		add r24,r24
 607               		adc r25,r25
 608 02e6 6983      		adc r26,r26
 609 02e8 7A83      		adc r27,r27
 610 02ea 8B83      		std Y+1,r24
 611 02ec 9C83      		std Y+2,r25
 275:can_at90can128.c **** 	id <<= 3;
 612               	td Y+4,r27
 614 02ee 8981      	.LM49:
 615 02f0 9A81      		ldi r30,lo8(240)
 616 02f2 AB81      		ldi r31,hi8(240)
 617 02f4 BC81      		ld r24,Z
 618 02f6 880F      		mov r24,r24
 619 02f8 991F      		ldi r25,lo8(0)
 620 02fa AA1F      		ldi r26,lo8(0)
 621 02fc BB1F      		ldi r27,hi8(0)
 622 02fe 880F      		movw r18,r24
 623 0300 991F      		movw r20,r26
 624 0302 AA1F      		andi r18,lo8(7)
 625 0304 BB1F      		andi r19,hi8(7)
 626 0306 880F      		andi r20,hlo8(7)
 627 0308 991F      		andi r21,hhi8(7)
 628 030a AA1F      		ldd r24,Y+1
 629 030c BB1F      		ldd r25,Y+2
 630 030e 8983      		ldd r26,Y+3
 631 0310 9A83      		ldd r27,Y+4
 632 0312 AB83      		or r24,r18
 633 0314 BC83      		or r25,r19
 276:can_at90can128.c **** 	id |= (CANIDT4 & 0x07);
 634               	1
 635               		std Y+1,r24
 636 0316 E0EF      		std Y+2,r25
 637 0318 F0E0      		std Y+3,r26
 638 031a 8081      		std Y+4,r27
 640 031e 90E0      	.LM50:
 641 0320 A0E0      		ldi r30,lo8(240)
 642 0322 B0E0      		ldi r31,hi8(240)
 643 0324 9C01      		ldd r24,Y+1
 644 0326 AD01      		st Z,r24
 646 032a 3070      	.LM51:
 647 032c 4070      		ldi r30,lo8(241)
 648 032e 5070      		ldi r31,hi8(241)
 649 0330 8981      		ldd r24,Y+1
 650 0332 9A81      		ldd r25,Y+2
 651 0334 AB81      		ldd r26,Y+3
 652 0336 BC81      		ldd r27,Y+4
 653 0338 822B      		mov r24,r25
 654 033a 932B      		mov r25,r26
 655 033c A42B      		mov r26,r27
 656 033e B52B      		clr r27
 657 0340 8983      		st Z,r24
 659 0344 AB83      	.LM52:
 660 0346 BC83      		ldi r30,lo8(242)
 277:can_at90can128.c **** 
 278:can_at90can128.c **** 	CANIDT4 = (unsigned char) (id);
 661               	Y+1
 662               		ldd r25,Y+2
 663 0348 E0EF      		ldd r26,Y+3
 664 034a F0E0      		ldd r27,Y+4
 665 034c 8981      		movw r24,r26
 666 034e 8083      		clr r26
 279:can_at90can128.c **** 	CANIDT3 = (unsigned char) (id >> 8);
 667               	27
 668               		st Z,r24
 670 0352 F0E0      	.LM53:
 671 0354 8981      		ldi r30,lo8(243)
 672 0356 9A81      		ldi r31,hi8(243)
 673 0358 AB81      		ldd r24,Y+1
 674 035a BC81      		ldd r25,Y+2
 675 035c 892F      		ldd r26,Y+3
 676 035e 9A2F      		ldd r27,Y+4
 677 0360 AB2F      		mov r24,r27
 678 0362 BB27      		clr r25
 679 0364 8083      		clr r26
 280:can_at90can128.c **** 	CANIDT2 = (unsigned char) (id >> 16);
 680               	Z,r24
 681               	/* epilogue start */
 683 0368 F0E0      	.LM54:
 684 036a 8981      		pop __tmp_reg__
 685 036c 9A81      		pop __tmp_reg__
 686 036e AB81      		pop __tmp_reg__
 687 0370 BC81      		pop __tmp_reg__
 688 0372 CD01      		pop r28
 689 0374 AA27      		pop r29
 690 0376 BB27      		ret
 281:can_at90can128.c **** 	CANIDT1 = (unsigned char) (id >> 24);
 692               	stabs	"can_get_mob_id:F(5,6)",36,0,0,can_get_mob_id
 693               	.global	can_get_mob_id
 695 037c F0E0      	can_get_mob_id:
 697 0380 9A81      	.LM55:
 698 0382 AB81      	.LFBB6:
 699 0384 BC81      		push r29
 700 0386 8B2F      		push r28
 701 0388 9927      		rcall .
 702 038a AA27      		rcall .
 703 038c BB27      		in r28,__SP_L__
 704 038e 8083      		in r29,__SP_H__
 705               	/* prologue: function */
 282:can_at90can128.c **** }
 706               	= 4 */
 708 0390 0F90      	.LM56:
 709 0392 0F90      		std Y+1,__zero_reg__
 710 0394 0F90      		std Y+2,__zero_reg__
 711 0396 0F90      		std Y+3,__zero_reg__
 712 0398 CF91      		std Y+4,__zero_reg__
 714 039c 0895      	.LM57:
 715               		ldi r30,lo8(243)
 716               		ldi r31,hi8(243)
 717               		ld r24,Z
 718               		mov r24,r24
 719               		ldi r25,lo8(0)
 720               		ldi r26,lo8(0)
 283:can_at90can128.c **** /* Get ID mask for selected MOB */
 284:can_at90can128.c **** uint32_t can_get_mob_id(void)
 285:can_at90can128.c **** {
 721               	
 722               		mov r21,r24
 723               		clr r20
 724 039e DF93      		clr r19
 725 03a0 CF93      		clr r18
 726 03a2 00D0      		ldd r24,Y+1
 727 03a4 00D0      		ldd r25,Y+2
 728 03a6 CDB7      		ldd r26,Y+3
 729 03a8 DEB7      		ldd r27,Y+4
 730               		or r24,r18
 731               		or r25,r19
 286:can_at90can128.c **** 	uint32_t id = 0;
 732               	0
 733               		or r27,r21
 734 03aa 1982      		std Y+1,r24
 735 03ac 1A82      		std Y+2,r25
 736 03ae 1B82      		std Y+3,r26
 737 03b0 1C82      		std Y+4,r27
 287:can_at90can128.c **** 
 288:can_at90can128.c **** 	id |= ((uint32_t) CANIDT1) << 24;
 738               	n	68,0,289,.LM58-.LFBB6
 739               	.LM58:
 740 03b2 E3EF      		ldi r30,lo8(242)
 741 03b4 F0E0      		ldi r31,hi8(242)
 742 03b6 8081      		ld r24,Z
 743 03b8 882F      		mov r24,r24
 744 03ba 90E0      		ldi r25,lo8(0)
 745 03bc A0E0      		ldi r26,lo8(0)
 746 03be B0E0      		ldi r27,hi8(0)
 747 03c0 582F      		movw r20,r24
 748 03c2 4427      		clr r19
 749 03c4 3327      		clr r18
 750 03c6 2227      		ldd r24,Y+1
 751 03c8 8981      		ldd r25,Y+2
 752 03ca 9A81      		ldd r26,Y+3
 753 03cc AB81      		ldd r27,Y+4
 754 03ce BC81      		or r24,r18
 755 03d0 822B      		or r25,r19
 756 03d2 932B      		or r26,r20
 757 03d4 A42B      		or r27,r21
 758 03d6 B52B      		std Y+1,r24
 759 03d8 8983      		std Y+2,r25
 760 03da 9A83      		std Y+3,r26
 761 03dc AB83      		std Y+4,r27
 289:can_at90can128.c **** 	id |= ((uint32_t) CANIDT2) << 16;
 763               		ldi r31,hi8(241)
 764               		ld r24,Z
 765 03e0 E2EF      		mov r24,r24
 766 03e2 F0E0      		ldi r25,lo8(0)
 767 03e4 8081      		ldi r26,lo8(0)
 768 03e6 882F      		ldi r27,hi8(0)
 769 03e8 90E0      		clr r18
 770 03ea A0E0      		mov r19,r24
 771 03ec B0E0      		mov r20,r25
 772 03ee AC01      		mov r21,r26
 773 03f0 3327      		ldd r24,Y+1
 774 03f2 2227      		ldd r25,Y+2
 775 03f4 8981      		ldd r26,Y+3
 776 03f6 9A81      		ldd r27,Y+4
 777 03f8 AB81      		or r24,r18
 778 03fa BC81      		or r25,r19
 779 03fc 822B      		or r26,r20
 780 03fe 932B      		or r27,r21
 781 0400 A42B      		std Y+1,r24
 782 0402 B52B      		std Y+2,r25
 783 0404 8983      		std Y+3,r26
 784 0406 9A83      		std Y+4,r27
 786 040a BC83      	.LM60:
 290:can_at90can128.c **** 	id |= ((uint32_t) CANIDT3) << 8;
 787               	31,hi8(240)
 788               		ld r24,Z
 789 040c E1EF      		mov r24,r24
 790 040e F0E0      		ldi r25,lo8(0)
 791 0410 8081      		ldi r26,lo8(0)
 792 0412 882F      		ldi r27,hi8(0)
 793 0414 90E0      		movw r18,r24
 794 0416 A0E0      		movw r20,r26
 795 0418 B0E0      		andi r18,lo8(248)
 796 041a 2227      		andi r19,hi8(248)
 797 041c 382F      		andi r20,hlo8(248)
 798 041e 492F      		andi r21,hhi8(248)
 799 0420 5A2F      		ldd r24,Y+1
 800 0422 8981      		ldd r25,Y+2
 801 0424 9A81      		ldd r26,Y+3
 802 0426 AB81      		ldd r27,Y+4
 803 0428 BC81      		or r24,r18
 804 042a 822B      		or r25,r19
 805 042c 932B      		or r26,r20
 806 042e A42B      		or r27,r21
 807 0430 B52B      		std Y+1,r24
 808 0432 8983      		std Y+2,r25
 809 0434 9A83      		std Y+3,r26
 810 0436 AB83      		std Y+4,r27
 291:can_at90can128.c **** 	id |= (CANIDT4 & 0xF8);	//last 3 bits are functional bits
 812               	r25,Y+2
 813               		ldd r26,Y+3
 814 043a E0EF      		ldd r27,Y+4
 815 043c F0E0      		set
 816 043e 8081      		bld __zero_reg__,3-1
 817 0440 882F      	1:	lsr r27
 818 0442 90E0      		ror r26
 819 0444 A0E0      		ror r25
 820 0446 B0E0      		ror r24
 821 0448 9C01      		lsr __zero_reg__
 822 044a AD01      		brne 1b
 823 044c 287F      		std Y+1,r24
 824 044e 3070      		std Y+2,r25
 825 0450 4070      		std Y+3,r26
 826 0452 5070      		std Y+4,r27
 828 0456 9A81      	.LM62:
 829 0458 AB81      		ldd r24,Y+1
 830 045a BC81      		ldd r25,Y+2
 831 045c 822B      		ldd r26,Y+3
 832 045e 932B      		ldd r27,Y+4
 834 0462 B52B      	.LM63:
 835 0464 8983      		movw r22,r24
 836 0466 9A83      		movw r24,r26
 837 0468 AB83      	/* epilogue start */
 838 046a BC83      		pop __tmp_reg__
 292:can_at90can128.c **** 	id >>= 3;
 839               	_reg__
 840               		pop __tmp_reg__
 841 046c 8981      		pop r28
 842 046e 9A81      		pop r29
 843 0470 AB81      		ret
 848 047a A795      	.Lscope6:
 851 0480 1694      	.global	can_set_mob_mode
 853 0484 8983      	can_set_mob_mode:
 855 0488 AB83      	.LM64:
 856 048a BC83      	.LFBB7:
 293:can_at90can128.c **** 
 294:can_at90can128.c **** 	return id;
 857               	8
 858               		rcall .
 859 048c 8981      		push __tmp_reg__
 860 048e 9A81      		in r28,__SP_L__
 861 0490 AB81      		in r29,__SP_H__
 862 0492 BC81      	/* prologue: function */
 295:can_at90can128.c **** }
 863               	me size = 3 */
 864               		std Y+1,r24
 866 0496 CD01      	.LM65:
 867               		ldi r26,lo8(239)
 868 0498 0F90      		ldi r27,hi8(239)
 869 049a 0F90      		ldi r30,lo8(239)
 870 049c 0F90      		ldi r31,hi8(239)
 871 049e 0F90      		ld r24,Z
 872 04a0 CF91      		ori r24,lo8(16)
 873 04a2 DF91      		st X,r24
 875               	.LM66:
 876               		ldd r24,Y+1
 877               		mov r18,r24
 878               		ldi r19,lo8(0)
 879               		std Y+3,r19
 880               		std Y+2,r18
 881               		ldd r24,Y+2
 882               		ldd r25,Y+3
 883               		cpi r24,2
 884               		cpc r25,__zero_reg__
 296:can_at90can128.c **** /* Set mode for selected MOB */
 297:can_at90can128.c **** void can_set_mob_mode(uint8_t mode)
 298:can_at90can128.c **** {
 885               	ldd r18,Y+2
 886               		ldd r19,Y+3
 887               		cpi r18,3
 888 04a6 DF93      		cpc r19,__zero_reg__
 889 04a8 CF93      		brge .L34
 890 04aa 00D0      		ldd r24,Y+2
 891 04ac 0F92      		ldd r25,Y+3
 892 04ae CDB7      		sbiw r24,0
 893 04b0 DEB7      		breq .L29
 894               		ldd r18,Y+2
 895               		ldd r19,Y+3
 896 04b2 8983      		cpi r18,1
 299:can_at90can128.c **** 	setbit(CANCDMOB, IDE);
 897               	ero_reg__
 898               		breq .L30
 899 04b4 AFEE      		rjmp .L35
 900 04b6 B0E0      	.L34:
 901 04b8 EFEE      		ldd r24,Y+2
 902 04ba F0E0      		ldd r25,Y+3
 903 04bc 8081      		cpi r24,3
 904 04be 8061      		cpc r25,__zero_reg__
 905 04c0 8C93      		brne .+2
 300:can_at90can128.c **** 
 301:can_at90can128.c **** 	switch(mode)
 906               	2
 907               		ldd r18,Y+2
 908 04c2 8981      		ldd r19,Y+3
 909 04c4 282F      		cpi r18,4
 910 04c6 30E0      		cpc r19,__zero_reg__
 911 04c8 3B83      		brne .+2
 912 04ca 2A83      		rjmp .L33
 913 04cc 8A81      		rjmp .L35
 914 04ce 9B81      	.L29:
 916 04d2 9105      	.LM67:
 917 04d4 01F4      		ldi r26,lo8(239)
 918 04d6 00C0      		ldi r27,hi8(239)
 919 04d8 2A81      		ldi r30,lo8(239)
 920 04da 3B81      		ldi r31,hi8(239)
 921 04dc 2330      		ld r24,Z
 922 04de 3105      		andi r24,lo8(-65)
 923 04e0 04F4      		st X,r24
 925 04e4 9B81      	.LM68:
 926 04e6 0097      		ldi r26,lo8(239)
 927 04e8 01F0      		ldi r27,hi8(239)
 928 04ea 2A81      		ldi r30,lo8(239)
 929 04ec 3B81      		ldi r31,hi8(239)
 930 04ee 2130      		ld r24,Z
 931 04f0 3105      		andi r24,lo8(127)
 932 04f2 01F0      		st X,r24
 934               	.LM69:
 935 04f6 8A81      		ldi r26,lo8(239)
 936 04f8 9B81      		ldi r27,hi8(239)
 937 04fa 8330      		ldi r30,lo8(239)
 938 04fc 9105      		ldi r31,hi8(239)
 939 04fe 01F4      		ld r24,Z
 940 0500 00C0      		andi r24,lo8(-33)
 941 0502 2A81      		st X,r24
 943 0506 2430      	.LM70:
 944 0508 3105      		ldi r26,lo8(240)
 945 050a 01F4      		ldi r27,hi8(240)
 946 050c 00C0      		ldi r30,lo8(240)
 947 050e 00C0      		ldi r31,hi8(240)
 948               		ld r24,Z
 302:can_at90can128.c **** 	{
 303:can_at90can128.c **** 		case DISABLED:
 304:can_at90can128.c **** 			clearbit(CANCDMOB, CONMOB0);
 949               	8,.LM71-.LFBB7
 950               	.LM71:
 951 0510 AFEE      		ldi r26,lo8(244)
 952 0512 B0E0      		ldi r27,hi8(244)
 953 0514 EFEE      		ldi r30,lo8(244)
 954 0516 F0E0      		ldi r31,hi8(244)
 955 0518 8081      		ld r24,Z
 956 051a 8F7B      		andi r24,lo8(-5)
 957 051c 8C93      		st X,r24
 305:can_at90can128.c **** 			clearbit(CANCDMOB, CONMOB1);
 958               	5
 959               	.L30:
 961 0520 B0E0      	.LM72:
 962 0522 EFEE      		ldi r26,lo8(239)
 963 0524 F0E0      		ldi r27,hi8(239)
 964 0526 8081      		ldi r30,lo8(239)
 965 0528 8F77      		ldi r31,hi8(239)
 966 052a 8C93      		ld r24,Z
 306:can_at90can128.c **** 			clearbit(CANCDMOB,RPLV);
 967               	lo8(64)
 968               		st X,r24
 970 052e B0E0      	.LM73:
 971 0530 EFEE      		ldi r26,lo8(239)
 972 0532 F0E0      		ldi r27,hi8(239)
 973 0534 8081      		ldi r30,lo8(239)
 974 0536 8F7D      		ldi r31,hi8(239)
 975 0538 8C93      		ld r24,Z
 307:can_at90can128.c **** 			clearbit(CANIDT4, RTRTAG);
 976               	,lo8(127)
 977               		st X,r24
 979 053c B0E0      	.LM74:
 980 053e E0EF      		ldi r26,lo8(239)
 981 0540 F0E0      		ldi r27,hi8(239)
 982 0542 8081      		ldi r30,lo8(239)
 983 0544 8B7F      		ldi r31,hi8(239)
 984 0546 8C93      		ld r24,Z
 308:can_at90can128.c **** 			clearbit(CANIDM4, RTRMSK);
 985               	,lo8(-33)
 986               		st X,r24
 988 054a B0E0      	.LM75:
 989 054c E4EF      		ldi r26,lo8(240)
 990 054e F0E0      		ldi r27,hi8(240)
 991 0550 8081      		ldi r30,lo8(240)
 992 0552 8B7F      		ldi r31,hi8(240)
 993 0554 8C93      		ld r24,Z
 994 0556 00C0      		andi r24,lo8(-5)
 995               		st X,r24
 309:can_at90can128.c **** 			break;
 310:can_at90can128.c **** 		case TRANSMIT_DATA:
 311:can_at90can128.c **** 			setbit(CANCDMOB, CONMOB0);
 996               	.L31:
 998 0558 AFEE      	.LM76:
 999 055a B0E0      		ldi r26,lo8(239)
 1000 055c EFEE      		ldi r27,hi8(239)
 1001 055e F0E0      		ldi r30,lo8(239)
 1002 0560 8081      		ldi r31,hi8(239)
 1003 0562 8064      		ld r24,Z
 1004 0564 8C93      		andi r24,lo8(127)
 312:can_at90can128.c **** 			clearbit(CANCDMOB, CONMOB1);
 1005               	
 1007 0566 AFEE      	.LM77:
 1008 0568 B0E0      		ldi r26,lo8(239)
 1009 056a EFEE      		ldi r27,hi8(239)
 1010 056c F0E0      		ldi r30,lo8(239)
 1011 056e 8081      		ldi r31,hi8(239)
 1012 0570 8F77      		ld r24,Z
 1013 0572 8C93      		ori r24,lo8(64)
 313:can_at90can128.c **** 			clearbit(CANCDMOB,RPLV);
 1014               	4
 1016 0574 AFEE      	.LM78:
 1017 0576 B0E0      		ldi r26,lo8(239)
 1018 0578 EFEE      		ldi r27,hi8(239)
 1019 057a F0E0      		ldi r30,lo8(239)
 1020 057c 8081      		ldi r31,hi8(239)
 1021 057e 8F7D      		ld r24,Z
 1022 0580 8C93      		andi r24,lo8(-33)
 314:can_at90can128.c **** 			clearbit(CANIDT4, RTRTAG);
 1023               	
 1025 0582 A0EF      	.LM79:
 1026 0584 B0E0      		ldi r26,lo8(240)
 1027 0586 E0EF      		ldi r27,hi8(240)
 1028 0588 F0E0      		ldi r30,lo8(240)
 1029 058a 8081      		ldi r31,hi8(240)
 1030 058c 8B7F      		ld r24,Z
 1031 058e 8C93      		ori r24,lo8(4)
 1032 0590 00C0      		st X,r24
 1033               		rjmp .L35
 315:can_at90can128.c **** 			break;
 316:can_at90can128.c **** 		case TRANSMIT_REMOTE:
 317:can_at90can128.c **** 			clearbit(CANCDMOB, CONMOB1);
 1034               	abn	68,0,323,.LM80-.LFBB7
 1035               	.LM80:
 1036 0592 AFEE      		ldi r26,lo8(239)
 1037 0594 B0E0      		ldi r27,hi8(239)
 1038 0596 EFEE      		ldi r30,lo8(239)
 1039 0598 F0E0      		ldi r31,hi8(239)
 1040 059a 8081      		ld r24,Z
 1041 059c 8F77      		andi r24,lo8(-65)
 1042 059e 8C93      		st X,r24
 318:can_at90can128.c **** 			setbit(CANCDMOB, CONMOB0);
 1043               	8,0,324,.LM81-.LFBB7
 1044               	.LM81:
 1045 05a0 AFEE      		ldi r26,lo8(239)
 1046 05a2 B0E0      		ldi r27,hi8(239)
 1047 05a4 EFEE      		ldi r30,lo8(239)
 1048 05a6 F0E0      		ldi r31,hi8(239)
 1049 05a8 8081      		ld r24,Z
 1050 05aa 8064      		ori r24,lo8(-128)
 1051 05ac 8C93      		st X,r24
 319:can_at90can128.c **** 			clearbit(CANCDMOB,RPLV);
 1052               	8,0,325,.LM82-.LFBB7
 1053               	.LM82:
 1054 05ae AFEE      		ldi r26,lo8(239)
 1055 05b0 B0E0      		ldi r27,hi8(239)
 1056 05b2 EFEE      		ldi r30,lo8(239)
 1057 05b4 F0E0      		ldi r31,hi8(239)
 1058 05b6 8081      		ld r24,Z
 1059 05b8 8F7D      		andi r24,lo8(-33)
 1060 05ba 8C93      		st X,r24
 320:can_at90can128.c **** 			setbit(CANIDT4, RTRTAG);
 1061               	8,0,326,.LM83-.LFBB7
 1062               	.LM83:
 1063 05bc A0EF      		ldi r26,lo8(240)
 1064 05be B0E0      		ldi r27,hi8(240)
 1065 05c0 E0EF      		ldi r30,lo8(240)
 1066 05c2 F0E0      		ldi r31,hi8(240)
 1067 05c4 8081      		ld r24,Z
 1068 05c6 8460      		andi r24,lo8(-5)
 1069 05c8 8C93      		st X,r24
 1070 05ca 00C0      		rjmp .L35
 1071               	.L33:
 321:can_at90can128.c **** 			break;
 322:can_at90can128.c **** 		case RECEIVE_DATA:
 323:can_at90can128.c **** 			clearbit(CANCDMOB, CONMOB0);
 1072               	0,329,.LM84-.LFBB7
 1073               	.LM84:
 1074 05cc AFEE      		ldi r26,lo8(239)
 1075 05ce B0E0      		ldi r27,hi8(239)
 1076 05d0 EFEE      		ldi r30,lo8(239)
 1077 05d2 F0E0      		ldi r31,hi8(239)
 1078 05d4 8081      		ld r24,Z
 1079 05d6 8F7B      		andi r24,lo8(-65)
 1080 05d8 8C93      		st X,r24
 324:can_at90can128.c **** 			setbit(CANCDMOB, CONMOB1);
 1081               	8,0,330,.LM85-.LFBB7
 1082               	.LM85:
 1083 05da AFEE      		ldi r26,lo8(239)
 1084 05dc B0E0      		ldi r27,hi8(239)
 1085 05de EFEE      		ldi r30,lo8(239)
 1086 05e0 F0E0      		ldi r31,hi8(239)
 1087 05e2 8081      		ld r24,Z
 1088 05e4 8068      		ori r24,lo8(-128)
 1089 05e6 8C93      		st X,r24
 325:can_at90can128.c **** 			clearbit(CANCDMOB,RPLV);
 1090               	8,0,331,.LM86-.LFBB7
 1091               	.LM86:
 1092 05e8 AFEE      		ldi r26,lo8(239)
 1093 05ea B0E0      		ldi r27,hi8(239)
 1094 05ec EFEE      		ldi r30,lo8(239)
 1095 05ee F0E0      		ldi r31,hi8(239)
 1096 05f0 8081      		ld r24,Z
 1097 05f2 8F7D      		ori r24,lo8(32)
 1098 05f4 8C93      		st X,r24
 326:can_at90can128.c **** 			clearbit(CANIDT4, RTRTAG);
 1099               	8,0,332,.LM87-.LFBB7
 1100               	.LM87:
 1101 05f6 A0EF      		ldi r26,lo8(240)
 1102 05f8 B0E0      		ldi r27,hi8(240)
 1103 05fa E0EF      		ldi r30,lo8(240)
 1104 05fc F0E0      		ldi r31,hi8(240)
 1105 05fe 8081      		ld r24,Z
 1106 0600 8B7F      		ori r24,lo8(4)
 1107 0602 8C93      		st X,r24
 1108 0604 00C0      	.L35:
 1109               	/* epilogue start */
 327:can_at90can128.c **** 			break;
 328:can_at90can128.c **** 		case AUTO_REPLY:
 329:can_at90can128.c **** 			clearbit(CANCDMOB, CONMOB0);
 1110               	0,337,.LM88-.LFBB7
 1111               	.LM88:
 1112 0606 AFEE      		pop __tmp_reg__
 1113 0608 B0E0      		pop __tmp_reg__
 1114 060a EFEE      		pop __tmp_reg__
 1115 060c F0E0      		pop r28
 1116 060e 8081      		pop r29
 1117 0610 8F7B      		ret
 330:can_at90can128.c **** 			setbit(CANCDMOB, CONMOB1);
 1119               	
 1121 0614 AFEE      	.global	can_get_mob_mode
 1123 0618 EFEE      	can_get_mob_mode:
 1125 061c 8081      	.LM89:
 1126 061e 8068      	.LFBB8:
 1127 0620 8C93      		push r29
 331:can_at90can128.c **** 			setbit(CANCDMOB,RPLV);
 1128               	8
 1129               		push __tmp_reg__
 1130 0622 AFEE      		in r28,__SP_L__
 1131 0624 B0E0      		in r29,__SP_H__
 1132 0626 EFEE      	/* prologue: function */
 1133 0628 F0E0      	/* frame size = 1 */
 1135 062c 8062      	.LM90:
 1136 062e 8C93      		std Y+1,__zero_reg__
 332:can_at90can128.c **** 			setbit(CANIDT4, RTRTAG);
 1137               	8,0,344,.LM91-.LFBB8
 1138               	.LM91:
 1139 0630 A0EF      		ldi r30,lo8(239)
 1140 0632 B0E0      		ldi r31,hi8(239)
 1141 0634 E0EF      		ld r24,Z
 1142 0636 F0E0      		tst r24
 1143 0638 8081      		brlt .L37
 1144 063a 8460      		ldi r30,lo8(239)
 1145 063c 8C93      		ldi r31,hi8(239)
 1146               		ld r24,Z
 1147               		mov r24,r24
 333:can_at90can128.c **** 			break;
 334:can_at90can128.c **** 		default:
 335:can_at90can128.c **** 			break;
 336:can_at90can128.c **** 	}
 337:can_at90can128.c **** }
 1148               	8(0)
 1149               		andi r24,lo8(64)
 1150 063e 0F90      		andi r25,hi8(64)
 1151 0640 0F90      		sbiw r24,0
 1152 0642 0F90      		brne .L37
 1154 0646 DF91      	.LM92:
 1155 0648 0895      		std Y+1,__zero_reg__
 1156               		rjmp .L38
 1157               	.L37:
 1159               	.LM93:
 1160               		ldi r30,lo8(239)
 1161               		ldi r31,hi8(239)
 338:can_at90can128.c **** /* Get mode for selected MOB */
 339:can_at90can128.c **** uint8_t can_get_mob_mode(void)
 340:can_at90can128.c **** {
 1162               	 r24
 1163               		brlt .L39
 1164               		ldi r30,lo8(239)
 1165 064a DF93      		ldi r31,hi8(239)
 1166 064c CF93      		ld r24,Z
 1167 064e 0F92      		mov r24,r24
 1168 0650 CDB7      		ldi r25,lo8(0)
 1169 0652 DEB7      		andi r24,lo8(64)
 1170               		andi r25,hi8(64)
 1171               		sbiw r24,0
 341:can_at90can128.c **** 	uint8_t	mode;
 342:can_at90can128.c **** 	mode = 0;
 1172               	
 1173               		ldi r30,lo8(240)
 1174 0654 1982      		ldi r31,hi8(240)
 343:can_at90can128.c **** 
 344:can_at90can128.c **** 	if (!getbit(CANCDMOB, CONMOB1) && !getbit(CANCDMOB, CONMOB0))
 1175               	d r24,Z
 1176               		mov r24,r24
 1177 0656 EFEE      		ldi r25,lo8(0)
 1178 0658 F0E0      		andi r24,lo8(4)
 1179 065a 8081      		andi r25,hi8(4)
 1180 065c 8823      		sbiw r24,0
 1181 065e 04F0      		brne .L39
 1183 0662 F0E0      	.LM94:
 1184 0664 8081      		ldi r24,lo8(1)
 1185 0666 882F      		std Y+1,r24
 1186 0668 90E0      		rjmp .L38
 1187 066a 8074      	.L39:
 1189 066e 0097      	.LM95:
 1190 0670 01F4      		ldi r30,lo8(239)
 345:can_at90can128.c **** 	{
 346:can_at90can128.c **** 		mode = DISABLED;
 1191               	)
 1192               		ld r24,Z
 1193 0672 1982      		tst r24
 1194 0674 00C0      		brlt .L40
 1195               		ldi r30,lo8(239)
 347:can_at90can128.c **** 	}
 348:can_at90can128.c **** 	else if (!getbit(CANCDMOB, CONMOB1) && getbit(CANCDMOB, CONMOB0) && !getbit(CANIDT4, RTRTAG))
 1196               	r31,hi8(239)
 1197               		ld r24,Z
 1198 0676 EFEE      		mov r24,r24
 1199 0678 F0E0      		ldi r25,lo8(0)
 1200 067a 8081      		andi r24,lo8(64)
 1201 067c 8823      		andi r25,hi8(64)
 1202 067e 04F0      		sbiw r24,0
 1203 0680 EFEE      		breq .L40
 1204 0682 F0E0      		ldi r30,lo8(240)
 1205 0684 8081      		ldi r31,hi8(240)
 1206 0686 882F      		ld r24,Z
 1207 0688 90E0      		mov r24,r24
 1208 068a 8074      		ldi r25,lo8(0)
 1209 068c 9070      		andi r24,lo8(4)
 1210 068e 0097      		andi r25,hi8(4)
 1211 0690 01F0      		sbiw r24,0
 1212 0692 E0EF      		breq .L40
 1214 0696 8081      	.LM96:
 1215 0698 882F      		ldi r24,lo8(2)
 1216 069a 90E0      		std Y+1,r24
 1217 069c 8470      		rjmp .L38
 1218 069e 9070      	.L40:
 1220 06a2 01F4      	.LM97:
 349:can_at90can128.c **** 	{
 350:can_at90can128.c **** 		mode = TRANSMIT_DATA;
 1221               	1,hi8(239)
 1222               		ld r24,Z
 1223 06a4 81E0      		tst r24
 1224 06a6 8983      		brge .L41
 1225 06a8 00C0      		ldi r30,lo8(239)
 1226               		ldi r31,hi8(239)
 351:can_at90can128.c **** 	}
 352:can_at90can128.c **** 	else if (!getbit(CANCDMOB, CONMOB1) && getbit(CANCDMOB, CONMOB0) && getbit(CANIDT4, RTRTAG))
 1227               	4,Z
 1228               		mov r24,r24
 1229 06aa EFEE      		ldi r25,lo8(0)
 1230 06ac F0E0      		andi r24,lo8(64)
 1231 06ae 8081      		andi r25,hi8(64)
 1232 06b0 8823      		sbiw r24,0
 1233 06b2 04F0      		brne .L41
 1234 06b4 EFEE      		ldi r30,lo8(240)
 1235 06b6 F0E0      		ldi r31,hi8(240)
 1236 06b8 8081      		ld r24,Z
 1237 06ba 882F      		mov r24,r24
 1238 06bc 90E0      		ldi r25,lo8(0)
 1239 06be 8074      		andi r24,lo8(4)
 1240 06c0 9070      		andi r25,hi8(4)
 1241 06c2 0097      		sbiw r24,0
 1242 06c4 01F0      		brne .L41
 1244 06c8 F0E0      	.LM98:
 1245 06ca 8081      		ldi r24,lo8(3)
 1246 06cc 882F      		std Y+1,r24
 1247 06ce 90E0      		rjmp .L38
 1248 06d0 8470      	.L41:
 1250 06d4 0097      	.LM99:
 1251 06d6 01F0      		ldi r30,lo8(239)
 353:can_at90can128.c **** 	{
 354:can_at90can128.c **** 		mode = TRANSMIT_REMOTE;
 1252               	,Z
 1253               		tst r24
 1254 06d8 82E0      		brge .L38
 1255 06da 8983      		ldi r30,lo8(239)
 1256 06dc 00C0      		ldi r31,hi8(239)
 1257               		ld r24,Z
 355:can_at90can128.c **** 	}
 356:can_at90can128.c **** 	else if (getbit(CANCDMOB, CONMOB1) && !getbit(CANCDMOB, CONMOB0) && !getbit(CANIDT4, RTRTAG))
 1258               	24,r24
 1259               		ldi r25,lo8(0)
 1260 06de EFEE      		andi r24,lo8(64)
 1261 06e0 F0E0      		andi r25,hi8(64)
 1262 06e2 8081      		sbiw r24,0
 1263 06e4 8823      		brne .L38
 1264 06e6 04F4      		ldi r30,lo8(239)
 1265 06e8 EFEE      		ldi r31,hi8(239)
 1266 06ea F0E0      		ld r24,Z
 1267 06ec 8081      		mov r24,r24
 1268 06ee 882F      		ldi r25,lo8(0)
 1269 06f0 90E0      		andi r24,lo8(32)
 1270 06f2 8074      		andi r25,hi8(32)
 1271 06f4 9070      		sbiw r24,0
 1272 06f6 0097      		breq .L38
 1273 06f8 01F4      		ldi r30,lo8(240)
 1274 06fa E0EF      		ldi r31,hi8(240)
 1275 06fc F0E0      		ld r24,Z
 1276 06fe 8081      		mov r24,r24
 1277 0700 882F      		ldi r25,lo8(0)
 1278 0702 90E0      		andi r24,lo8(4)
 1279 0704 8470      		andi r25,hi8(4)
 1280 0706 9070      		sbiw r24,0
 1281 0708 0097      		breq .L38
 357:can_at90can128.c **** 	{
 358:can_at90can128.c **** 		mode = RECEIVE_DATA;
 1283               	std Y+1,r24
 1284               	.L38:
 1286 070e 8983      	.LM101:
 1287 0710 00C0      		ldd r24,Y+1
 1288               	/* epilogue start */
 359:can_at90can128.c **** 	}else if (getbit(CANCDMOB, CONMOB1) && !getbit(CANCDMOB, CONMOB0) && getbit(CANCDMOB,RPLV) && getb
 1289               	n	68,0,365,.LM102-.LFBB8
 1290               	.LM102:
 1291 0712 EFEE      		pop __tmp_reg__
 1292 0714 F0E0      		pop r28
 1293 0716 8081      		pop r29
 1294 0718 8823      		ret
 1299 0722 882F      	.Lscope8:
 1303 072a 0097      	.global	can_set_mob_data
 1305 072e EFEE      	can_set_mob_data:
 1307 0732 8081      	.LM103:
 1308 0734 882F      	.LFBB9:
 1309 0736 90E0      		push r29
 1310 0738 8072      		push r28
 1311 073a 9070      		rcall .
 1312 073c 0097      		rcall .
 1313 073e 01F0      		in r28,__SP_L__
 1314 0740 E0EF      		in r29,__SP_H__
 1315 0742 F0E0      	/* prologue: function */
 1316 0744 8081      	/* frame size = 4 */
 1317 0746 882F      		std Y+3,r25
 1318 0748 90E0      		std Y+2,r24
 1319 074a 8470      		std Y+4,r22
 1321 074e 0097      	.LM104:
 1322 0750 01F0      		ldd r24,Y+4
 360:can_at90can128.c **** 	{
 361:can_at90can128.c **** 		mode = AUTO_REPLY;
 1323               	 r24,lo8(8)
 1324               		andi r25,hi8(8)
 1325 0752 84E0      		sbiw r24,0
 1326 0754 8983      		breq .L44
 362:can_at90can128.c **** 	}
 363:can_at90can128.c **** 
 364:can_at90can128.c **** 	return mode;
 1328               	5:
 1329               		ldi r26,lo8(239)
 1330 0756 8981      		ldi r27,hi8(239)
 1331               		ldi r30,lo8(239)
 365:can_at90can128.c **** }
 1332               	 r31,hi8(239)
 1333               		ld r24,Z
 1334 0758 0F90      		ori r24,lo8(8)
 1335 075a CF91      		st X,r24
 1336 075c DF91      		rjmp .L45
 1337 075e 0895      	.L44:
 1339               	.LM106:
 1340               		ldi r26,lo8(239)
 1341               		ldi r27,hi8(239)
 1342               		ldi r30,lo8(239)
 1343               		ldi r31,hi8(239)
 1344               		ld r24,Z
 1345               		andi r24,lo8(-9)
 1346               		st X,r24
 1347               	.L45:
 366:can_at90can128.c **** /* Set data length for selected MOB */
 367:can_at90can128.c **** void can_set_mob_data(uint8_t *data, uint8_t length)
 368:can_at90can128.c **** {
 1349               	Y+4
 1350               		mov r24,r24
 1351               		ldi r25,lo8(0)
 1352 0760 DF93      		andi r24,lo8(4)
 1353 0762 CF93      		andi r25,hi8(4)
 1354 0764 00D0      		sbiw r24,0
 1355 0766 00D0      		breq .L46
 1357 076a DEB7      	.LM108:
 1358               		ldi r26,lo8(239)
 1359               		ldi r27,hi8(239)
 1360 076c 9B83      		ldi r30,lo8(239)
 1361 076e 8A83      		ldi r31,hi8(239)
 1362 0770 6C83      		ld r24,Z
 369:can_at90can128.c **** 	uint8_t	i;
 370:can_at90can128.c **** 	// Set data length
 371:can_at90can128.c **** 	if (length & (0x01 << 3))
 1363               	)
 1364               		st X,r24
 1365 0772 8C81      		rjmp .L47
 1366 0774 882F      	.L46:
 1368 0778 8870      	.LM109:
 1369 077a 9070      		ldi r26,lo8(239)
 1370 077c 0097      		ldi r27,hi8(239)
 1371 077e 01F0      		ldi r30,lo8(239)
 372:can_at90can128.c **** 	{
 373:can_at90can128.c **** 		setbit(CANCDMOB, DLC3);
 1372               	hi8(239)
 1373               		ld r24,Z
 1374 0780 AFEE      		andi r24,lo8(-5)
 1375 0782 B0E0      		st X,r24
 1376 0784 EFEE      	.L47:
 1378 0788 8081      	.LM110:
 1379 078a 8860      		ldd r24,Y+4
 1380 078c 8C93      		mov r24,r24
 1381 078e 00C0      		ldi r25,lo8(0)
 1382               		andi r24,lo8(2)
 374:can_at90can128.c **** 	}
 375:can_at90can128.c **** 	else
 376:can_at90can128.c **** 	{
 377:can_at90can128.c **** 		clearbit(CANCDMOB, DLC3);
 1383               	i8(2)
 1384               		sbiw r24,0
 1385 0790 AFEE      		breq .L48
 1387 0794 EFEE      	.LM111:
 1388 0796 F0E0      		ldi r26,lo8(239)
 1389 0798 8081      		ldi r27,hi8(239)
 1390 079a 877F      		ldi r30,lo8(239)
 1391 079c 8C93      		ldi r31,hi8(239)
 1392               		ld r24,Z
 378:can_at90can128.c **** 	}
 379:can_at90can128.c **** 	
 380:can_at90can128.c **** 	if (length & (0x01 << 2))
 1393               	o8(2)
 1394               		st X,r24
 1395 079e 8C81      		rjmp .L49
 1396 07a0 882F      	.L48:
 1398 07a4 8470      	.LM112:
 1399 07a6 9070      		ldi r26,lo8(239)
 1400 07a8 0097      		ldi r27,hi8(239)
 1401 07aa 01F0      		ldi r30,lo8(239)
 381:can_at90can128.c **** 	{
 382:can_at90can128.c **** 		setbit(CANCDMOB, DLC2);
 1402               	hi8(239)
 1403               		ld r24,Z
 1404 07ac AFEE      		andi r24,lo8(-3)
 1405 07ae B0E0      		st X,r24
 1406 07b0 EFEE      	.L49:
 1408 07b4 8081      	.LM113:
 1409 07b6 8460      		ldd r24,Y+4
 1410 07b8 8C93      		mov r24,r24
 1411 07ba 00C0      		ldi r25,lo8(0)
 1412               		andi r24,lo8(1)
 383:can_at90can128.c **** 	}
 384:can_at90can128.c **** 	else
 385:can_at90can128.c **** 	{
 386:can_at90can128.c **** 		clearbit(CANCDMOB, DLC2);
 1413               	i8(1)
 1414               		tst r24
 1415 07bc AFEE      		breq .L50
 1417 07c0 EFEE      	.LM114:
 1418 07c2 F0E0      		ldi r26,lo8(239)
 1419 07c4 8081      		ldi r27,hi8(239)
 1420 07c6 8B7F      		ldi r30,lo8(239)
 1421 07c8 8C93      		ldi r31,hi8(239)
 1422               		ld r24,Z
 387:can_at90can128.c **** 	}
 388:can_at90can128.c **** 	
 389:can_at90can128.c **** 	if (length & (0x01 << 1))
 1423               	o8(1)
 1424               		st X,r24
 1425 07ca 8C81      		rjmp .L51
 1426 07cc 882F      	.L50:
 1428 07d0 8270      	.LM115:
 1429 07d2 9070      		ldi r26,lo8(239)
 1430 07d4 0097      		ldi r27,hi8(239)
 1431 07d6 01F0      		ldi r30,lo8(239)
 390:can_at90can128.c **** 	{
 391:can_at90can128.c **** 		setbit(CANCDMOB, DLC1);
 1432               	hi8(239)
 1433               		ld r24,Z
 1434 07d8 AFEE      		andi r24,lo8(-2)
 1435 07da B0E0      		st X,r24
 1436 07dc EFEE      	.L51:
 1438 07e0 8081      	.LM116:
 1439 07e2 8260      		std Y+1,__zero_reg__
 1440 07e4 8C93      		rjmp .L52
 1441 07e6 00C0      	.L53:
 392:can_at90can128.c **** 	}
 393:can_at90can128.c **** 	else
 394:can_at90can128.c **** 	{
 395:can_at90can128.c **** 		clearbit(CANCDMOB, DLC1);
 1443               	i r26,lo8(250)
 1444               		ldi r27,hi8(250)
 1445 07e8 AFEE      		ldd r24,Y+1
 1446 07ea B0E0      		mov r18,r24
 1447 07ec EFEE      		ldi r19,lo8(0)
 1448 07ee F0E0      		ldd r24,Y+2
 1449 07f0 8081      		ldd r25,Y+3
 1450 07f2 8D7F      		movw r30,r24
 1451 07f4 8C93      		add r30,r18
 1452               		adc r31,r19
 396:can_at90can128.c **** 	}
 397:can_at90can128.c **** 	
 398:can_at90can128.c **** 	if (length & (0x01 << 0))
 1453               		st X,r24
 1455 07f6 8C81      	.LM118:
 1456 07f8 882F      		ldd r24,Y+1
 1457 07fa 90E0      		subi r24,lo8(-(1))
 1458 07fc 8170      		std Y+1,r24
 1459 07fe 9070      	.L52:
 1460 0800 8823      		ldd r25,Y+1
 1461 0802 01F0      		ldd r24,Y+4
 399:can_at90can128.c **** 	{
 400:can_at90can128.c **** 		setbit(CANCDMOB, DLC0);
 1462               	24
 1463               		brlo .L53
 1464 0804 AFEE      	/* epilogue start */
 1466 0808 EFEE      	.LM119:
 1467 080a F0E0      		pop __tmp_reg__
 1468 080c 8081      		pop __tmp_reg__
 1469 080e 8160      		pop __tmp_reg__
 1470 0810 8C93      		pop __tmp_reg__
 1471 0812 00C0      		pop r28
 1472               		pop r29
 401:can_at90can128.c **** 	}
 402:can_at90can128.c **** 	else
 403:can_at90can128.c **** 	{
 404:can_at90can128.c **** 		clearbit(CANCDMOB, DLC0);
 1473               		can_set_mob_data, .-can_set_mob_data
 1477 0818 EFEE      	.Lscope9:
 1479 081c 8081      	.global	can_get_mob_data
 1481 0820 8C93      	can_get_mob_data:
 405:can_at90can128.c **** 	}
 406:can_at90can128.c **** 	// Set data
 407:can_at90can128.c **** 	for (i = 0; i < length; i++)
 1483               	FBB10:
 1484               		push r29
 1485 0822 1982      		push r28
 1486 0824 00C0      		in r28,__SP_L__
 1487               		in r29,__SP_H__
 408:can_at90can128.c **** 	{
 409:can_at90can128.c **** 		CANMSG	= data[i];
 1488               	 r28,25
 1489               		in __tmp_reg__,__SREG__
 1490 0826 AAEF      		cli
 1491 0828 B0E0      		out __SP_H__,r29
 1492 082a 8981      		out __SREG__,__tmp_reg__
 1493 082c 282F      		out __SP_L__,r28
 1494 082e 30E0      	/* prologue: function */
 1495 0830 8A81      	/* frame size = 25 */
 1496 0832 9B81      		std Y+20,r25
 1497 0834 FC01      		std Y+19,r24
 1499 0838 F31F      	.LM121:
 1500 083a 8081      		std Y+1,__zero_reg__
 1501 083c 8C93      		rjmp .L56
 1502               	.L57:
 1504 083e 8981      	.LM122:
 1505 0840 8F5F      		ldd r24,Y+1
 1506 0842 8983      		mov r18,r24
 1507               		ldi r19,lo8(0)
 1508 0844 9981      		ldi r30,lo8(250)
 1509 0846 8C81      		ldi r31,hi8(250)
 1510 0848 9817      		ld r20,Z
 1511 084a 00F0      		movw r24,r28
 1512               		adiw r24,11
 410:can_at90can128.c **** 	}
 411:can_at90can128.c **** }
 1513               	8
 1514               		adc r31,r19
 1515 084c 0F90      		st Z,r20
 1517 0850 0F90      	.LM123:
 1518 0852 0F90      		ldd r24,Y+1
 1519 0854 CF91      		subi r24,lo8(-(1))
 1520 0856 DF91      		std Y+1,r24
 1521 0858 0895      	.L56:
 1522               		ldd r24,Y+1
 1523               		cpi r24,lo8(8)
 1524               		brlo .L57
 1526               	.LM124:
 1527               		ldd r24,Y+19
 1528               		ldd r25,Y+20
 1529               		std Y+22,r25
 1530               		std Y+21,r24
 412:can_at90can128.c **** /* Get data for selected MOB */
 413:can_at90can128.c **** can_message can_get_mob_data(void)
 414:can_at90can128.c **** {
 1531               	w r30,2
 1532               		std Y+24,r31
 1533               		std Y+23,r30
 1534 085a DF93      		ldi r31,lo8(17)
 1535 085c CF93      		std Y+25,r31
 1536 085e CDB7      	.L58:
 1537 0860 DEB7      		ldd r30,Y+23
 1538 0862 6997      		ldd r31,Y+24
 1539 0864 0FB6      		ld r0,Z
 1540 0866 F894      		ldd r24,Y+23
 1541 0868 DEBF      		ldd r25,Y+24
 1542 086a 0FBE      		adiw r24,1
 1543 086c CDBF      		std Y+24,r25
 1544               		std Y+23,r24
 1545               		ldd r30,Y+21
 1546 086e 9C8B      		ldd r31,Y+22
 1547 0870 8B8B      		st Z,r0
 415:can_at90can128.c **** 	uint8_t	i;
 416:can_at90can128.c **** 	can_message	msg;
 417:can_at90can128.c **** 
 418:can_at90can128.c **** 	for (i = 0; i < 8; i++)
 1548               	d r25,Y+22
 1549               		adiw r24,1
 1550 0872 1982      		std Y+22,r25
 1551 0874 00C0      		std Y+21,r24
 1552               		ldd r25,Y+25
 419:can_at90can128.c **** 	{
 420:can_at90can128.c **** 		msg.data[i]	= CANMSG;
 1553               	 r25,lo8(-(-1))
 1554               		std Y+25,r25
 1555 0876 8981      		ldd r30,Y+25
 1556 0878 282F      		tst r30
 1557 087a 30E0      		brne .L58
 1559 087e F0E0      	.LM125:
 1560 0880 4081      		ldd r24,Y+19
 1561 0882 CE01      		ldd r25,Y+20
 1562 0884 0B96      	/* epilogue start */
 1563 0886 FC01      		adiw r28,25
 1564 0888 E20F      		in __tmp_reg__,__SREG__
 1565 088a F31F      		cli
 1566 088c 4083      		out __SP_H__,r29
 1567               		out __SREG__,__tmp_reg__
 1568               		out __SP_L__,r28
 1569 088e 8981      		pop r28
 1570 0890 8F5F      		pop r29
 1571 0892 8983      		ret
 421:can_at90can128.c **** 	}
 422:can_at90can128.c **** 
 423:can_at90can128.c **** 	return msg;
 1576               	10-.LFBB10
 1577               	.Lscope10:
 1580 089e 9E8B      	.global	can_set_mob_interrupt
 1582 08a2 FE01      	can_set_mob_interrupt:
 1584 08a6 F88F      	.LM126:
 1585 08a8 EF8B      	.LFBB11:
 1586 08aa F1E1      		push r29
 1587 08ac F98F      		push r28
 1588               		push __tmp_reg__
 1589 08ae EF89      		in r28,__SP_L__
 1590 08b0 F88D      		in r29,__SP_H__
 1591 08b2 0080      	/* prologue: function */
 1592 08b4 8F89      	/* frame size = 1 */
 1593 08b6 988D      		std Y+1,r24
 1595 08ba 988F      	.LM127:
 1596 08bc 8F8B      		ldd r24,Y+1
 1597 08be ED89      		cpi r24,lo8(8)
 1598 08c0 FE89      		brsh .L61
 1600 08c4 8D89      	.LM128:
 1601 08c6 9E89      		ldi r26,lo8(222)
 1602 08c8 0196      		ldi r27,hi8(222)
 1603 08ca 9E8B      		ldi r30,lo8(222)
 1604 08cc 8D8B      		ldi r31,hi8(222)
 1605 08ce 998D      		ld r24,Z
 1606 08d0 9150      		mov r20,r24
 1607 08d2 998F      		ldd r24,Y+1
 1608 08d4 E98D      		mov r18,r24
 1609 08d6 EE23      		ldi r19,lo8(0)
 1610 08d8 01F4      		ldi r24,lo8(1)
 424:can_at90can128.c **** }
 1611               	f
 1612               	1:	lsl r24
 1613 08da 8B89      		rol r25
 1614 08dc 9C89      	2:	dec r0
 1615               		brpl 1b
 1616 08de 6996      		or r24,r20
 1617 08e0 0FB6      		st X,r24
 1618 08e2 F894      		rjmp .L63
 1619 08e4 DEBF      	.L61:
 1621 08e8 CDBF      	.LM129:
 1622 08ea CF91      		ldd r24,Y+1
 1623 08ec DF91      		cpi r24,lo8(8)
 1624 08ee 0895      		brlo .L63
 1625               		ldd r24,Y+1
 1626               		cpi r24,lo8(15)
 1627               		brsh .L63
 1629               	.LM130:
 1630               		ldi r26,lo8(223)
 1631               		ldi r27,hi8(223)
 1632               		ldi r30,lo8(223)
 1633               		ldi r31,hi8(223)
 1634               		ld r24,Z
 1635               		mov r20,r24
 425:can_at90can128.c **** /* Set interrupt for given MOB */
 426:can_at90can128.c **** void can_set_mob_interrupt(uint8_t object)
 427:can_at90can128.c **** {
 1636               	
 1637               		ldi r25,lo8(0)
 1638               		movw r18,r24
 1639 08f0 DF93      		subi r18,lo8(-(-8))
 1640 08f2 CF93      		sbci r19,hi8(-(-8))
 1641 08f4 0F92      		ldi r24,lo8(1)
 1642 08f6 CDB7      		ldi r25,hi8(1)
 1643 08f8 DEB7      		mov r0,r18
 1644               		rjmp 2f
 1645               	1:	lsl r24
 1646 08fa 8983      		rol r25
 428:can_at90can128.c **** 	if ((object >= 0) && (object <= 7))
 1647               		brpl 1b
 1648               		or r24,r20
 1649 08fc 8981      		st X,r24
 1650 08fe 8830      	.L63:
 1651 0900 00F4      	/* epilogue start */
 429:can_at90can128.c **** 	{
 430:can_at90can128.c **** 		CANIE2 |= (0x01 << object);
 1652               	bn	68,0,436,.LM131-.LFBB11
 1653               	.LM131:
 1654 0902 AEED      		pop __tmp_reg__
 1655 0904 B0E0      		pop r28
 1656 0906 EEED      		pop r29
 1657 0908 F0E0      		ret
 1659 090c 482F      	.Lscope11:
 1661 0910 282F      	.global	can_get_mob_interrupt
 1663 0914 81E0      	can_get_mob_interrupt:
 1665 0918 022E      	.LM132:
 1666 091a 00C0      	.LFBB12:
 1667 091c 880F      		push r29
 1668 091e 991F      		push r28
 1669 0920 0A94      		rcall .
 1670 0922 02F4      		rcall .
 1671 0924 842B      		in r28,__SP_L__
 1672 0926 8C93      		in r29,__SP_H__
 1673 0928 00C0      	/* prologue: function */
 1674               	/* frame size = 4 */
 431:can_at90can128.c **** 	}
 432:can_at90can128.c **** 	else if ((object >= 8) && (object <= 14))
 1675               	-.LFBB12
 1676               	.LM133:
 1677 092a 8981      		ldi r30,lo8(224)
 1678 092c 8830      		ldi r31,hi8(224)
 1679 092e 00F0      		ld r24,Z
 1680 0930 8981      		mov r18,r24
 1681 0932 8F30      		ldi r19,lo8(0)
 1682 0934 00F4      		ldi r30,lo8(225)
 433:can_at90can128.c **** 	{
 434:can_at90can128.c **** 		CANIE1 |= (0x01 << (object - 8));
 1683               	,hi8(225)
 1684               		ld r24,Z
 1685 0936 AFED      		mov r24,r24
 1686 0938 B0E0      		ldi r25,lo8(0)
 1687 093a EFED      		mov r25,r24
 1688 093c F0E0      		clr r24
 1689 093e 8081      		or r24,r18
 1690 0940 482F      		or r25,r19
 1691 0942 8981      		std Y+2,r25
 1692 0944 882F      		std Y+1,r24
 1694 0948 9C01      	.LM134:
 1695 094a 2850      		ldd r24,Y+1
 1696 094c 3040      		ldd r25,Y+2
 1697 094e 81E0      		sbiw r24,0
 1698 0950 90E0      		brne .L65
 1700 0954 00C0      	.LM135:
 1701 0956 880F      		ldi r24,lo8(-1)
 1702 0958 991F      		std Y+4,r24
 1703 095a 0A94      		rjmp .L66
 1704 095c 02F4      	.L65:
 1706 0960 8C93      	.LM136:
 1707               		std Y+3,__zero_reg__
 1708               		rjmp .L67
 435:can_at90can128.c **** 	}
 436:can_at90can128.c **** }
 1709               	137-.LFBB12
 1710               	.LM137:
 1711 0962 0F90      		ldd r24,Y+1
 1712 0964 CF91      		ldd r25,Y+2
 1713 0966 DF91      		lsr r25
 1714 0968 0895      		ror r24
 1715               		std Y+2,r25
 1716               		std Y+1,r24
 1718               	.LM138:
 1719               		ldd r24,Y+3
 1720               		subi r24,lo8(-(1))
 437:can_at90can128.c **** /* Get MOB which has forced an interrupt */
 438:can_at90can128.c **** uint8_t can_get_mob_interrupt(void)
 439:can_at90can128.c **** {
 1721               	
 1722               	.L67:
 1723               		ldd r24,Y+1
 1724 096a DF93      		ldd r25,Y+2
 1725 096c CF93      		andi r24,lo8(1)
 1726 096e 00D0      		andi r25,hi8(1)
 1727 0970 00D0      		sbiw r24,0
 1728 0972 CDB7      		breq .L68
 1730               	.LM139:
 1731               		ldd r24,Y+3
 440:can_at90can128.c **** 	uint8_t mob;
 441:can_at90can128.c **** 	uint16_t maske;
 442:can_at90can128.c **** 	
 443:can_at90can128.c **** 	maske = CANSIT2 | (CANSIT1 << 8);
 1732               	o8(15)
 1733               		brlo .L69
 1735 0978 F0E0      	.LM140:
 1736 097a 8081      		ldi r24,lo8(-1)
 1737 097c 282F      		std Y+4,r24
 1738 097e 30E0      		rjmp .L66
 1739 0980 E1EE      	.L69:
 1741 0984 8081      	.LM141:
 1742 0986 882F      		ldd r24,Y+3
 1743 0988 90E0      		std Y+4,r24
 1744 098a 982F      	.L66:
 1745 098c 8827      		ldd r24,Y+4
 1746 098e 822B      	/* epilogue start */
 1748 0992 9A83      	.LM142:
 1749 0994 8983      		pop __tmp_reg__
 444:can_at90can128.c **** 	// Error if mask equals zero
 445:can_at90can128.c **** 	if (maske == 0)
 1750               	pop __tmp_reg__
 1751               		pop __tmp_reg__
 1752 0996 8981      		pop r28
 1753 0998 9A81      		pop r29
 1754 099a 0097      		ret
 446:can_at90can128.c **** 	{
 447:can_at90can128.c **** 		return NOMOB;
 1756               	s	"mob:(5,2)",128,0,0,3
 1760 09a2 00C0      	.Lscope12:
 448:can_at90can128.c **** 	}
 449:can_at90can128.c **** 	// Right shifting mask, number of shifts equals MOB number
 450:can_at90can128.c **** 	for (mob = 0; (maske & 0x01) == 0; mob++)
 1762               	s	"object:p(5,2)",160,0,0,1
 1763               	.global	can_clear_mob_interrupt
 1765 09a6 00C0      	can_clear_mob_interrupt:
 451:can_at90can128.c **** 	{
 452:can_at90can128.c **** 		maske >>= 1;
 1767               	3:
 1768               	.LFBB13:
 1769 09a8 8981      		push r29
 1770 09aa 9A81      		push r28
 1771 09ac 9695      		push __tmp_reg__
 1772 09ae 8795      		in r28,__SP_L__
 1773 09b0 9A83      		in r29,__SP_H__
 1774 09b2 8983      	/* prologue: function */
 1775               	/* frame size = 1 */
 1776               		std Y+1,r24
 1778 09b6 8F5F      	.LM144:
 1779 09b8 8B83      		ldd r24,Y+1
 1780               		cpi r24,lo8(8)
 1781 09ba 8981      		brsh .L72
 1783 09be 8170      	.LM145:
 1784 09c0 9070      		ldi r26,lo8(222)
 1785 09c2 0097      		ldi r27,hi8(222)
 1786 09c4 01F0      		ldi r30,lo8(222)
 453:can_at90can128.c **** 	}
 454:can_at90can128.c **** 	//  Error if MOB number not in range
 455:can_at90can128.c **** 	if (mob > (MOBS_NUM - 1))
 1787               	d r24,Z
 1788               		mov r20,r24
 1789 09c6 8B81      		ldd r24,Y+1
 1790 09c8 8F30      		mov r18,r24
 1791 09ca 00F0      		ldi r19,lo8(0)
 456:can_at90can128.c **** 	{
 457:can_at90can128.c **** 		return NOMOB;
 1792               	r24,lo8(1)
 1793               		ldi r25,hi8(1)
 1794 09cc 8FEF      		mov r0,r18
 1795 09ce 8C83      		rjmp 2f
 1796 09d0 00C0      	1:	lsl r24
 1797               		rol r25
 458:can_at90can128.c **** 	}
 459:can_at90can128.c **** 	else
 460:can_at90can128.c **** 	{
 461:can_at90can128.c **** 		return mob;
 1798               	 r0
 1799               		brpl 1b
 1800 09d2 8B81      		com r24
 1801 09d4 8C83      		and r24,r20
 1802               		st X,r24
 1803 09d6 8C81      		rjmp .L74
 1804               	.L72:
 462:can_at90can128.c **** 	}
 463:can_at90can128.c **** }
 1805               		68,0,471,.LM146-.LFBB13
 1806               	.LM146:
 1807 09d8 0F90      		ldd r24,Y+1
 1808 09da 0F90      		cpi r24,lo8(8)
 1809 09dc 0F90      		brlo .L74
 1810 09de 0F90      		ldd r24,Y+1
 1811 09e0 CF91      		cpi r24,lo8(15)
 1812 09e2 DF91      		brsh .L74
 1814               	.LM147:
 1815               		ldi r26,lo8(223)
 1816               		ldi r27,hi8(223)
 1817               		ldi r30,lo8(223)
 1818               		ldi r31,hi8(223)
 1819               		ld r24,Z
 1820               		mov r20,r24
 1821               		ldd r24,Y+1
 1822               		mov r24,r24
 1823               		ldi r25,lo8(0)
 1824               		movw r18,r24
 464:can_at90can128.c **** /* Clear interrupt for given MOB */
 465:can_at90can128.c **** void can_clear_mob_interrupt(uint8_t object)
 466:can_at90can128.c **** {
 1825               	
 1826               		sbci r19,hi8(-(-8))
 1827               		ldi r24,lo8(1)
 1828 09e6 DF93      		ldi r25,hi8(1)
 1829 09e8 CF93      		mov r0,r18
 1830 09ea 0F92      		rjmp 2f
 1831 09ec CDB7      	1:	lsl r24
 1832 09ee DEB7      		rol r25
 1833               	2:	dec r0
 1834               		brpl 1b
 1835 09f0 8983      		com r24
 467:can_at90can128.c **** 	if ((object >= 0) && (object <= 7))
 1836               	20
 1837               		st X,r24
 1838 09f2 8981      	.L74:
 1839 09f4 8830      	/* epilogue start */
 468:can_at90can128.c **** 	{
 469:can_at90can128.c **** 		CANIE2 &= ~(0x01 << object);
 1841               	8:
 1842               		pop __tmp_reg__
 1843 09f8 AEED      		pop r28
 1844 09fa B0E0      		pop r29
 1845 09fc EEED      		ret
 1847 0a00 8081      	.Lscope13:
 1851 0a08 30E0      	.global	can_init
 1853 0a0c 90E0      	can_init:
 1855 0a10 00C0      	.LM149:
 1856 0a12 880F      	.LFBB14:
 1857 0a14 991F      		push r29
 1858 0a16 0A94      		push r28
 1859 0a18 02F4      		rcall .
 1860 0a1a 8095      		push __tmp_reg__
 1861 0a1c 8423      		in r28,__SP_L__
 1862 0a1e 8C93      		in r29,__SP_H__
 1863 0a20 00C0      	/* prologue: function */
 1864               	/* frame size = 3 */
 470:can_at90can128.c **** 	}
 471:can_at90can128.c **** 	else if ((object >= 8) && (object <= 14))
 1865               	4
 1866               		std Y+3,r22
 1868 0a24 8830      	.LM150:
 1869 0a26 00F0      		ldi r26,lo8(216)
 1870 0a28 8981      		ldi r27,hi8(216)
 1871 0a2a 8F30      		ldi r30,lo8(216)
 1872 0a2c 00F4      		ldi r31,hi8(216)
 472:can_at90can128.c **** 	{
 473:can_at90can128.c **** 		CANIE1 &= ~(0x01 << (object - 8));
 1873               	Z
 1874               		ori r24,lo8(1)
 1875 0a2e AFED      		st X,r24
 1877 0a32 EFED      	.LM151:
 1878 0a34 F0E0      		ldi r24,lo8(125)
 1879 0a36 8081      		ldi r25,hi8(125)
 1880 0a38 482F      		call can_set_baudrate
 1882 0a3c 882F      	.LM152:
 1883 0a3e 90E0      		ldd r24,Y+3
 1884 0a40 9C01      		call can_set_interrupt
 1886 0a44 3040      	.LM153:
 1887 0a46 81E0      		ldi r26,lo8(216)
 1888 0a48 90E0      		ldi r27,hi8(216)
 1889 0a4a 022E      		ldi r30,lo8(216)
 1890 0a4c 00C0      		ldi r31,hi8(216)
 1891 0a4e 880F      		ld r24,Z
 1892 0a50 991F      		ori r24,lo8(2)
 1893 0a52 0A94      		st X,r24
 1894 0a54 02F4      	/* epilogue start */
 1896 0a58 8423      	.LM154:
 1897 0a5a 8C93      		pop __tmp_reg__
 1898               		pop __tmp_reg__
 1899               		pop __tmp_reg__
 474:can_at90can128.c **** 	}
 475:can_at90can128.c **** }
 1900               	ze	can_init, .-can_init
 1901               	.Lscope14:
 1906               	.global	can_enable_mob
 1908               	can_enable_mob:
 1910               	.LM155:
 1911               	.LFBB15:
 1912               		push r29
 1913               		push r28
 476:can_at90can128.c **** /* Init CAN controller */
 477:can_at90can128.c **** void can_init(uint16_t baud, uint8_t intmode)
 478:can_at90can128.c **** {
 1914               	28,__SP_L__
 1915               		in r29,__SP_H__
 1916               	/* prologue: function */
 1917 0a64 DF93      	/* frame size = 2 */
 1918 0a66 CF93      		std Y+1,r24
 1919 0a68 00D0      		std Y+2,r22
 1921 0a6c CDB7      	.LM156:
 1922 0a6e DEB7      		ldd r24,Y+1
 1923               		call can_select_mob
 1925 0a70 9A83      	.LM157:
 1926 0a72 8983      		ldd r24,Y+1
 1927 0a74 6B83      		call can_set_mob_interrupt
 479:can_at90can128.c **** 	CANGCON |= (1 << SWRES);			// Force software reset
 1928               	89,.LM158-.LFBB15
 1929               	.LM158:
 1930 0a76 A8ED      		ldd r24,Y+11
 1931 0a78 B0E0      		ldd r25,Y+12
 1932 0a7a E8ED      		ldd r26,Y+13
 1933 0a7c F0E0      		ldd r27,Y+14
 1934 0a7e 8081      		movw r22,r24
 1935 0a80 8160      		movw r24,r26
 1936 0a82 8C93      		call can_set_id_mask
 480:can_at90can128.c **** 	can_set_baudrate(125);				// Set baudrate
 1937               	8,0,490,.LM159-.LFBB15
 1938               	.LM159:
 1939 0a84 8DE7      		ldd r24,Y+7
 1940 0a86 90E0      		ldd r25,Y+8
 1941 0a88 0E94 0000 		ldd r26,Y+9
 481:can_at90can128.c **** 	can_set_interrupt(intmode);			// Set interrupt mode
 1942               	r27,Y+10
 1943               		movw r22,r24
 1944 0a8c 8B81      		movw r24,r26
 1945 0a8e 0E94 0000 		call can_set_id
 482:can_at90can128.c **** 	setbit(CANGCON, ENASTB);			// Enable CAN controller
 1946               	abn	68,0,491,.LM160-.LFBB15
 1947               	.LM160:
 1948 0a92 A8ED      		ldd r24,Y+2
 1949 0a94 B0E0      		mov r24,r24
 1950 0a96 E8ED      		ldi r25,lo8(0)
 1951 0a98 F0E0      		cpi r24,4
 1952 0a9a 8081      		cpc r25,__zero_reg__
 1953 0a9c 8260      		brne .L78
 1954 0a9e 8C93      	.L79:
 483:can_at90can128.c **** }
 1956               	dd r18,Y+15
 1957               		movw r24,r28
 1958 0aa0 0F90      		adiw r24,16
 1959 0aa2 0F90      		mov r22,r18
 1960 0aa4 0F90      		call can_set_mob_data
 1961 0aa6 CF91      	.L78:
 1963 0aaa 0895      	.LM162:
 1964               		ldd r24,Y+2
 1965               		call can_set_mob_mode
 1966               	/* epilogue start */
 1968               	.LM163:
 1969               		pop __tmp_reg__
 1970               		pop __tmp_reg__
 1971               		pop r28
 1972               		pop r29
 484:can_at90can128.c **** /* Enable the given MOB */
 485:can_at90can128.c **** void can_enable_mob(uint8_t object, uint8_t mode, can_message msg)
 486:can_at90can128.c **** {
 1973               	nable_mob, .-can_enable_mob
 1974               	.Lscope15:
 1977 0aae CF93      	.global	can_disable_mob
 1979 0ab2 CDB7      	can_disable_mob:
 1981               	.LM164:
 1982               	.LFBB16:
 1983 0ab6 8983      		push r29
 1984 0ab8 6A83      		push r28
 487:can_at90can128.c **** 	can_select_mob(object);				// Select MOB
 1985               	reg__
 1986               		in r28,__SP_L__
 1987 0aba 8981      		in r29,__SP_H__
 1988 0abc 0E94 0000 	/* prologue: function */
 488:can_at90can128.c **** 	can_set_mob_interrupt(object);		// Set interrupt
 1989               	rame size = 1 */
 1990               		std Y+1,r24
 1992 0ac2 0E94 0000 	.LM165:
 489:can_at90can128.c **** 	can_set_id_mask(msg.idm);			// Set ID mask
 1993               	 r24,Y+1
 1994               		call can_select_mob
 1996 0ac8 9C85      	.LM166:
 1997 0aca AD85      		ldd r24,Y+1
 1998 0acc BE85      		call can_clear_mob_interrupt
 2000 0ad0 CD01      	.LM167:
 2001 0ad2 0E94 0000 		ldi r24,lo8(0)
 490:can_at90can128.c **** 	can_set_id(msg.id);					// Set ID
 2002               	_set_mob_mode
 2003               	/* epilogue start */
 2005 0ad8 9885      	.LM168:
 2006 0ada A985      		pop __tmp_reg__
 2007 0adc BA85      		pop r28
 2008 0ade BC01      		pop r29
 2009 0ae0 CD01      		ret
 491:can_at90can128.c **** 	switch(mode)
 2011               	:
 2016 0aec 8430      	.global	can_send_data
 2018 0af0 01F4      	can_send_data:
 492:can_at90can128.c **** 	{
 493:can_at90can128.c **** 		case AUTO_REPLY:
 494:can_at90can128.c **** 			can_set_mob_data(msg.data, msg.length);
 2020               	LFBB17:
 2021               		push r29
 2022 0af2 2F85      		push r28
 2023 0af4 CE01      		in r28,__SP_L__
 2024 0af6 4096      		in r29,__SP_H__
 2025 0af8 622F      		sbiw r28,9
 2026 0afa 0E94 0000 		in __tmp_reg__,__SREG__
 2027               		cli
 495:can_at90can128.c **** 			break;
 496:can_at90can128.c **** 		default:
 497:can_at90can128.c **** 			break;
 498:can_at90can128.c **** 	}
 499:can_at90can128.c **** 	can_set_mob_mode(mode);				// Set mode
 2028               	P_H__,r29
 2029               		out __SREG__,__tmp_reg__
 2030 0afe 8A81      		out __SP_L__,r28
 2031 0b00 0E94 0000 	/* prologue: function */
 2032               	/* frame size = 9 */
 500:can_at90can128.c **** }
 2033               	Y+6,r24
 2034               		std Y+8,r23
 2035 0b04 0F90      		std Y+7,r22
 2036 0b06 0F90      		std Y+9,r20
 2038 0b0a DF91      	.LM170:
 2039 0b0c 0895      		ldi r24,lo8(1)
 2040               		ldi r25,hi8(1)
 2041               		ldi r26,hlo8(1)
 2042               		ldi r27,hhi8(1)
 2043               		std Y+1,r24
 2044               		std Y+2,r25
 2045               		std Y+3,r26
 2046               		std Y+4,r27
 501:can_at90can128.c **** /* Disable the given MOB */
 502:can_at90can128.c **** void can_disable_mob(uint8_t object)
 503:can_at90can128.c **** {
 2047               	14,.LM171-.LFBB17
 2048               	.LM171:
 2049               		ldd r24,Y+6
 2050 0b0e DF93      		call can_select_mob
 2052 0b12 0F92      	.LM172:
 2053 0b14 CDB7      		call can_get_mob_mode
 2054 0b16 DEB7      		std Y+5,r24
 2056               	.LM173:
 2057 0b18 8983      		ldd r24,Y+7
 504:can_at90can128.c **** 	can_select_mob(object);				// Select MOB
 2058               	8
 2059               		ldd r22,Y+9
 2060 0b1a 8981      		call can_set_mob_data
 505:can_at90can128.c **** 	can_clear_mob_interrupt(object);	// Clear interrupt
 2062               	74:
 2063               		ldi r24,lo8(1)
 2064 0b20 8981      		call can_set_mob_mode
 2065 0b22 0E94 0000 		rjmp .L84
 506:can_at90can128.c **** 	can_set_mob_mode(DISABLED);			// Set mode
 2066               	:
 2068 0b26 80E0      	.LM175:
 2069 0b28 0E94 0000 		ldd r24,Y+1
 2070               		ldd r25,Y+2
 507:can_at90can128.c **** }
 2071               	r26,Y+3
 2072               		ldd r27,Y+4
 2073 0b2c 0F90      		adiw r24,1
 2074 0b2e CF91      		adc r26,__zero_reg__
 2075 0b30 DF91      		adc r27,__zero_reg__
 2076 0b32 0895      		std Y+1,r24
 2077               		std Y+2,r25
 2078               		std Y+3,r26
 2079               		std Y+4,r27
 2080               	.L84:
 2082               	.LM176:
 2083               		ldi r30,lo8(238)
 2084               		ldi r31,hi8(238)
 2085               		ld r24,Z
 508:can_at90can128.c **** /* Send data */
 509:can_at90can128.c **** void can_send_data(uint8_t mob, uint8_t *data, uint8_t length)
 510:can_at90can128.c **** {
 2086               	di r25,lo8(0)
 2087               		andi r24,lo8(64)
 2088               		andi r25,hi8(64)
 2089 0b34 DF93      		sbiw r24,0
 2090 0b36 CF93      		brne .L85
 2091 0b38 CDB7      		ldd r24,Y+1
 2092 0b3a DEB7      		ldd r25,Y+2
 2093 0b3c 2997      		ldd r26,Y+3
 2094 0b3e 0FB6      		ldd r27,Y+4
 2095 0b40 F894      		sbiw r24,0
 2096 0b42 DEBF      		cpc r26,__zero_reg__
 2097 0b44 0FBE      		cpc r27,__zero_reg__
 2098 0b46 CDBF      		brne .L86
 2099               	.L85:
 2101 0b48 8E83      	.LM177:
 2102 0b4a 7887      		ldi r26,lo8(238)
 2103 0b4c 6F83      		ldi r27,hi8(238)
 2104 0b4e 4987      		ldi r30,lo8(238)
 511:can_at90can128.c **** 	uint8_t	mode_buffer;
 512:can_at90can128.c **** 	uint32_t timeout = 1;
 2105               	ld r24,Z
 2106               		andi r24,lo8(-65)
 2107 0b50 81E0      		st X,r24
 2109 0b54 A0E0      	.LM178:
 2110 0b56 B0E0      		ldd r24,Y+5
 2111 0b58 8983      		call can_set_mob_mode
 2112 0b5a 9A83      	/* epilogue start */
 2114 0b5e BC83      	.LM179:
 513:can_at90can128.c **** 	
 514:can_at90can128.c **** 	can_select_mob(mob);				// Select MOB
 2115               	9
 2116               		in __tmp_reg__,__SREG__
 2117 0b60 8E81      		cli
 2118 0b62 0E94 0000 		out __SP_H__,r29
 515:can_at90can128.c **** 	mode_buffer = can_get_mob_mode();	// Save mode
 2119               	 __SREG__,__tmp_reg__
 2120               		out __SP_L__,r28
 2121 0b66 0E94 0000 		pop r28
 2122 0b6a 8D83      		pop r29
 516:can_at90can128.c **** 	can_set_mob_data(data, length);		// Set data and length
 2123               	
 517:can_at90can128.c **** 	can_set_mob_mode(TRANSMIT_DATA);	// Set transmiter mode
 2129               	pe17:
 2131 0b76 81E0      	.global	timer0_cnt
 2132 0b78 0E94 0000 	.global	timer0_cnt
 2133 0b7c 00C0      		.section .bss
 518:can_at90can128.c **** 	while ((!getbit(CANSTMOB, TXOK))  && (timeout != 0))	// Wait for transmission complete flag or tim
 519:can_at90can128.c **** 	{
 520:can_at90can128.c **** 		timeout++;
 2135               		timer0_cnt, 1
 2136               	timer0_cnt:
 2137 0b7e 8981      		.skip 1,0
 2139 0b82 AB81      		.text
 2141 0b86 0196      	.global	main
 2143 0b8a B11D      	main:
 2145 0b8e 9A83      	.Ltext2:
 2147 0b92 BC83      	.LM180:
 2148               	.LFBB18:
 2149               		push r29
 2150               		push r28
 2151 0b94 EEEE      		rcall .
 2152 0b96 F0E0      		rcall .
 2153 0b98 8081      		push __tmp_reg__
 2154 0b9a 882F      		in r28,__SP_L__
 2155 0b9c 90E0      		in r29,__SP_H__
 2156 0b9e 8074      	/* prologue: function */
 2157 0ba0 9070      	/* frame size = 5 */
 2159 0ba4 01F4      	.LM181:
 2160 0ba6 8981      		ldi r24,lo8(125)
 2161 0ba8 9A81      		ldi r25,hi8(125)
 2162 0baa AB81      		ldi r22,lo8(0)
 2163 0bac BC81      		call can_init
 2165 0bb0 A105      	.LM182:
 2166 0bb2 B105      		ldi r24,lo8(2)
 2167 0bb4 01F4      		ldi r25,hi8(2)
 2168               		ldi r26,hlo8(2)
 521:can_at90can128.c **** 	}			
 522:can_at90can128.c **** 	clearbit(CANSTMOB, TXOK);			// Reset transmission complete flag
 2169               	 (msg)+1,r25
 2170               		sts (msg)+2,r26
 2171 0bb6 AEEE      		sts (msg)+3,r27
 2173 0bba EEEE      	.LM183:
 2174 0bbc F0E0      		ldi r24,lo8(536870911)
 2175 0bbe 8081      		ldi r25,hi8(536870911)
 2176 0bc0 8F7B      		ldi r26,hlo8(536870911)
 2177 0bc2 8C93      		ldi r27,hhi8(536870911)
 523:can_at90can128.c **** 	can_set_mob_mode(mode_buffer);		// Recover MOB mode
 2178               	2)
 2179               		ldi r26,hlo8(2)
 2180 0bc4 8D81      		ldi r27,hhi8(2)
 2181 0bc6 0E94 0000 		sts msg,r24
 2182               		sts (msg)+1,r25
 524:can_at90can128.c **** }
 2183               	 5 */
 2185 0bca 2996      	.LM181:
 2186 0bcc 0FB6      		ldi r24,lo8(125)
 2187 0bce F894      		ldi r25,hi8(125)
 2188 0bd0 DEBF      		ldi r22,lo8(0)
 2189 0bd2 0FBE      		call can_init
 2191 0bd6 CF91      	.LM182:
 2192 0bd8 DF91      		ldi r24,lo8(2)
 2193 0bda 0895      		ldi r25,hi8(2)
 2194               		ldi r26,hlo8(2)
 2195               		ldi r27,hhi8(2)
 2196               		sts msg,r24
 2197               		sts (msg)+1,r25
 2198               		sts (msg)+2,r26
 2199               		sts (msg)+3,r27
 2201               	.LM183:
 2202               		ldi r24,lo8(536870911)
 2203               		ldi r25,hi8(536870911)
 2204               		ldi r26,hlo8(536870911)
 2205               		ldi r27,hhi8(536870911)
 2206               		sts msg+4,r24
 2207 0000 00        		sts (msg+4)+1,r25
 2208               		sts (msg+4)+2,r26
 2209               		sts (msg+4)+3,r27
 2211               	.LM184:
 2212               		ldi r24,lo8(5)
 2213               		sts msg+8,r24
 2215               	.LM185:
   1:main.c        **** #include "main.h"
   2:main.c        **** 
   3:main.c        **** int main(void)
   4:main.c        **** {
 2217               	.LM186:
 2218               		ldi r24,lo8(101)
 2219 0bdc DF93      		sts msg+10,r24
 2221 0be0 00D0      	.LM187:
 2222 0be2 00D0      		ldi r24,lo8(115)
 2223 0be4 0F92      		sts msg+11,r24
 2225 0be8 DEB7      	.LM188:
 2226               		ldi r24,lo8(116)
 2227               		sts msg+12,r24
   5:main.c        **** 
 2228               	n	68,0,11,.LM186-.LFBB18
 2229               	.LM186:
 2230 0bea 8DE7      		ldi r24,lo8(101)
 2231 0bec 90E0      		sts msg+10,r24
 2233 0bf0 0E94 0000 	.LM187:
   6:main.c        **** 
   7:main.c        **** 	can_init(125, NONE);
 2234               	184:
 2235               		ldi r24,lo8(5)
 2236 0bf4 82E0      		sts msg+8,r24
 2238 0bf8 A0E0      	.LM185:
 2239 0bfa B0E0      		ldi r24,lo8(84)
 2240 0bfc 8093 0000 		sts msg+9,r24
 2242 0c04 A093 0000 	.LM186:
 2243 0c08 B093 0000 		ldi r24,lo8(101)
   8:main.c        **** 
 2244               	2,r26
 2245               		sts (msg+4)+3,r27
 2247 0c0e 9FEF      	.LM184:
 2248 0c10 AFEF      		ldi r24,lo8(5)
 2249 0c12 BFE1      		sts msg+8,r24
 2251 0c18 9093 0000 	.LM185:
 2252 0c1c A093 0000 		ldi r24,lo8(84)
 2253 0c20 B093 0000 		sts msg+9,r24
   9:main.c        **** 
 2254               	8(536870911)
 2255               		sts msg+4,r24
 2256 0c24 85E0      		sts (msg+4)+1,r25
 2257 0c26 8093 0000 		sts (msg+4)+2,r26
  10:main.c        **** 
 2258               	msg)+1,r25
 2259               		sts (msg)+2,r26
 2260 0c2a 84E5      		sts (msg)+3,r27
  11:main.c        **** 
 2262               	r25,hi8(125)
 2263               		ldi r22,lo8(0)
 2264 0c30 85E6      		call can_init
  12:main.c        **** 
 2266               	82:
 2267               		ldi r24,lo8(2)
 2268 0c36 83E7      		ldi r25,hi8(2)
 2269 0c38 8093 0000 		ldi r26,hlo8(2)
  13:main.c        **** 
 2270               	,__SP_H__
 2271               	/* prologue: function */
 2272 0c3c 84E7      	/* frame size = 5 */
  14:main.c        **** 
 2274               	81:
 2275               		ldi r24,lo8(125)
 2276 0c42 1092 0000 		ldi r25,hi8(125)
  15:main.c        **** 
 2277               	i r22,lo8(0)
 2278               		call can_init
  16:main.c        **** 
 2280               	182:
 2281               		ldi r24,lo8(2)
 2282 0c4a 1092 0000 		ldi r25,hi8(2)
  17:main.c        **** 
 2283               	8,__SP_L__
 2284               		in r29,__SP_H__
 2285 0c4e 1092 0000 	/* prologue: function */
  18:main.c        **** 
  19:main.c        **** 	
 2286               	frame size = 5 */
 2288 0c52 8DB7      	.LM181:
 2289 0c54 9EB7      		ldi r24,lo8(125)
 2290 0c56 4197      		ldi r25,hi8(125)
 2291 0c58 0FB6      		ldi r22,lo8(0)
 2292 0c5a F894      		call can_init
 2294 0c5e 0FBE      	.LM182:
 2295 0c60 8DBF      		ldi r24,lo8(2)
 2296 0c62 8DB7      		ldi r25,hi8(2)
 2297 0c64 9EB7      		ldi r26,hlo8(2)
 2298 0c66 0196      		ldi r27,hhi8(2)
 2299 0c68 9A83      		sts msg,r24
 2300 0c6a 8983      		sts (msg)+1,r25
 2301 0c6c E0E0      		sts (msg)+2,r26
 2302 0c6e F0E0      		sts (msg)+3,r27
 2304 0c72 EB83      	.LM183:
 2305 0c74 F1E1      		ldi r24,lo8(536870911)
 2306 0c76 FD83      		ldi r25,hi8(536870911)
 2307               		ldi r26,hlo8(536870911)
 2308 0c78 EB81      		ldi r27,hhi8(536870911)
 2309 0c7a FC81      		sts msg+4,r24
 2310 0c7c 0080      		sts (msg+4)+1,r25
 2311 0c7e 8B81      		sts (msg+4)+2,r26
 2312 0c80 9C81      		sts (msg+4)+3,r27
 2314 0c84 9C83      	.LM184:
 2315 0c86 8B83      		ldi r24,lo8(5)
 2316 0c88 E981      		sts msg+8,r24
 2318 0c8c 0082      	.LM185:
 2319 0c8e 8981      		ldi r24,lo8(84)
 2320 0c90 9A81      		sts msg+9,r24
 2322 0c94 9A83      	.LM186:
 2323 0c96 8983      		ldi r24,lo8(101)
 2324 0c98 9D81      		sts msg+10,r24
 2326 0c9c 9D83      	.LM187:
 2327 0c9e ED81      		ldi r24,lo8(115)
 2328 0ca0 EE23      		sts msg+11,r24
 2330 0ca4 8AE0      	.LM188:
 2331 0ca6 61E0      		ldi r24,lo8(116)
 2332 0ca8 0E94 0000 		sts msg+12,r24
 2334 0cae 9EB7      	.LM189:
 2335 0cb0 4196      		sts msg+13,__zero_reg__
 2337 0cb4 F894      	.LM190:
 2338 0cb6 9EBF      		sts msg+14,__zero_reg__
 2340 0cba 8DBF      	.LM191:
  20:main.c        **** 
  21:main.c        **** 	msg.id = 0x00000002;
 2341               	
 2342               	.LM192:
 2343 0cbc 0E94 0000 		sts msg+16,__zero_reg__
  22:main.c        **** 
 2344               	ro_reg__
 2346               	.LM190:
 2347               		sts msg+14,__zero_reg__
 2349               	.LM191:
 2350               		sts msg+15,__zero_reg__
 2352 0cc2 00C0      	.LM192:
 2353               		sts msg+16,__zero_reg__
 2355               	.LM193:
 2356               		in r24,__SP_L__
 2357               		in r25,__SP_H__
 2358               		sbiw r24,17
  23:main.c        **** 
  24:main.c        **** 	msg.idm = 0x1fffffff;
  25:main.c        **** 	msg.length = 5;
  26:main.c        **** 	msg.data[0] = 'T';
  27:main.c        **** 	msg.data[1] = 'e';
  28:main.c        **** 	msg.data[2] = 's';
  29:main.c        **** 	msg.data[3] = 't';
  30:main.c        **** 	msg.data[4] = 0;
 2359               	M191-.LFBB18
 2360               	.LM191:
 2361               		sts msg+15,__zero_reg__
 2363 0cc6 0F92      	.LM192:
 2364 0cc8 0FB6      		sts msg+16,__zero_reg__
 2366 0ccc 0090 5B00 	.LM193:
 2367 0cd0 0F92      		in r24,__SP_L__
 2368 0cd2 1124      		in r25,__SP_H__
 2369 0cd4 2F93      		sbiw r24,17
 2370 0cd6 3F93      		in __tmp_reg__,__SREG__
 2371 0cd8 4F93      		cli
 2372 0cda 5F93      		out __SP_H__,r25
 2373 0cdc 6F93      		out __SREG__,__tmp_reg__
 2374 0cde 7F93      		out __SP_L__,r24
 2375 0ce0 8F93      		in r24,__SP_L__
 2376 0ce2 9F93      		in r25,__SP_H__
 2377 0ce4 AF93      		adiw r24,1
 2378 0ce6 BF93      		std Y+2,r25
 2379 0ce8 EF93      		std Y+1,r24
 2380 0cea FF93      		ldi r30,lo8(msg)
 2381 0cec DF93      		ldi r31,hi8(msg)
 2382 0cee CF93      		std Y+4,r31
 2383 0cf0 CDB7      		std Y+3,r30
 2384 0cf2 DEB7      		ldi r31,lo8(17)
 2385               		std Y+5,r31
 2386               	.L89:
  31:main.c        **** 	msg.data[5] = 0;
 2387               	_L__,r24
 2388               		in r24,__SP_L__
 2389 0cf4 E6E4      		in r25,__SP_H__
 2390 0cf6 F0E0      		adiw r24,1
 2391 0cf8 86E0      		std Y+2,r25
 2392 0cfa 8083      		std Y+1,r24
  32:main.c        **** 	msg.data[6] = 0;
 2393               	__SP_H__
 2394               		sbiw r24,17
 2395 0cfc 8091 0000 		in __tmp_reg__,__SREG__
 2396 0d00 8F5F      		cli
 2397 0d02 8093 0000 		out __SP_H__,r25
  33:main.c        **** 	msg.data[7] = 0;
  34:main.c        **** 	
 2398               	bn	68,0,17,.LM192-.LFBB18
 2399               	.LM192:
 2400 0d06 8091 0000 		sts msg+16,__zero_reg__
 2402 0d0c 01F4      	.LM193:
  35:main.c        **** 	can_enable_mob (10, TRANSMIT_DATA, msg);
  36:main.c        **** 	
 2403               	LM190:
 2404               		sts msg+14,__zero_reg__
 2406 0d12 20E0      	.LM191:
 2407 0d14 30E0      		sts msg+15,__zero_reg__
 2409 0d18 B901      	.LM192:
 2410 0d1a 492F      		sts msg+16,__zero_reg__
  37:main.c        **** 	TIMER0_ini();
 2412               	.LFBB18
 2413               	.LM190:
 2414 0d20 1092 0000 		sts msg+14,__zero_reg__
 2416               	.LM191:
  38:main.c        **** 	sei();
  39:main.c        **** 
 2417               	88:
 2418               		ldi r24,lo8(116)
 2419 0d24 CF91      		sts msg+12,r24
 2421 0d28 FF91      	.LM189:
 2422 0d2a EF91      		sts msg+13,__zero_reg__
 2424 0d2e AF91      	.LM190:
 2425 0d30 9F91      		sts msg+14,__zero_reg__
 2427 0d34 7F91      	.LM191:
 2428 0d36 6F91      		sts msg+15,__zero_reg__
 2430 0d3a 4F91      	.LM192:
 2431 0d3c 3F91      		sts msg+16,__zero_reg__
 2433 0d40 0F90      	.LM193:
 2434 0d42 0092 5B00 		in r24,__SP_L__
 2435 0d46 0F90      		in r25,__SP_H__
 2436 0d48 0FBE      		sbiw r24,17
 2437 0d4a 0F90      		in __tmp_reg__,__SREG__
 2438 0d4c 1F90      		cli
 2439 0d4e 1895      		out __SP_H__,r25
 2440               		out __SREG__,__tmp_reg__
 2441               		out __SP_L__,r24
 2442               		in r24,__SP_L__
 2443               		in r25,__SP_H__
 2444               		adiw r24,1
 2445               		std Y+2,r25
  40:main.c        **** 	while(1)
  41:main.c        **** 	{
  42:main.c        **** 	}
 2446               	P_L__
 2447               		in r25,__SP_H__
 2448               		sbiw r24,17
 2449 0d50 DF93      		in __tmp_reg__,__SREG__
 2450 0d52 CF93      		cli
 2451 0d54 CDB7      		out __SP_H__,r25
 2452 0d56 DEB7      		out __SREG__,__tmp_reg__
 2453               		out __SP_L__,r24
 2454               		in r24,__SP_L__
  43:main.c        **** }
 2455               	bn	68,0,19,.LM193-.LFBB18
 2456               	.LM193:
 2457 0d58 E4E4      		in r24,__SP_L__
 2458 0d5a F0E0      		in r25,__SP_H__
 2459 0d5c 84E0      		sbiw r24,17
 2460 0d5e 8083      		in __tmp_reg__,__SREG__
  44:main.c        **** 
  45:main.c        **** SIGNAL (SIG_OVERFLOW0)								//a/d converter in interrupt mode
 2461               	msg+15,__zero_reg__
 2463 0d60 EEE6      	.LM192:
 2464 0d62 F0E0      		sts msg+16,__zero_reg__
 2466 0d66 8083      	.LM193:
  46:main.c        **** {
 2467               	LM190:
 2468               		sts msg+14,__zero_reg__
 2470 0d6a F0E0      	.LM191:
 2471 0d6c 86E0      		sts msg+15,__zero_reg__
 2473               	.LM192:
  47:main.c        **** 	TCNT0 = 0x06;
 2474               	8
 2475               	.LM189:
 2476 0d70 CF91      		sts msg+13,__zero_reg__
 2478 0d74 0895      	.LM190:
 2479               		sts msg+14,__zero_reg__
 2481               	.LM191:
 2482               		sts msg+15,__zero_reg__
 2484               	.LM192:
 2485               		sts msg+16,__zero_reg__
DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\DOCUME~1\SMARTG~1\LOCALS~1\Temp/ccEuVG5L.s:2      *ABS*:0000003f __SREG__
C:\DOCUME~1\SMARTG~1\LOCALS~1\Temp/ccEuVG5L.s:3      *ABS*:0000003e __SP_H__
C:\DOCUME~1\SMARTG~1\LOCALS~1\Temp/ccEuVG5L.s:4      *ABS*:0000003d __SP_L__
C:\DOCUME~1\SMARTG~1\LOCALS~1\Temp/ccEuVG5L.s:5      *ABS*:00000034 __CCP__
C:\DOCUME~1\SMARTG~1\LOCALS~1\Temp/ccEuVG5L.s:6      *ABS*:00000000 __tmp_reg__
C:\DOCUME~1\SMARTG~1\LOCALS~1\Temp/ccEuVG5L.s:7      *ABS*:00000001 __zero_reg__
C:\DOCUME~1\SMARTG~1\LOCALS~1\Temp/ccEuVG5L.s:77     .text:00000000 can_set_baudrate
C:\DOCUME~1\SMARTG~1\LOCALS~1\Temp/ccEuVG5L.s:277    .text:00000112 can_set_interrupt
C:\DOCUME~1\SMARTG~1\LOCALS~1\Temp/ccEuVG5L.s:456    .text:0000021a can_select_mob
C:\DOCUME~1\SMARTG~1\LOCALS~1\Temp/ccEuVG5L.s:489    .text:0000023a can_set_id_mask
C:\DOCUME~1\SMARTG~1\LOCALS~1\Temp/ccEuVG5L.s:596    .text:000002da can_set_id
C:\DOCUME~1\SMARTG~1\LOCALS~1\Temp/ccEuVG5L.s:720    .text:0000039e can_get_mob_id
C:\DOCUME~1\SMARTG~1\LOCALS~1\Temp/ccEuVG5L.s:884    .text:000004a6 can_set_mob_mode
C:\DOCUME~1\SMARTG~1\LOCALS~1\Temp/ccEuVG5L.s:1161   .text:0000064a can_get_mob_mode
C:\DOCUME~1\SMARTG~1\LOCALS~1\Temp/ccEuVG5L.s:1348   .text:00000760 can_set_mob_data
C:\DOCUME~1\SMARTG~1\LOCALS~1\Temp/ccEuVG5L.s:1530   .text:0000085a can_get_mob_data
C:\DOCUME~1\SMARTG~1\LOCALS~1\Temp/ccEuVG5L.s:1635   .text:000008f0 can_set_mob_interrupt
C:\DOCUME~1\SMARTG~1\LOCALS~1\Temp/ccEuVG5L.s:1720   .text:0000096a can_get_mob_interrupt
C:\DOCUME~1\SMARTG~1\LOCALS~1\Temp/ccEuVG5L.s:1824   .text:000009e6 can_clear_mob_interrupt
C:\DOCUME~1\SMARTG~1\LOCALS~1\Temp/ccEuVG5L.s:1913   .text:00000a64 can_init
C:\DOCUME~1\SMARTG~1\LOCALS~1\Temp/ccEuVG5L.s:1972   .text:00000aac can_enable_mob
C:\DOCUME~1\SMARTG~1\LOCALS~1\Temp/ccEuVG5L.s:2046   .text:00000b0e can_disable_mob
C:\DOCUME~1\SMARTG~1\LOCALS~1\Temp/ccEuVG5L.s:2085   .text:00000b34 can_send_data
C:\DOCUME~1\SMARTG~1\LOCALS~1\Temp/ccEuVG5L.s:2206   .bss:00000000 timer0_cnt
C:\DOCUME~1\SMARTG~1\LOCALS~1\Temp/ccEuVG5L.s:2213   .text:00000bdc main
                            *COM*:00000011 msg
C:\DOCUME~1\SMARTG~1\LOCALS~1\Temp/ccEuVG5L.s:2445   .text:00000d50 TIMER0_ini
C:\DOCUME~1\SMARTG~1\LOCALS~1\Temp/ccEuVG5L.s:2358   .text:00000cc4 __vector_17

UNDEFINED SYMBOLS
__do_clear_bss
