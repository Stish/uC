{\rtf1\ansi\deff0\deftab720{\fonttbl{\f0\fnil MS Sans Serif;}{\f1\fnil\fcharset2 Symbol;}{\f2\fswiss\fprq2 System;}{\f3\fnil Times New Roman;}{\f4\fswiss\fprq2 Arial;}}
{\colortbl\red0\green0\blue0;\red0\green0\blue128;\red255\green0\blue0;}
\deflang1031\pard\plain\f4\fs28\cf0 DAvE's Project Documentation
\par \plain\f4\fs22\cf0
\par \plain\f4\fs22\cf0 Project: \tab\tab\b can_test.dav
\par 
\par \plain\f4\fs22\cf0 Controller: \tab\tab\b XC2267-96F80
\par \plain\f4\fs22\cf0 Compiler: \tab\tab\b Tasking Viper
\par \plain\f4\fs22\cf0 Memory Model: \tab\b NEAR
\par 
\par \plain\f4\fs22\cf0 Date: \tab\tab\tab\b 26.09.2012 12:39:25
\par 
\par 
\par \plain\f4\fs22\cf2\b Please read this document carefully and note
\par \plain\f4\fs22\cf2\b the red-colored hints.
\par 
\par \plain\f4\fs22\cf2\b If you miss a file in the generated files list
\par \plain\f4\fs22\cf2\b maybe you have forgotten to select the
\par \plain\f4\fs22\cf2\b initialisation function of the related module.
\par 
\par \plain\f4\fs22\cf0 Generated Files:
\plain\f4\fs20\cf0\b
\par \tab\tab\tab MAIN.H
\par \tab\tab\tab MAIN.C
\par \tab\tab\tab SCS.H
\par \tab\tab\tab SCS.C
\par \tab\tab\tab XC22XXREGS.H
\par \tab\tab\tab IO.H
\par \tab\tab\tab IO.C
\par \tab\tab\tab GPT1.H
\par \tab\tab\tab GPT1.C
\par \tab\tab\tab GPT2.H
\par \tab\tab\tab GPT2.C
\par \tab\tab\tab CAN.H
\par \tab\tab\tab CAN.C
\par \tab\tab\tab INT.H
\par \tab\tab\tab INT.C
\par \tab\tab\tab CAN_TEST.ASM
\par 
\par 
\par \plain\f4\fs20\cf0
\par \plain\f4\fs28\cf0\ul Project Settings
\par
\par \plain\f4\fs24\cf0 Macros:\f4\fs20\cf0
\par \plain\f4\fs24\cf0 Functions:\f4\fs20\cf0
\par
\par \plain\f4\fs20\cf0 \tab Function:
\par \plain\f4\fs20\cf0\b \tab \tab void MAIN_vInit(void)\plain\f4\fs20\cf0
\par \tab Description:
\par \plain\f4\fs20\cf0\i
\tab \tab This function initializes the microcontroller.

\par \plain\f4\fs20\cf0 \tab Returnvalue:
\par \tab \tab \plain\f4\fs20\cf0\b None\plain\f4\fs20\cf0
\par \plain\f4\fs20\cf0 \tab Parameters:
\par \plain\f4\fs20\cf0\b 
\tab \tab None

\par
\par \plain\f4\fs20\cf0 \tab Function:
\par \plain\f4\fs20\cf0\b \tab \tab void MAIN_vUnlockProtecReg(void)\plain\f4\fs20\cf0
\par \tab Description:
\par \plain\f4\fs20\cf0\i
\tab \tab This function makes it possible to write one protected

\par \tab \tab register.

\par \plain\f4\fs20\cf0 \tab Returnvalue:
\par \tab \tab \plain\f4\fs20\cf0\b None\plain\f4\fs20\cf0
\par \plain\f4\fs20\cf0 \tab Parameters:
\par \plain\f4\fs20\cf0\b 
\tab \tab None

\par
\par \plain\f4\fs20\cf0 \tab Function:
\par \plain\f4\fs20\cf0\b \tab \tab void MAIN_vLockProtecReg(void)\plain\f4\fs20\cf0
\par \tab Description:
\par \plain\f4\fs20\cf0\i
\tab \tab This function makes it possible to lock one protected

\par \tab \tab register.

\par \plain\f4\fs20\cf0 \tab Returnvalue:
\par \tab \tab \plain\f4\fs20\cf0\b None\plain\f4\fs20\cf0
\par \plain\f4\fs20\cf0 \tab Parameters:
\par \plain\f4\fs20\cf0\b 
\tab \tab None

\par
\par \plain\f4\fs20\cf0 \tab Function:
\par \plain\f4\fs20\cf0\b \tab \tab void MAIN_vChangeFreq(void)\plain\f4\fs20\cf0
\par \tab Description:
\par \plain\f4\fs20\cf0\i
\tab \tab This function is used to select the external crystal and

\par \tab \tab configure the system frequency to 80Mhz/66Mhz.

\par \plain\f4\fs20\cf0 \tab Returnvalue:
\par \tab \tab \plain\f4\fs20\cf0\b None\plain\f4\fs20\cf0
\par \plain\f4\fs20\cf0 \tab Parameters:
\par \plain\f4\fs20\cf0\b 
\tab \tab None

\par
\par \plain\f4\fs20\cf0 \tab Function:
\par \plain\f4\fs20\cf0\b \tab \tab void main(void)\plain\f4\fs20\cf0
\par \tab Description:
\par \plain\f4\fs20\cf0\i
\tab \tab This is the main function.

\par \plain\f4\fs20\cf0 \tab Returnvalue:
\par \tab \tab \plain\f4\fs20\cf0\b None\plain\f4\fs20\cf0
\par \plain\f4\fs20\cf0 \tab Parameters:
\par \plain\f4\fs20\cf0\b 
\tab \tab None

\par
\par \plain\f4\fs24\cf0 Initialization:
\par \plain\f4\fs20\cf0\b
\par
\tab Configuration of the System Clock:\par 
\tab - VCO clock used, input clock is connected\par 
\tab - input frequency is 8,00 MHz\par 
\tab - system clock is 80.00 MHz\par 
\par 

\par \plain\f4\fs20\cf0
\par \plain\f4\fs28\cf0\ul Project Settings
\par
\par \plain\f4\fs24\cf0 Macros:\f4\fs20\cf0
\par \plain\f4\fs24\cf0 Functions:\f4\fs20\cf0
\par
\par \plain\f4\fs20\cf0 \tab Function:
\par \plain\f4\fs20\cf0\b \tab \tab _inline void SetK2(unsigned int K2)\plain\f4\fs20\cf0
\par \tab Description:
\par \plain\f4\fs20\cf0\i
\tab \tab Sets K2 divider and waits until PLL is locked.

\par \plain\f4\fs20\cf0 \tab Returnvalue:
\par \tab \tab \plain\f4\fs20\cf0\b None\plain\f4\fs20\cf0
\par \plain\f4\fs20\cf0 \tab Parameters:
\par \plain\f4\fs20\cf0\b 
\tab \tab K2: K2 divider

\par
\par \plain\f4\fs20\cf0 \tab Function:
\par \plain\f4\fs20\cf0\b \tab \tab _inline void EnableVcoBypass(void)\plain\f4\fs20\cf0
\par \tab Description:
\par \plain\f4\fs20\cf0\i
\tab \tab Enables VCO bypass and waits until bypass status is OK.

\par \plain\f4\fs20\cf0 \tab Returnvalue:
\par \tab \tab \plain\f4\fs20\cf0\b None\plain\f4\fs20\cf0
\par \plain\f4\fs20\cf0 \tab Parameters:
\par \plain\f4\fs20\cf0\b 
\tab \tab None

\par
\par \plain\f4\fs20\cf0 \tab Function:
\par \plain\f4\fs20\cf0\b \tab \tab _inline void DisableVcoBypass(void)\plain\f4\fs20\cf0
\par \tab Description:
\par \plain\f4\fs20\cf0\i
\tab \tab Disables VCO bypass and waits until bypass status is OK.

\par \plain\f4\fs20\cf0 \tab Returnvalue:
\par \tab \tab \plain\f4\fs20\cf0\b None\plain\f4\fs20\cf0
\par \plain\f4\fs20\cf0 \tab Parameters:
\par \plain\f4\fs20\cf0\b 
\tab \tab None

\par
\par \plain\f4\fs20\cf0 \tab Function:
\par \plain\f4\fs20\cf0\b \tab \tab _inline void WaitForTimer13Stop(void)\plain\f4\fs20\cf0
\par \tab Description:
\par \plain\f4\fs20\cf0\i
\tab \tab This function waits until CCU6 timer T13 has stopped.

\par \tab \tab Notes:

\par \tab \tab - Function StartT13 should have been called before.

\par \plain\f4\fs20\cf0 \tab Returnvalue:
\par \tab \tab \plain\f4\fs20\cf0\b None\plain\f4\fs20\cf0
\par \plain\f4\fs20\cf0 \tab Parameters:
\par \plain\f4\fs20\cf0\b 
\tab \tab None

\par
\par \plain\f4\fs20\cf0 \tab Function:
\par \plain\f4\fs20\cf0\b \tab \tab void SCS_StartXtalOsc(unsigned int UseTimer)\plain\f4\fs20\cf0
\par \tab Description:
\par \plain\f4\fs20\cf0\i
\tab \tab This function starts the crystal oscillator at XTAL1 and

\par \tab \tab XTAL2 or enables the external oscillator input at XTAL1.

\par \tab \tab If specified, the function enables and starts CCU6 timer T13

\par \tab \tab and sets EXTCLK for counting XTAL clocks; if required, PLL

\par \tab \tab frequency will be increased for synchronization purposes.

\par \tab \tab Notes:

\par \tab \tab - If UseTimer is set, the function will enable CCU6 and will

\par \tab \tab overwrite previous settings for T13; additionally, it will

\par \tab \tab overwrite previous EXTCLK clock multiplexer settings.

\par \tab \tab - The user is responsible for disabling the register

\par \tab \tab protection.

\par \plain\f4\fs20\cf0 \tab Returnvalue:
\par \tab \tab \plain\f4\fs20\cf0\b None\plain\f4\fs20\cf0
\par \plain\f4\fs20\cf0 \tab Parameters:
\par \plain\f4\fs20\cf0\b 
\tab \tab UseTimer: 0 = no XTAL clock counting, >0 = XTAL clock counting

\par \tab \tab via T13

\par
\par \plain\f4\fs20\cf0 \tab Function:
\par \plain\f4\fs20\cf0\b \tab \tab void SCS_SwitchSystemClock(unsigned int UseTimer)\plain\f4\fs20\cf0
\par \tab Description:
\par \plain\f4\fs20\cf0\i
\tab \tab This function switches the system clock from its state after

\par \tab \tab boot program execution (internal oscillator and VCO usage) to

\par \tab \tab XTAL clock (crystal or external oscillator) and VCO usage.

\par \tab \tab If specified, the function waits for a certain number of XTAL

\par \tab \tab clocks before switching to this clock.

\par \tab \tab Notes:

\par \tab \tab - It is assumed that the HP oscillator has been started.

\par \tab \tab - UseTimer > 0 should be used only if SCS_StartXtal() with

\par \tab \tab parameter UseTimer > 0 has been called before.

\par \tab \tab - If UseTimer = 0, it must be guaranteed that XTAL

\par \tab \tab clock is stable.

\par \tab \tab - The user is responsible for disabling the register

\par \tab \tab protection.

\par \plain\f4\fs20\cf0 \tab Returnvalue:
\par \tab \tab \plain\f4\fs20\cf0\b None\plain\f4\fs20\cf0
\par \plain\f4\fs20\cf0 \tab Parameters:
\par \plain\f4\fs20\cf0\b 
\tab \tab UseTimer: 0 = no XTAL clock counting, > 0 = XTAL clock counting

\par \tab \tab via T13

\par
\par \plain\f4\fs20\cf0 \tab Function:
\par \plain\f4\fs20\cf0\b \tab \tab void SCS_SwitchToHighPrecBandgap(void)\plain\f4\fs20\cf0
\par \tab Description:
\par \plain\f4\fs20\cf0\i
\tab \tab This function switches to high precision bandgap which is

\par \tab \tab required e. g. for flash operation.

\par \tab \tab Notes:

\par \tab \tab - It is assumed that high precision bandgap has been enabled

\par \tab \tab a sufficient time ago.

\par \tab \tab - The user is responsible for disabling the register

\par \tab \tab protection.

\par \plain\f4\fs20\cf0 \tab Returnvalue:
\par \tab \tab \plain\f4\fs20\cf0\b None\plain\f4\fs20\cf0
\par \plain\f4\fs20\cf0 \tab Parameters:
\par \plain\f4\fs20\cf0\b 
\tab \tab None

\par
\par \plain\f4\fs20\cf0 \tab Function:
\par \plain\f4\fs20\cf0\b \tab \tab void SCS_CountClocksWithTimer (SCS_EXTCLK_Type Source,\plain\f4\fs20\cf0
\par \tab Description:
\par \plain\f4\fs20\cf0\i
\tab \tab This function enables and starts CCU6 timer T13 for counting

\par \tab \tab a certain number of ticks at EXTCLK. After that time, T13

\par \tab \tab will stop.

\par \tab \tab Notes:

\par \tab \tab - The function will enable CCU6 and will overwrite previous

\par \tab \tab settings for T13; additionally, it will overwrite previous

\par \tab \tab EXTCLK clock multiplexer settings.

\par \tab \tab - System frequency must be >= 2 * clock frequency.

\par \tab \tab - The user is responsible for disabling the register

\par \tab \tab protection.

\par \plain\f4\fs20\cf0 \tab Returnvalue:
\par \tab \tab \plain\f4\fs20\cf0\b None\plain\f4\fs20\cf0
\par \plain\f4\fs20\cf0 \tab Parameters:
\par \plain\f4\fs20\cf0\b 
\tab \tab Source: The following clock source options are possible:

\par \tab \tab SCS_EXTCLK_F_PLL     PLL output frequency

\par \tab \tab SCS_EXTCLK_F_OSC     HP oscillator frequency

\par \tab \tab SCS_EXTCLK_F_WU      wakeup oscillator frequency

\par \tab \tab SCS_EXTCLK_F_TCK     test clock at Pin 2.9

\par \tab \tab SCS_EXTCLK_F_OSC_FL  internal flash oscillator frequency

\par \tab \tab SCS_EXTCLK_F_RTC     real-time clock

\par \tab \tab Clocks: Number of clocks to count, 1...65535

\par \plain\f4\fs20\cf0
\par \plain\f4\fs28\cf0\ul Parallel Ports
\par
\par \plain\f4\fs24\cf0 Macros:\f4\fs20\cf0
\par
\par
\par \plain\f4\fs20\cf0 \tab Macro:
\par \plain\f4\fs20\cf0\b \tab \tab IO_ubReadPin(PinName)\plain\f4\fs20\cf0
\par \tab Description:
\par \plain\f4\fs20\cf0\i
\tab \tab This macro returns the status of the chosen portpin.

\par \tab \tab Note:

\par \tab \tab See the 'Defines for the parameter PinName' section in this

\par \tab \tab header file for the available definitions for the parameter

\par \tab \tab PinName.

\par \plain\f4\fs20\cf0 \tab Returnvalue:
\par \tab \tab \plain\f4\fs20\cf0\b Status of the chosen portpin\plain\f4\fs20\cf0
\par \plain\f4\fs20\cf0 \tab Parameters:
\par \plain\f4\fs20\cf0\b 
\tab \tab PinName:

\par \tab \tab Pin to be read

\par
\par
\par \plain\f4\fs20\cf0 \tab Macro:
\par \plain\f4\fs20\cf0\b \tab \tab IO_vSetPin(PinName)\plain\f4\fs20\cf0
\par \tab Description:
\par \plain\f4\fs20\cf0\i
\tab \tab This macro sets the chosen portpin to '1'.

\par \tab \tab Note:

\par \tab \tab See the 'Defines for the parameter PinName' section in this

\par \tab \tab header file for the available definitions for the parameter

\par \tab \tab PinName.

\par \plain\f4\fs20\cf0 \tab Returnvalue:
\par \tab \tab \plain\f4\fs20\cf0\b None\plain\f4\fs20\cf0
\par \plain\f4\fs20\cf0 \tab Parameters:
\par \plain\f4\fs20\cf0\b 
\tab \tab PinName:

\par \tab \tab Pin to be set to '1'

\par
\par
\par \plain\f4\fs20\cf0 \tab Macro:
\par \plain\f4\fs20\cf0\b \tab \tab IO_vResetPin(PinName)\plain\f4\fs20\cf0
\par \tab Description:
\par \plain\f4\fs20\cf0\i
\tab \tab This macro sets the chosen portpin to '0'.

\par \tab \tab Note:

\par \tab \tab See the 'Defines for the parameter PinName' section in this

\par \tab \tab header file for the available definitions for the parameter

\par \tab \tab PinName.

\par \plain\f4\fs20\cf0 \tab Returnvalue:
\par \tab \tab \plain\f4\fs20\cf0\b None\plain\f4\fs20\cf0
\par \plain\f4\fs20\cf0 \tab Parameters:
\par \plain\f4\fs20\cf0\b 
\tab \tab PinName:

\par \tab \tab Pin to be set to '0'

\par
\par
\par \plain\f4\fs20\cf0 \tab Macro:
\par \plain\f4\fs20\cf0\b \tab \tab IO_vTogglePin(PinName)\plain\f4\fs20\cf0
\par \tab Description:
\par \plain\f4\fs20\cf0\i
\tab \tab This marco toggles the chosen portpin.

\par \tab \tab Note:

\par \tab \tab See the 'Defines for the parameter PinName' section in this

\par \tab \tab header file for the available definitions for the parameter

\par \tab \tab PinName.

\par \plain\f4\fs20\cf0 \tab Returnvalue:
\par \tab \tab \plain\f4\fs20\cf0\b None\plain\f4\fs20\cf0
\par \plain\f4\fs20\cf0 \tab Parameters:
\par \plain\f4\fs20\cf0\b 
\tab \tab PinName:

\par \tab \tab Pin to be toggled

\par \plain\f4\fs24\cf0 Functions:\f4\fs20\cf0
\par
\par \plain\f4\fs20\cf0 \tab Function:
\par \plain\f4\fs20\cf0\b \tab \tab void IO_vInit(void)\plain\f4\fs20\cf0
\par \tab Description:
\par \plain\f4\fs20\cf0\i
\tab \tab This is the initialization function of the IO function

\par \tab \tab library. It is assumed that the SFRs used by this library

\par \tab \tab are in reset state.

\par \plain\f4\fs20\cf0 \tab Returnvalue:
\par \tab \tab \plain\f4\fs20\cf0\b None\plain\f4\fs20\cf0
\par \plain\f4\fs20\cf0 \tab Parameters:
\par \plain\f4\fs20\cf0\b 
\tab \tab None

\par
\par \plain\f4\fs24\cf0 Initialization:
\par \plain\f4\fs20\cf0\b
\par
\tab Configuration of Port P0:\par 
\tab P0.0 is used as general input\par 
\tab - pull device is tristate\par 
\tab P0.1 is used as general purpose output\par 
\tab - push/pull output is selected\par 
\tab - the pin status is low level\par 
\tab P0.2 is used as general purpose output\par 
\tab - push/pull output is selected\par 
\tab - the pin status is low level\par 
\tab P0.3 is used as general purpose output\par 
\tab - push/pull output is selected\par 
\tab - the pin status is high level\par 
\par 
\tab P0.0 - P0.3 output driver characteristic: strong driver\par 
\tab P0.4 - P0.7 output driver characteristic: strong driver\par 
\par 
\tab P0.0 - P0.3 output edge characteristic: sharp edge mode\par 
\tab P0.4 - P0.7 output edge characteristic: sharp edge mode\par 
\par 
\tab Configuration of Port P1:\par 
\tab - no pin of port P1 is used\par 
\par 
\tab Configuration of Port P2:\par 
\tab P2.0 is used as alternate input for the CAN0 Receive input(RXDC0C)\par 
\tab P2.1 is used as alternate output for the CAN0 Transmit output(TXDC0C)\par 
\tab - push/pull output is selected\par 
\par 
\tab P2.0 - P2.3 output driver characteristic: strong driver\par 
\tab P2.4 - P2.7 output driver characteristic: strong driver\par 
\tab P2.8 - P2.12 output driver characteristic: strong driver\par 
\par 
\tab P2.0 - P2.3 output edge characteristic: sharp edge mode\par 
\tab P2.4 - P2.7 output edge characteristic: sharp edge mode\par 
\tab P2.8 - P2.12 output edge characteristic: sharp edge mode\par 
\par 
\tab Configuration of Port P4:\par 
\tab - no pin of port P4 is used\par 
\par 
\tab Configuration of Port P5:\par 
\tab - no pin of port P5 is used\par 
\tab - Port5 Data register P5(Read only)\par 
\par 
\tab Configuration of Port P6:\par 
\tab - no pin of port P6 is used\par 
\par 
\tab Configuration of Port P7:\par 
\tab - no pin of port P7 is used\par 
\par 
\tab Configuration of Port P10:\par 
\tab P10.0 is used as general purpose output\par 
\tab - push/pull output is selected\par 
\tab - the pin status is high level\par 
\tab P10.1 is used as general purpose output\par 
\tab - push/pull output is selected\par 
\tab - the pin status is high level\par 
\tab P10.2 is used as general purpose output\par 
\tab - push/pull output is selected\par 
\tab - the pin status is high level\par 
\tab P10.3 is used as general purpose output\par 
\tab - push/pull output is selected\par 
\tab - the pin status is high level\par 
\tab P10.4 is used as general purpose output\par 
\tab - push/pull output is selected\par 
\tab - the pin status is high level\par 
\tab P10.5 is used as general purpose output\par 
\tab - push/pull output is selected\par 
\tab - the pin status is high level\par 
\tab P10.6 is used as general purpose output\par 
\tab - push/pull output is selected\par 
\tab - the pin status is high level\par 
\tab P10.7 is used as general purpose output\par 
\tab - push/pull output is selected\par 
\tab - the pin status is high level\par 
\par 
\tab P10.0 - P10.3 output driver characteristic: strong driver\par 
\tab P10.4 - P10.7 output driver characteristic: strong driver\par 
\tab P10.8 - P10.11 output driver characteristic: strong driver\par 
\tab P10.12 - P10.15 output driver characteristic: strong driver\par 
\par 
\tab P10.0 - P10.3 output edge characteristic: sharp edge mode\par 
\tab P10.4 - P10.7 output edge characteristic: sharp edge mode\par 
\tab P10.8 - P10.11 output edge characteristic: sharp edge mode\par 
\tab P10.12 - P10.15 output edge characteristic: sharp edge mode\par 
\par 
\tab Configuration of Port P15:\par 
\tab - no pin of port P15 is used\par 
\tab - Port15 Data register P15(Read only)\par 
\par 

\par \plain\f4\fs20\cf0
\par \plain\f4\fs28\cf0\ul General Purpose Timer Unit (GPT1)
\par
\par \plain\f4\fs24\cf0 Macros:\f4\fs20\cf0
\par
\par
\par \plain\f4\fs20\cf0 \tab Macro:
\par \plain\f4\fs20\cf0\b \tab \tab GPT1_vStartTmr(TimerNr)\plain\f4\fs20\cf0
\par \tab Description:
\par \plain\f4\fs20\cf0\i
\tab \tab This macro starts the selected GPT1 timer. The timer

\par \tab \tab continues to count from where it had stopped. The following

\par \tab \tab definitions are available for TimerNr:

\par \tab \tab GPT1_TIMER_2

\par \tab \tab GPT1_TIMER_3

\par \tab \tab GPT1_TIMER_4

\par \plain\f4\fs20\cf0 \tab Returnvalue:
\par \tab \tab \plain\f4\fs20\cf0\b None\plain\f4\fs20\cf0
\par \plain\f4\fs20\cf0 \tab Parameters:
\par \plain\f4\fs20\cf0\b 
\tab \tab TimerNr:

\par \tab \tab the name of the timer to be started

\par \plain\f4\fs24\cf0 Functions:\f4\fs20\cf0
\par
\par \plain\f4\fs20\cf0 \tab Function:
\par \plain\f4\fs20\cf0\b \tab \tab void GPT1_vInit(void)\plain\f4\fs20\cf0
\par \tab Description:
\par \plain\f4\fs20\cf0\i
\tab \tab This is the initialization function of the GPT1 function

\par \tab \tab library. It is assumed that the SFRs used by this library

\par \tab \tab are in reset state.

\par \plain\f4\fs20\cf0 \tab Returnvalue:
\par \tab \tab \plain\f4\fs20\cf0\b None\plain\f4\fs20\cf0
\par \plain\f4\fs20\cf0 \tab Parameters:
\par \plain\f4\fs20\cf0\b 
\tab \tab None

\par
\par \plain\f4\fs20\cf0 \tab Function:
\par \plain\f4\fs20\cf0\b \tab \tab void GPT1_viTmr2(void)\plain\f4\fs20\cf0
\par \tab Description:
\par \plain\f4\fs20\cf0\i
\tab \tab This is the interrupt service routine for the GPT1 timer 2.

\par \tab \tab It is called up in the case of over or underflow of the

\par \tab \tab timer 2 register.

\par \tab \tab If the incremental interface mode is selected and the

\par \tab \tab interrupt for this mode is not disabled it is called up if

\par \tab \tab count edge or count direction was detected.

\par \tab \tab Please note that you have to add application specific code

\par \tab \tab to this function.

\par \plain\f4\fs20\cf0 \tab Returnvalue:
\par \tab \tab \plain\f4\fs20\cf0\b None\plain\f4\fs20\cf0
\par \plain\f4\fs20\cf0 \tab Parameters:
\par \plain\f4\fs20\cf0\b 
\tab \tab None

\par
\par \plain\f4\fs24\cf0 Initialization:
\par \plain\f4\fs20\cf0\b
\par
\tab Configuration of Timer Block Prescaler 1:\par 
\par 
\tab Configuration of Timer Block Prescaler 1:\par 
\tab - prescaler for timer block 1 is 8\par 
\par 
\tab Configuration of the GPT1 Core Timer 3:\par 
\tab - timer 3 works in timer mode\par 
\tab - external up/down control is disabled\par 
\tab - prescaler factor is 8\par 
\tab - up/down control bit is reset\par 
\tab - alternate output function T3OUT (P7.0) is disabled\par 
\tab - timer 3 output toggle latch (T3OTL) is set to 0\par 
\tab - timer 3 run bit is reset\par 
\par 
\tab - prescaler for timer block 1 is 8\par 
\par 
\tab Configuration of the GPT1 Auxiliary Timer 2:\par 
\tab - timer 2 works in timer mode\par 
\tab - external up/down control is disabled\par 
\tab - prescaler factor is 128\par 
\tab - up/down control bit is reset\par 
\par 
\tab - prescaler for timer block 1 is 8\par 
\par 
\tab Configuration of the GPT1 Auxiliary Timer 4:\par 
\tab - timer 4 works in timer mode\par 
\tab - external up/down control is disabled\par 
\tab - prescaler factor is 8\par 
\tab - up/down control bit is reset\par 
\tab - timer 4 run bit is reset\par 
\par 
\tab - prescaler for timer block 1 is 8\par 
\par 
\tab Configuration of the used GPT1 Port Pins:\par 
\par 
\tab Configuration of the used GPT1 Interrupts:\par 
\tab timer 2 service request node configuration:\par 
\tab - timer 2 interrupt priority level (ILVL) = 15\par 
\tab - timer 2 interrupt group level (GLVL) = 0\par 
\tab - timer 2 group priority extension (GPX) = 0\par 
\par 
\tab Use PEC channel 4 for GPT1 T2 INT:\par 
\tab - normal interrupt\par 
\tab - pointers are not modified\par 
\tab - transfer a word\par 
\tab - service End of PEC interrrupt by a EOP interrupt node is disabled\par 
\tab - channel link mode is disabled\par 
\par 

\par \plain\f4\fs20\cf0
\par \plain\f4\fs28\cf0\ul General Purpose Timer Unit (GPT2)
\par
\par \plain\f4\fs24\cf0 Macros:\f4\fs20\cf0
\par \plain\f4\fs24\cf0 Functions:\f4\fs20\cf0
\par
\par \plain\f4\fs20\cf0 \tab Function:
\par \plain\f4\fs20\cf0\b \tab \tab void GPT2_vInit(void)\plain\f4\fs20\cf0
\par \tab Description:
\par \plain\f4\fs20\cf0\i
\tab \tab This is the initialization function of the GPT2 function

\par \tab \tab library. It is assumed that the SFRs used by this library

\par \tab \tab are in reset state.

\par \plain\f4\fs20\cf0 \tab Returnvalue:
\par \tab \tab \plain\f4\fs20\cf0\b None\plain\f4\fs20\cf0
\par \plain\f4\fs20\cf0 \tab Parameters:
\par \plain\f4\fs20\cf0\b 
\tab \tab None

\par
\par \plain\f4\fs20\cf0 \tab Function:
\par \plain\f4\fs20\cf0\b \tab \tab void GPT2_viTmr5(void)\plain\f4\fs20\cf0
\par \tab Description:
\par \plain\f4\fs20\cf0\i
\tab \tab This is the interrupt service routine for the GPT2 timer 5.

\par \tab \tab It is called up in the case of over or underflow of the

\par \tab \tab timer 5 register.

\par \tab \tab Please note that you have to add application specific code

\par \tab \tab to this function.

\par \plain\f4\fs20\cf0 \tab Returnvalue:
\par \tab \tab \plain\f4\fs20\cf0\b None\plain\f4\fs20\cf0
\par \plain\f4\fs20\cf0 \tab Parameters:
\par \plain\f4\fs20\cf0\b 
\tab \tab None

\par
\par \plain\f4\fs24\cf0 Initialization:
\par \plain\f4\fs20\cf0\b
\par
\tab Configuration of Timer Block Prescaler 1:\par 
\par 
\tab Configuration of Timer Block Prescaler 2:\par 
\tab - prescaler for timer block 2 is 4\par 
\par 
\tab Configuration of the GPT2 Core Timer 5:\par 
\tab - timer 5 works in timer mode\par 
\tab - prescaler factor is 4\par 
\tab - up/down control bit is reset\par 
\tab - external up/down control is disabled\par 
\tab - timer 5 remote control is disabled\par 
\par 
\tab Configuration of the GPT2 Core Timer 6:\par 
\tab - timer 6 works in timer mode\par 
\tab - prescaler factor is 4\par 
\tab - up/down control bit is reset\par 
\tab - external up/down control is disabled\par 
\tab - alternate output function T6OUT (P6.2) is disabled\par 
\tab - alternate output function T6OUT (P7.0) is disabled\par 
\tab - timer 6 output toggle latch (T6OTL) is set to 0\par 
\tab - timer 6 run bit is reset\par 
\tab - timer 6 is not cleared on a capture\par 
\par 
\tab Configuration of the GPT2 CAPREL:\par 
\tab - capture T5 into CAPREL is disabled\par 
\tab - capture trigger from pin CAPIN\par 
\tab - capure is disabled\par 
\tab - timer 5 is not cleared on a capture\par 
\tab - timer 5 is just captured without any correction\par 
\par 
\tab Configuration of the used GPT2 Port Pins:\par 
\par 
\tab Configuration of the used GPT2 Interrupts:\par 
\tab timer 5 service request node configuration:\par 
\tab - timer 5 interrupt priority level (ILVL) = 14\par 
\tab - timer 5 interrupt group level (GLVL) = 0\par 
\tab - timer 5 group priority extension (GPX) = 0\par 
\par 
\tab Use PEC channel 0 for GPT2 T5 INT:\par 
\tab - normal interrupt\par 
\tab - pointers are not modified\par 
\tab - transfer a word\par 
\tab - service End of PEC interrrupt by a EOP interrupt node is disabled\par 
\tab - channel link mode is disabled\par 
\par 

\par \plain\f4\fs20\cf0
\par \plain\f4\fs28\cf0\ul MultiCAN Module (CAN)
\par
\par \plain\f4\fs24\cf0 Macros:\f4\fs20\cf0
\par \plain\f4\fs24\cf0 Functions:\f4\fs20\cf0
\par
\par \plain\f4\fs20\cf0 \tab Function:
\par \plain\f4\fs20\cf0\b \tab \tab void CAN_vInit(void)\plain\f4\fs20\cf0
\par \tab Description:
\par \plain\f4\fs20\cf0\i
\tab \tab This is the initialization function of the CAN function

\par \tab \tab library. It is assumed that the SFRs used by this library

\par \tab \tab are in reset state.

\par \plain\f4\fs20\cf0 \tab Returnvalue:
\par \tab \tab \plain\f4\fs20\cf0\b None\plain\f4\fs20\cf0
\par \plain\f4\fs20\cf0 \tab Parameters:
\par \plain\f4\fs20\cf0\b 
\tab \tab None

\par
\par \plain\f4\fs20\cf0 \tab Function:
\par \plain\f4\fs20\cf0\b \tab \tab void CAN_vGetMsgObj(ubyte ubObjNr, stCAN_SWObj *pstObj)\plain\f4\fs20\cf0
\par \tab Description:
\par \plain\f4\fs20\cf0\i
\tab \tab This function fills the forwarded SW message object with

\par \tab \tab the content of the chosen HW message object.

\par \tab \tab For Receive Message object use function CAN_vReleaseObj, to

\par \tab \tab release the message object.

\par \tab \tab The structure of the SW message object is defined in the

\par \tab \tab header file CAN.h (see stCAN_SWObj).

\par \plain\f4\fs20\cf0 \tab Returnvalue:
\par \tab \tab \plain\f4\fs20\cf0\b None\plain\f4\fs20\cf0
\par \plain\f4\fs20\cf0 \tab Parameters:
\par \plain\f4\fs20\cf0\b 
\tab \tab ubObjNr:

\par \tab \tab Number of the message object to be read (0-127)

\par \tab \tab *pstObj:

\par \tab \tab Pointer on a message object to be filled by this function

\par
\par \plain\f4\fs20\cf0 \tab Function:
\par \plain\f4\fs20\cf0\b \tab \tab void CAN_vTransmit(ubyte ubObjNr)\plain\f4\fs20\cf0
\par \tab Description:
\par \plain\f4\fs20\cf0\i
\tab \tab This function triggers the CAN controller to send the

\par \tab \tab selected message.

\par \tab \tab If the selected message object is a TRANSMIT OBJECT then

\par \tab \tab this function triggers the sending of a data frame. If

\par \tab \tab however the selected message object is a RECEIVE OBJECT

\par \tab \tab this function triggers the sending of a remote frame.

\par \plain\f4\fs20\cf0 \tab Returnvalue:
\par \tab \tab \plain\f4\fs20\cf0\b None\plain\f4\fs20\cf0
\par \plain\f4\fs20\cf0 \tab Parameters:
\par \plain\f4\fs20\cf0\b 
\tab \tab ubObjNr:

\par \tab \tab Number of the message object (0-127)

\par
\par \plain\f4\fs20\cf0 \tab Function:
\par \plain\f4\fs20\cf0\b \tab \tab void CAN_vLoadData(ubyte ubObjNr, ubyte *ubpubData)\plain\f4\fs20\cf0
\par \tab Description:
\par \plain\f4\fs20\cf0\i
\tab \tab If a hardware TRANSMIT OBJECT has to be loaded with data

\par \tab \tab but not with a new identifier, this function may be used

\par \tab \tab instead of the function CAN_vConfigMsgObj. The message

\par \tab \tab object should be accessed by calling the function

\par \tab \tab CAN_ubRequestMsgObj before calling this function. This

\par \tab \tab prevents the CAN controller from working with invalid data.

\par \plain\f4\fs20\cf0 \tab Returnvalue:
\par \tab \tab \plain\f4\fs20\cf0\b None\plain\f4\fs20\cf0
\par \plain\f4\fs20\cf0 \tab Parameters:
\par \plain\f4\fs20\cf0\b 
\tab \tab ubObjNr:

\par \tab \tab Number of the message object to be configured (0-127)

\par \tab \tab *ubpubData:

\par \tab \tab Pointer on a data buffer

\par
\par
\par \plain\f4\fs20\cf0 \tab Macro:
\par \plain\f4\fs20\cf0\b \tab \tab CAN_viSRN0()\plain\f4\fs20\cf0
\par \tab Description:
\par \plain\f4\fs20\cf0\i
\tab \tab 

\par \plain\f4\fs20\cf0 \tab Returnvalue:
\par \tab \tab \plain\f4\fs20\cf0\b \plain\f4\fs20\cf0
\par \plain\f4\fs20\cf0 \tab Parameters:
\par \plain\f4\fs20\cf0\b 
\tab \tab None

\par
\par \plain\f4\fs24\cf0 Initialization:
\par \plain\f4\fs20\cf0\b
\par
\tab Configuration of Kernel State Configuration Register:\par 
\tab - Enable the CAN module(MODEN)\par 
\tab - Enable Bit Protection for MODEN\par 
\par 
\tab Configuration of the Module Clock:\par 
\tab - the CAN module clock = 40,00 MHz\par 
\tab - Normal divider mode selected\par 
\par 
\tab Panel Control\par 
\tab - wait until Panel has finished the initialisation\par 
\par 
\tab Configuration of CAN Node 0:\par 
\par 
\tab General Configuration of the Node 0:\par 
\tab - set INIT and CCE\par 
\par 
\tab - load NODE 0 interrupt pointer register\par 
\par 
\tab Configuration of the used CAN Port Pins:\par 
\tab - Loop-back mode is disabled\par 
\tab - P2.0 is used for CAN0 Receive input(RXDC0C)\par 
\tab - P2.1 is used for CAN0 Transmit output(TXDC0C)\par 
\par 
\tab Configuration of the Node 0 Baud Rate:\par 
\tab - required baud rate = 125,000 kbaud\par 
\tab - real baud rate     = 125,000 kbaud\par 
\tab - sample point       = 60,00 %\par 
\tab - there are 5 time quanta before sample point\par 
\tab - there are 4 time quanta after sample point\par 
\tab - the (re)synchronization jump width is 2 time quanta\par 
\par 
\tab Configuration of the Node 0 Error Counter:\par 
\tab - the error warning threshold value (warning level) is 96\par 
\par 
\tab Configuration of the Frame Counter:\par 
\tab - Frame Counter Mode: the counter is incremented upon the reception\par 
\tab and transmission of frames\par 
\tab - frame counter: 0x0000\par 
\par 
\tab Configuration of CAN Node 1:\par 
\par 
\tab General Configuration of the Node 1:\par 
\tab - set INIT and CCE\par 
\par 
\tab Configuration of CAN Node 2:\par 
\par 
\tab General Configuration of the Node 2:\par 
\tab - set INIT and CCE\par 
\par 
\tab Configuration of CAN Node 3:\par 
\par 
\tab General Configuration of the Node 3:\par 
\tab - set INIT and CCE\par 
\par 
\tab Configuration of CAN Node 4:\par 
\par 
\tab General Configuration of the Node 4:\par 
\tab - set INIT and CCE\par 
\par 
\tab Configuration of the CAN Message Object List Structure:\par 
\par 
\tab Allocate MOs for list 1:\par 
\par 
\tab Configuration of the CAN Message Objects 0 - 127:\par 
\tab Configuration of Message Object 0:\par 
\par 
\tab General Configuration of the Message Object 0 :\par 
\tab - message object 0 is valid\par 
\tab - message object is used as transmit object\par 
\tab - this message object is assigned to list 1 (node 0)\par 
\par 
\tab Configuration of Message Object 0 Arbitration:\par 
\tab - priority class 2; transmit acceptance filtering is based on the CAN\par 
\tab identifier\par 
\tab - standard 11-bit identifier\par 
\tab - identifier 11-bit:      0x030\par 
\par 
\tab Configuration of Message Object 0 Data:\par 
\par 
\tab Configuration of Message Object 0 acceptance mask:\par 
\tab - only accept receive frames with matching IDE bit\par 
\tab - acceptance mask 11-bit: 0x7FF\par 
\par 
\tab Configuration of Message Object 0 interrupt pointer:\par 
\tab - use message pending register 0 bit position 0\par 
\par 
\tab Configuration of Message Object 0 FIFO/Gateway pointer:\par 
\par 
\tab Configuration of Message Object 0 Function control:\par 
\tab - this object is a STANDARD MESSAGE OBJECT\par 
\tab - 8 valid data bytes\par 
\par 
\tab Configuration of Message Object 1:\par 
\par 
\tab General Configuration of the Message Object 1 :\par 
\tab - message object 1 is valid\par 
\tab - message object is used as transmit object\par 
\tab - this message object is assigned to list 1 (node 0)\par 
\par 
\tab Configuration of Message Object 1 Arbitration:\par 
\tab - priority class 1; transmit acceptance filtering is based on the list\par 
\tab order\par 
\tab - standard 11-bit identifier\par 
\tab - identifier 11-bit:      0x031\par 
\par 
\tab Configuration of Message Object 1 Data:\par 
\par 
\tab Configuration of Message Object 1 acceptance mask:\par 
\tab - only accept receive frames with matching IDE bit\par 
\tab - acceptance mask 11-bit: 0x7FF\par 
\par 
\tab Configuration of Message Object 1 interrupt pointer:\par 
\tab - use message pending register 0 bit position 1\par 
\par 
\tab Configuration of Message Object 1 FIFO/Gateway pointer:\par 
\par 
\tab Configuration of Message Object 1 Function control:\par 
\tab - this object is a STANDARD MESSAGE OBJECT\par 
\tab - 8 valid data bytes\par 
\par 
\tab Configuration of Message Object 2:\par 
\par 
\tab General Configuration of the Message Object 2 :\par 
\tab - message object 2 is valid\par 
\tab - message object is used as transmit object\par 
\tab - this message object is assigned to list 1 (node 0)\par 
\par 
\tab Configuration of Message Object 2 Arbitration:\par 
\tab - priority class 1; transmit acceptance filtering is based on the list\par 
\tab order\par 
\tab - standard 11-bit identifier\par 
\tab - identifier 11-bit:      0x040\par 
\par 
\tab Configuration of Message Object 2 Data:\par 
\par 
\tab Configuration of Message Object 2 acceptance mask:\par 
\tab - only accept receive frames with matching IDE bit\par 
\tab - acceptance mask 11-bit: 0x7FF\par 
\par 
\tab Configuration of Message Object 2 interrupt pointer:\par 
\tab - use message pending register 0 bit position 2\par 
\par 
\tab Configuration of Message Object 2 FIFO/Gateway pointer:\par 
\par 
\tab Configuration of Message Object 2 Function control:\par 
\tab - this object is a STANDARD MESSAGE OBJECT\par 
\tab - 8 valid data bytes\par 
\par 
\tab Configuration of Message Object 3:\par 
\par 
\tab General Configuration of the Message Object 3 :\par 
\tab - message object 3 is valid\par 
\tab - message object is used as transmit object\par 
\tab - this message object is assigned to list 1 (node 0)\par 
\par 
\tab Configuration of Message Object 3 Arbitration:\par 
\tab - priority class 1; transmit acceptance filtering is based on the list\par 
\tab order\par 
\tab - standard 11-bit identifier\par 
\tab - identifier 11-bit:      0x041\par 
\par 
\tab Configuration of Message Object 3 Data:\par 
\par 
\tab Configuration of Message Object 3 acceptance mask:\par 
\tab - only accept receive frames with matching IDE bit\par 
\tab - acceptance mask 11-bit: 0x7FF\par 
\par 
\tab Configuration of Message Object 3 interrupt pointer:\par 
\tab - use message pending register 0 bit position 3\par 
\par 
\tab Configuration of Message Object 3 FIFO/Gateway pointer:\par 
\par 
\tab Configuration of Message Object 3 Function control:\par 
\tab - this object is a STANDARD MESSAGE OBJECT\par 
\tab - 8 valid data bytes\par 
\par 
\tab Configuration of Message Object 4:\par 
\par 
\tab General Configuration of the Message Object 4 :\par 
\tab - message object 4 is valid\par 
\tab - message object is used as transmit object\par 
\tab - this message object is assigned to list 1 (node 0)\par 
\par 
\tab Configuration of Message Object 4 Arbitration:\par 
\tab - priority class 1; transmit acceptance filtering is based on the list\par 
\tab order\par 
\tab - standard 11-bit identifier\par 
\tab - identifier 11-bit:      0x050\par 
\par 
\tab Configuration of Message Object 4 Data:\par 
\par 
\tab Configuration of Message Object 4 acceptance mask:\par 
\tab - only accept receive frames with matching IDE bit\par 
\tab - acceptance mask 11-bit: 0x7FF\par 
\par 
\tab Configuration of Message Object 4 interrupt pointer:\par 
\tab - use message pending register 0 bit position 4\par 
\par 
\tab Configuration of Message Object 4 FIFO/Gateway pointer:\par 
\par 
\tab Configuration of Message Object 4 Function control:\par 
\tab - this object is a STANDARD MESSAGE OBJECT\par 
\tab - 8 valid data bytes\par 
\par 
\tab Configuration of Message Object 5:\par 
\par 
\tab General Configuration of the Message Object 5 :\par 
\tab - message object 5 is valid\par 
\tab - message object is used as transmit object\par 
\tab - this message object is assigned to list 1 (node 0)\par 
\par 
\tab Configuration of Message Object 5 Arbitration:\par 
\tab - priority class 1; transmit acceptance filtering is based on the list\par 
\tab order\par 
\tab - standard 11-bit identifier\par 
\tab - identifier 11-bit:      0x051\par 
\par 
\tab Configuration of Message Object 5 Data:\par 
\par 
\tab Configuration of Message Object 5 acceptance mask:\par 
\tab - only accept receive frames with matching IDE bit\par 
\tab - acceptance mask 11-bit: 0x7FF\par 
\par 
\tab Configuration of Message Object 5 interrupt pointer:\par 
\tab - use message pending register 0 bit position 5\par 
\par 
\tab Configuration of Message Object 5 FIFO/Gateway pointer:\par 
\par 
\tab Configuration of Message Object 5 Function control:\par 
\tab - this object is a STANDARD MESSAGE OBJECT\par 
\tab - 8 valid data bytes\par 
\par 
\tab Configuration of Message Object 6:\par 
\par 
\tab General Configuration of the Message Object 6 :\par 
\tab - message object 6 is valid\par 
\tab - message object is used as transmit object\par 
\tab - this message object is assigned to list 1 (node 0)\par 
\par 
\tab Configuration of Message Object 6 Arbitration:\par 
\tab - priority class 1; transmit acceptance filtering is based on the list\par 
\tab order\par 
\tab - standard 11-bit identifier\par 
\tab - identifier 11-bit:      0x020\par 
\par 
\tab Configuration of Message Object 6 Data:\par 
\par 
\tab Configuration of Message Object 6 acceptance mask:\par 
\tab - only accept receive frames with matching IDE bit\par 
\tab - acceptance mask 11-bit: 0x7FF\par 
\par 
\tab Configuration of Message Object 6 interrupt pointer:\par 
\tab - use message pending register 0 bit position 6\par 
\par 
\tab Configuration of Message Object 6 FIFO/Gateway pointer:\par 
\par 
\tab Configuration of Message Object 6 Function control:\par 
\tab - this object is a STANDARD MESSAGE OBJECT\par 
\tab - 8 valid data bytes\par 
\par 
\tab Configuration of Message Object 7:\par 
\par 
\tab General Configuration of the Message Object 7 :\par 
\tab - message object 7 is valid\par 
\tab - message object is used as transmit object\par 
\tab - this message object is assigned to list 1 (node 0)\par 
\par 
\tab Configuration of Message Object 7 Arbitration:\par 
\tab - priority class 1; transmit acceptance filtering is based on the list\par 
\tab order\par 
\tab - standard 11-bit identifier\par 
\tab - identifier 11-bit:      0x021\par 
\par 
\tab Configuration of Message Object 7 Data:\par 
\par 
\tab Configuration of Message Object 7 acceptance mask:\par 
\tab - only accept receive frames with matching IDE bit\par 
\tab - acceptance mask 11-bit: 0x7FF\par 
\par 
\tab Configuration of Message Object 7 interrupt pointer:\par 
\tab - use message pending register 0 bit position 7\par 
\par 
\tab Configuration of Message Object 7 FIFO/Gateway pointer:\par 
\par 
\tab Configuration of Message Object 7 Function control:\par 
\tab - this object is a STANDARD MESSAGE OBJECT\par 
\tab - 8 valid data bytes\par 
\par 
\tab Configuration of Message Object 8:\par 
\par 
\tab General Configuration of the Message Object 8 :\par 
\tab - message object 8 is valid\par 
\tab - message object is used as transmit object\par 
\tab - this message object is assigned to list 1 (node 0)\par 
\par 
\tab Configuration of Message Object 8 Arbitration:\par 
\tab - priority class 1; transmit acceptance filtering is based on the list\par 
\tab order\par 
\tab - standard 11-bit identifier\par 
\tab - identifier 11-bit:      0x022\par 
\par 
\tab Configuration of Message Object 8 Data:\par 
\par 
\tab Configuration of Message Object 8 acceptance mask:\par 
\tab - only accept receive frames with matching IDE bit\par 
\tab - acceptance mask 11-bit: 0x7FF\par 
\par 
\tab Configuration of Message Object 8 interrupt pointer:\par 
\tab - use message pending register 0 bit position 8\par 
\par 
\tab Configuration of Message Object 8 FIFO/Gateway pointer:\par 
\par 
\tab Configuration of Message Object 8 Function control:\par 
\tab - this object is a STANDARD MESSAGE OBJECT\par 
\tab - 8 valid data bytes\par 
\par 
\tab Configuration of Message Object 9:\par 
\par 
\tab General Configuration of the Message Object 9 :\par 
\tab - message object 9 is valid\par 
\tab - message object is used as receive object\par 
\tab - this message object is assigned to list 1 (node 0)\par 
\par 
\tab Configuration of Message Object 9 Arbitration:\par 
\tab - priority class 1; transmit acceptance filtering is based on the list\par 
\tab order\par 
\tab - standard 11-bit identifier\par 
\tab - identifier 11-bit:      0x010\par 
\par 
\tab Configuration of Message Object 9 acceptance mask:\par 
\tab - only accept receive frames with matching IDE bit\par 
\tab - acceptance mask 11-bit: 0x7FF\par 
\par 
\tab Configuration of Message Object 9 interrupt pointer:\par 
\tab - use message pending register 0 bit position 9\par 
\tab - receive interrupt node pointer: MultiCAN SRN 0\par 
\par 
\tab Configuration of Message Object 9 FIFO/Gateway pointer:\par 
\par 
\tab Configuration of Message Object 9 Function control:\par 
\tab - this object is a STANDARD MESSAGE OBJECT\par 
\tab - 8 valid data bytes\par 
\tab - enable receive interrupt; bit RXPND is set after successful\par 
\tab reception of a frame\par 
\par 
\tab Configuration of Message Object 10:\par 
\tab - message object 10 is not valid\par 
\tab Configuration of Message Object 11:\par 
\tab - message object 11 is not valid\par 
\tab Configuration of Message Object 12:\par 
\tab - message object 12 is not valid\par 
\tab Configuration of Message Object 13:\par 
\tab - message object 13 is not valid\par 
\tab Configuration of Message Object 14:\par 
\tab - message object 14 is not valid\par 
\tab Configuration of Message Object 15:\par 
\tab - message object 15 is not valid\par 
\tab Configuration of Message Object 16:\par 
\tab - message object 16 is not valid\par 
\tab Configuration of Message Object 17:\par 
\tab - message object 17 is not valid\par 
\tab Configuration of Message Object 18:\par 
\tab - message object 18 is not valid\par 
\tab Configuration of Message Object 19:\par 
\tab - message object 19 is not valid\par 
\tab Configuration of Message Object 20:\par 
\tab - message object 20 is not valid\par 
\tab Configuration of Message Object 21:\par 
\tab - message object 21 is not valid\par 
\tab Configuration of Message Object 22:\par 
\tab - message object 22 is not valid\par 
\tab Configuration of Message Object 23:\par 
\tab - message object 23 is not valid\par 
\tab Configuration of Message Object 24:\par 
\tab - message object 24 is not valid\par 
\tab Configuration of Message Object 25:\par 
\tab - message object 25 is not valid\par 
\tab Configuration of Message Object 26:\par 
\tab - message object 26 is not valid\par 
\tab Configuration of Message Object 27:\par 
\tab - message object 27 is not valid\par 
\tab Configuration of Message Object 28:\par 
\tab - message object 28 is not valid\par 
\tab Configuration of Message Object 29:\par 
\tab - message object 29 is not valid\par 
\tab Configuration of Message Object 30:\par 
\tab - message object 30 is not valid\par 
\tab Configuration of Message Object 31:\par 
\tab - message object 31 is not valid\par 
\tab Configuration of Message Object 32:\par 
\tab - message object 32 is not valid\par 
\tab Configuration of Message Object 33:\par 
\tab - message object 33 is not valid\par 
\tab Configuration of Message Object 34:\par 
\tab - message object 34 is not valid\par 
\tab Configuration of Message Object 35:\par 
\tab - message object 35 is not valid\par 
\tab Configuration of Message Object 36:\par 
\tab - message object 36 is not valid\par 
\tab Configuration of Message Object 37:\par 
\tab - message object 37 is not valid\par 
\tab Configuration of Message Object 38:\par 
\tab - message object 38 is not valid\par 
\tab Configuration of Message Object 39:\par 
\tab - message object 39 is not valid\par 
\tab Configuration of Message Object 40:\par 
\tab - message object 40 is not valid\par 
\tab Configuration of Message Object 41:\par 
\tab - message object 41 is not valid\par 
\tab Configuration of Message Object 42:\par 
\tab - message object 42 is not valid\par 
\tab Configuration of Message Object 43:\par 
\tab - message object 43 is not valid\par 
\tab Configuration of Message Object 44:\par 
\tab - message object 44 is not valid\par 
\tab Configuration of Message Object 45:\par 
\tab - message object 45 is not valid\par 
\tab Configuration of Message Object 46:\par 
\tab - message object 46 is not valid\par 
\tab Configuration of Message Object 47:\par 
\tab - message object 47 is not valid\par 
\tab Configuration of Message Object 48:\par 
\tab - message object 48 is not valid\par 
\tab Configuration of Message Object 49:\par 
\tab - message object 49 is not valid\par 
\tab Configuration of Message Object 50:\par 
\tab - message object 50 is not valid\par 
\tab Configuration of Message Object 51:\par 
\tab - message object 51 is not valid\par 
\tab Configuration of Message Object 52:\par 
\tab - message object 52 is not valid\par 
\tab Configuration of Message Object 53:\par 
\tab - message object 53 is not valid\par 
\tab Configuration of Message Object 54:\par 
\tab - message object 54 is not valid\par 
\tab Configuration of Message Object 55:\par 
\tab - message object 55 is not valid\par 
\tab Configuration of Message Object 56:\par 
\tab - message object 56 is not valid\par 
\tab Configuration of Message Object 57:\par 
\tab - message object 57 is not valid\par 
\tab Configuration of Message Object 58:\par 
\tab - message object 58 is not valid\par 
\tab Configuration of Message Object 59:\par 
\tab - message object 59 is not valid\par 
\tab Configuration of Message Object 60:\par 
\tab - message object 60 is not valid\par 
\tab Configuration of Message Object 61:\par 
\tab - message object 61 is not valid\par 
\tab Configuration of Message Object 62:\par 
\tab - message object 62 is not valid\par 
\tab Configuration of Message Object 63:\par 
\tab - message object 63 is not valid\par 
\tab Configuration of Message Object 64:\par 
\tab - message object 64 is not valid\par 
\tab Configuration of Message Object 65:\par 
\tab - message object 65 is not valid\par 
\tab Configuration of Message Object 66:\par 
\tab - message object 66 is not valid\par 
\tab Configuration of Message Object 67:\par 
\tab - message object 67 is not valid\par 
\tab Configuration of Message Object 68:\par 
\tab - message object 68 is not valid\par 
\tab Configuration of Message Object 69:\par 
\tab - message object 69 is not valid\par 
\tab Configuration of Message Object 70:\par 
\tab - message object 70 is not valid\par 
\tab Configuration of Message Object 71:\par 
\tab - message object 71 is not valid\par 
\tab Configuration of Message Object 72:\par 
\tab - message object 72 is not valid\par 
\tab Configuration of Message Object 73:\par 
\tab - message object 73 is not valid\par 
\tab Configuration of Message Object 74:\par 
\tab - message object 74 is not valid\par 
\tab Configuration of Message Object 75:\par 
\tab - message object 75 is not valid\par 
\tab Configuration of Message Object 76:\par 
\tab - message object 76 is not valid\par 
\tab Configuration of Message Object 77:\par 
\tab - message object 77 is not valid\par 
\tab Configuration of Message Object 78:\par 
\tab - message object 78 is not valid\par 
\tab Configuration of Message Object 79:\par 
\tab - message object 79 is not valid\par 
\tab Configuration of Message Object 80:\par 
\tab - message object 80 is not valid\par 
\tab Configuration of Message Object 81:\par 
\tab - message object 81 is not valid\par 
\tab Configuration of Message Object 82:\par 
\tab - message object 82 is not valid\par 
\tab Configuration of Message Object 83:\par 
\tab - message object 83 is not valid\par 
\tab Configuration of Message Object 84:\par 
\tab - message object 84 is not valid\par 
\tab Configuration of Message Object 85:\par 
\tab - message object 85 is not valid\par 
\tab Configuration of Message Object 86:\par 
\tab - message object 86 is not valid\par 
\tab Configuration of Message Object 87:\par 
\tab - message object 87 is not valid\par 
\tab Configuration of Message Object 88:\par 
\tab - message object 88 is not valid\par 
\tab Configuration of Message Object 89:\par 
\tab - message object 89 is not valid\par 
\tab Configuration of Message Object 90:\par 
\tab - message object 90 is not valid\par 
\tab Configuration of Message Object 91:\par 
\tab - message object 91 is not valid\par 
\tab Configuration of Message Object 92:\par 
\tab - message object 92 is not valid\par 
\tab Configuration of Message Object 93:\par 
\tab - message object 93 is not valid\par 
\tab Configuration of Message Object 94:\par 
\tab - message object 94 is not valid\par 
\tab Configuration of Message Object 95:\par 
\tab - message object 95 is not valid\par 
\tab Configuration of Message Object 96:\par 
\tab - message object 96 is not valid\par 
\tab Configuration of Message Object 97:\par 
\tab - message object 97 is not valid\par 
\tab Configuration of Message Object 98:\par 
\tab - message object 98 is not valid\par 
\tab Configuration of Message Object 99:\par 
\tab - message object 99 is not valid\par 
\tab Configuration of Message Object 100:\par 
\tab - message object 100 is not valid\par 
\tab Configuration of Message Object 101:\par 
\tab - message object 101 is not valid\par 
\tab Configuration of Message Object 102:\par 
\tab - message object 102 is not valid\par 
\tab Configuration of Message Object 103:\par 
\tab - message object 103 is not valid\par 
\tab Configuration of Message Object 104:\par 
\tab - message object 104 is not valid\par 
\tab Configuration of Message Object 105:\par 
\tab - message object 105 is not valid\par 
\tab Configuration of Message Object 106:\par 
\tab - message object 106 is not valid\par 
\tab Configuration of Message Object 107:\par 
\tab - message object 107 is not valid\par 
\tab Configuration of Message Object 108:\par 
\tab - message object 108 is not valid\par 
\tab Configuration of Message Object 109:\par 
\tab - message object 109 is not valid\par 
\tab Configuration of Message Object 110:\par 
\tab - message object 110 is not valid\par 
\tab Configuration of Message Object 111:\par 
\tab - message object 111 is not valid\par 
\tab Configuration of Message Object 112:\par 
\tab - message object 112 is not valid\par 
\tab Configuration of Message Object 113:\par 
\tab - message object 113 is not valid\par 
\tab Configuration of Message Object 114:\par 
\tab - message object 114 is not valid\par 
\tab Configuration of Message Object 115:\par 
\tab - message object 115 is not valid\par 
\tab Configuration of Message Object 116:\par 
\tab - message object 116 is not valid\par 
\tab Configuration of Message Object 117:\par 
\tab - message object 117 is not valid\par 
\tab Configuration of Message Object 118:\par 
\tab - message object 118 is not valid\par 
\tab Configuration of Message Object 119:\par 
\tab - message object 119 is not valid\par 
\tab Configuration of Message Object 120:\par 
\tab - message object 120 is not valid\par 
\tab Configuration of Message Object 121:\par 
\tab - message object 121 is not valid\par 
\tab Configuration of Message Object 122:\par 
\tab - message object 122 is not valid\par 
\tab Configuration of Message Object 123:\par 
\tab - message object 123 is not valid\par 
\tab Configuration of Message Object 124:\par 
\tab - message object 124 is not valid\par 
\tab Configuration of Message Object 125:\par 
\tab - message object 125 is not valid\par 
\tab Configuration of Message Object 126:\par 
\tab - message object 126 is not valid\par 
\tab Configuration of Message Object 127:\par 
\tab - message object 127 is not valid\par 
\par 
\tab Configuration of Service Request Nodes 0 - 15:\par 
\tab SRN0 service request node configuration:\par 
\tab - SRN0 interrupt priority level (ILVL) = 13\par 
\tab - SRN0 interrupt group level (GLVL) = 0\par 
\tab - SRN0 group priority extension (GPX) = 0\par 
\par 

\par \plain\f4\fs20\cf0
\par \plain\f4\fs28\cf0\ul Interrupt Controller (INT)
\par
\par \plain\f4\fs24\cf0 Macros:\f4\fs20\cf0
\par
\par
\par \plain\f4\fs20\cf0 \tab Macro:
\par \plain\f4\fs20\cf0\b \tab \tab INT_vEnableInterrupt(IntName)\plain\f4\fs20\cf0
\par \tab Description:
\par \plain\f4\fs20\cf0\i
\tab \tab This macro enables the selected interrupt source.

\par \tab \tab Note:

\par \tab \tab Enable only those interrupt sources for which a service

\par \tab \tab routine is installed.

\par \tab \tab Available definitions for IntName see in the header file

\par \plain\f4\fs20\cf0 \tab Returnvalue:
\par \tab \tab \plain\f4\fs20\cf0\b None\plain\f4\fs20\cf0
\par \plain\f4\fs20\cf0 \tab Parameters:
\par \plain\f4\fs20\cf0\b 
\tab \tab IntName:

\par \tab \tab Name of Interrupt (see @Defines in the header file)

\par \plain\f4\fs24\cf0 Functions:\f4\fs20\cf0
\par
\par \plain\f4\fs20\cf0 \tab Function:
\par \plain\f4\fs20\cf0\b \tab \tab void INT_vInit(void)\plain\f4\fs20\cf0
\par \tab Description:
\par \plain\f4\fs20\cf0\i
\tab \tab This is the initialization function of the INT function

\par \tab \tab library. It is assumed that the SFRs used by this library

\par \tab \tab are in reset state.

\par \plain\f4\fs20\cf0 \tab Returnvalue:
\par \tab \tab \plain\f4\fs20\cf0\b None\plain\f4\fs20\cf0
\par \plain\f4\fs20\cf0 \tab Parameters:
\par \plain\f4\fs20\cf0\b 
\tab \tab None

\par
\par \plain\f4\fs24\cf0 Initialization:
\par \plain\f4\fs20\cf0\b
\par
\tab Configuration of used interrupts :\par 
\par 

}
