
main.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000622  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000002e  00800060  00000622  00000696  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         000005c4  00000000  00000000  000006c4  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      000007c2  00000000  00000000  00000c88  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	12 c0       	rjmp	.+36     	; 0x26 <__ctors_end>
   2:	22 c0       	rjmp	.+68     	; 0x48 <__bad_interrupt>
   4:	21 c0       	rjmp	.+66     	; 0x48 <__bad_interrupt>
   6:	20 c0       	rjmp	.+64     	; 0x48 <__bad_interrupt>
   8:	1f c0       	rjmp	.+62     	; 0x48 <__bad_interrupt>
   a:	1e c0       	rjmp	.+60     	; 0x48 <__bad_interrupt>
   c:	1d c0       	rjmp	.+58     	; 0x48 <__bad_interrupt>
   e:	1c c0       	rjmp	.+56     	; 0x48 <__bad_interrupt>
  10:	1b c0       	rjmp	.+54     	; 0x48 <__bad_interrupt>
  12:	1a c0       	rjmp	.+52     	; 0x48 <__bad_interrupt>
  14:	19 c0       	rjmp	.+50     	; 0x48 <__bad_interrupt>
  16:	18 c0       	rjmp	.+48     	; 0x48 <__bad_interrupt>
  18:	17 c0       	rjmp	.+46     	; 0x48 <__bad_interrupt>
  1a:	16 c0       	rjmp	.+44     	; 0x48 <__bad_interrupt>
  1c:	15 c0       	rjmp	.+42     	; 0x48 <__bad_interrupt>
  1e:	14 c0       	rjmp	.+40     	; 0x48 <__bad_interrupt>
  20:	13 c0       	rjmp	.+38     	; 0x48 <__bad_interrupt>
  22:	12 c0       	rjmp	.+36     	; 0x48 <__bad_interrupt>
  24:	11 c0       	rjmp	.+34     	; 0x48 <__bad_interrupt>

00000026 <__ctors_end>:
  26:	11 24       	eor	r1, r1
  28:	1f be       	out	0x3f, r1	; 63
  2a:	cf ed       	ldi	r28, 0xDF	; 223
  2c:	cd bf       	out	0x3d, r28	; 61

0000002e <__do_copy_data>:
  2e:	10 e0       	ldi	r17, 0x00	; 0
  30:	a0 e6       	ldi	r26, 0x60	; 96
  32:	b0 e0       	ldi	r27, 0x00	; 0
  34:	e2 e2       	ldi	r30, 0x22	; 34
  36:	f6 e0       	ldi	r31, 0x06	; 6
  38:	02 c0       	rjmp	.+4      	; 0x3e <.do_copy_data_start>

0000003a <.do_copy_data_loop>:
  3a:	05 90       	lpm	r0, Z+
  3c:	0d 92       	st	X+, r0

0000003e <.do_copy_data_start>:
  3e:	ae 38       	cpi	r26, 0x8E	; 142
  40:	b1 07       	cpc	r27, r17
  42:	d9 f7       	brne	.-10     	; 0x3a <.do_copy_data_loop>
  44:	02 d0       	rcall	.+4      	; 0x4a <main>
  46:	eb c2       	rjmp	.+1494   	; 0x61e <_exit>

00000048 <__bad_interrupt>:
  48:	db cf       	rjmp	.-74     	; 0x0 <__vectors>

0000004a <main>:
#include <avr/io.h>

void disp_char(unsigned char colums[5]);

int main(void)
{
  4a:	df 93       	push	r29
  4c:	cf 93       	push	r28
  4e:	cd b7       	in	r28, 0x3d	; 61
  50:	de b7       	in	r29, 0x3e	; 62
  52:	cc 55       	subi	r28, 0x5C	; 92
  54:	d0 40       	sbci	r29, 0x00	; 0
  56:	0f b6       	in	r0, 0x3f	; 63
  58:	f8 94       	cli
  5a:	de bf       	out	0x3e, r29	; 62
  5c:	0f be       	out	0x3f, r0	; 63
  5e:	cd bf       	out	0x3d, r28	; 61
	unsigned char colums_a[5] = {0x3f, 0x48, 0x48, 0x48, 0x3f};
  60:	ce 01       	movw	r24, r28
  62:	03 96       	adiw	r24, 0x03	; 3
  64:	99 ab       	std	Y+49, r25	; 0x31
  66:	88 ab       	std	Y+48, r24	; 0x30
  68:	e8 e8       	ldi	r30, 0x88	; 136
  6a:	f0 e0       	ldi	r31, 0x00	; 0
  6c:	fb ab       	std	Y+51, r31	; 0x33
  6e:	ea ab       	std	Y+50, r30	; 0x32
  70:	f5 e0       	ldi	r31, 0x05	; 5
  72:	fc ab       	std	Y+52, r31	; 0x34
  74:	ea a9       	ldd	r30, Y+50	; 0x32
  76:	fb a9       	ldd	r31, Y+51	; 0x33
  78:	00 80       	ld	r0, Z
  7a:	8a a9       	ldd	r24, Y+50	; 0x32
  7c:	9b a9       	ldd	r25, Y+51	; 0x33
  7e:	01 96       	adiw	r24, 0x01	; 1
  80:	9b ab       	std	Y+51, r25	; 0x33
  82:	8a ab       	std	Y+50, r24	; 0x32
  84:	e8 a9       	ldd	r30, Y+48	; 0x30
  86:	f9 a9       	ldd	r31, Y+49	; 0x31
  88:	00 82       	st	Z, r0
  8a:	88 a9       	ldd	r24, Y+48	; 0x30
  8c:	99 a9       	ldd	r25, Y+49	; 0x31
  8e:	01 96       	adiw	r24, 0x01	; 1
  90:	99 ab       	std	Y+49, r25	; 0x31
  92:	88 ab       	std	Y+48, r24	; 0x30
  94:	9c a9       	ldd	r25, Y+52	; 0x34
  96:	91 50       	subi	r25, 0x01	; 1
  98:	9c ab       	std	Y+52, r25	; 0x34
  9a:	ec a9       	ldd	r30, Y+52	; 0x34
  9c:	ee 23       	and	r30, r30
  9e:	51 f7       	brne	.-44     	; 0x74 <main+0x2a>
	unsigned char colums_b[5] = {0x7f, 0x49, 0x49, 0x49, 0x36};
  a0:	ce 01       	movw	r24, r28
  a2:	08 96       	adiw	r24, 0x08	; 8
  a4:	9e ab       	std	Y+54, r25	; 0x36
  a6:	8d ab       	std	Y+53, r24	; 0x35
  a8:	e3 e8       	ldi	r30, 0x83	; 131
  aa:	f0 e0       	ldi	r31, 0x00	; 0
  ac:	f8 af       	std	Y+56, r31	; 0x38
  ae:	ef ab       	std	Y+55, r30	; 0x37
  b0:	f5 e0       	ldi	r31, 0x05	; 5
  b2:	f9 af       	std	Y+57, r31	; 0x39
  b4:	ef a9       	ldd	r30, Y+55	; 0x37
  b6:	f8 ad       	ldd	r31, Y+56	; 0x38
  b8:	00 80       	ld	r0, Z
  ba:	8f a9       	ldd	r24, Y+55	; 0x37
  bc:	98 ad       	ldd	r25, Y+56	; 0x38
  be:	01 96       	adiw	r24, 0x01	; 1
  c0:	98 af       	std	Y+56, r25	; 0x38
  c2:	8f ab       	std	Y+55, r24	; 0x37
  c4:	ed a9       	ldd	r30, Y+53	; 0x35
  c6:	fe a9       	ldd	r31, Y+54	; 0x36
  c8:	00 82       	st	Z, r0
  ca:	8d a9       	ldd	r24, Y+53	; 0x35
  cc:	9e a9       	ldd	r25, Y+54	; 0x36
  ce:	01 96       	adiw	r24, 0x01	; 1
  d0:	9e ab       	std	Y+54, r25	; 0x36
  d2:	8d ab       	std	Y+53, r24	; 0x35
  d4:	99 ad       	ldd	r25, Y+57	; 0x39
  d6:	91 50       	subi	r25, 0x01	; 1
  d8:	99 af       	std	Y+57, r25	; 0x39
  da:	e9 ad       	ldd	r30, Y+57	; 0x39
  dc:	ee 23       	and	r30, r30
  de:	51 f7       	brne	.-44     	; 0xb4 <main+0x6a>
	unsigned char colums_c[5] = {0x3e, 0x41, 0x41, 0x41, 0x22};
  e0:	ce 01       	movw	r24, r28
  e2:	0d 96       	adiw	r24, 0x0d	; 13
  e4:	9b af       	std	Y+59, r25	; 0x3b
  e6:	8a af       	std	Y+58, r24	; 0x3a
  e8:	ee e7       	ldi	r30, 0x7E	; 126
  ea:	f0 e0       	ldi	r31, 0x00	; 0
  ec:	fd af       	std	Y+61, r31	; 0x3d
  ee:	ec af       	std	Y+60, r30	; 0x3c
  f0:	f5 e0       	ldi	r31, 0x05	; 5
  f2:	fe af       	std	Y+62, r31	; 0x3e
  f4:	ec ad       	ldd	r30, Y+60	; 0x3c
  f6:	fd ad       	ldd	r31, Y+61	; 0x3d
  f8:	00 80       	ld	r0, Z
  fa:	8c ad       	ldd	r24, Y+60	; 0x3c
  fc:	9d ad       	ldd	r25, Y+61	; 0x3d
  fe:	01 96       	adiw	r24, 0x01	; 1
 100:	9d af       	std	Y+61, r25	; 0x3d
 102:	8c af       	std	Y+60, r24	; 0x3c
 104:	ea ad       	ldd	r30, Y+58	; 0x3a
 106:	fb ad       	ldd	r31, Y+59	; 0x3b
 108:	00 82       	st	Z, r0
 10a:	8a ad       	ldd	r24, Y+58	; 0x3a
 10c:	9b ad       	ldd	r25, Y+59	; 0x3b
 10e:	01 96       	adiw	r24, 0x01	; 1
 110:	9b af       	std	Y+59, r25	; 0x3b
 112:	8a af       	std	Y+58, r24	; 0x3a
 114:	9e ad       	ldd	r25, Y+62	; 0x3e
 116:	91 50       	subi	r25, 0x01	; 1
 118:	9e af       	std	Y+62, r25	; 0x3e
 11a:	ee ad       	ldd	r30, Y+62	; 0x3e
 11c:	ee 23       	and	r30, r30
 11e:	51 f7       	brne	.-44     	; 0xf4 <__stack+0x15>
	unsigned char colums_d[5] = {0x7f, 0x41, 0x41, 0x41, 0x3e};
 120:	ce 01       	movw	r24, r28
 122:	42 96       	adiw	r24, 0x12	; 18
 124:	21 96       	adiw	r28, 0x01	; 1
 126:	9f af       	std	Y+63, r25	; 0x3f
 128:	8e af       	std	Y+62, r24	; 0x3e
 12a:	21 97       	sbiw	r28, 0x01	; 1
 12c:	e9 e7       	ldi	r30, 0x79	; 121
 12e:	f0 e0       	ldi	r31, 0x00	; 0
 130:	23 96       	adiw	r28, 0x03	; 3
 132:	ff af       	std	Y+63, r31	; 0x3f
 134:	ee af       	std	Y+62, r30	; 0x3e
 136:	23 97       	sbiw	r28, 0x03	; 3
 138:	f5 e0       	ldi	r31, 0x05	; 5
 13a:	24 96       	adiw	r28, 0x04	; 4
 13c:	ff af       	std	Y+63, r31	; 0x3f
 13e:	24 97       	sbiw	r28, 0x04	; 4
 140:	23 96       	adiw	r28, 0x03	; 3
 142:	ee ad       	ldd	r30, Y+62	; 0x3e
 144:	ff ad       	ldd	r31, Y+63	; 0x3f
 146:	23 97       	sbiw	r28, 0x03	; 3
 148:	00 80       	ld	r0, Z
 14a:	23 96       	adiw	r28, 0x03	; 3
 14c:	8e ad       	ldd	r24, Y+62	; 0x3e
 14e:	9f ad       	ldd	r25, Y+63	; 0x3f
 150:	23 97       	sbiw	r28, 0x03	; 3
 152:	01 96       	adiw	r24, 0x01	; 1
 154:	23 96       	adiw	r28, 0x03	; 3
 156:	9f af       	std	Y+63, r25	; 0x3f
 158:	8e af       	std	Y+62, r24	; 0x3e
 15a:	23 97       	sbiw	r28, 0x03	; 3
 15c:	21 96       	adiw	r28, 0x01	; 1
 15e:	ee ad       	ldd	r30, Y+62	; 0x3e
 160:	ff ad       	ldd	r31, Y+63	; 0x3f
 162:	21 97       	sbiw	r28, 0x01	; 1
 164:	00 82       	st	Z, r0
 166:	21 96       	adiw	r28, 0x01	; 1
 168:	8e ad       	ldd	r24, Y+62	; 0x3e
 16a:	9f ad       	ldd	r25, Y+63	; 0x3f
 16c:	21 97       	sbiw	r28, 0x01	; 1
 16e:	01 96       	adiw	r24, 0x01	; 1
 170:	21 96       	adiw	r28, 0x01	; 1
 172:	9f af       	std	Y+63, r25	; 0x3f
 174:	8e af       	std	Y+62, r24	; 0x3e
 176:	21 97       	sbiw	r28, 0x01	; 1
 178:	24 96       	adiw	r28, 0x04	; 4
 17a:	9f ad       	ldd	r25, Y+63	; 0x3f
 17c:	24 97       	sbiw	r28, 0x04	; 4
 17e:	91 50       	subi	r25, 0x01	; 1
 180:	24 96       	adiw	r28, 0x04	; 4
 182:	9f af       	std	Y+63, r25	; 0x3f
 184:	24 97       	sbiw	r28, 0x04	; 4
 186:	24 96       	adiw	r28, 0x04	; 4
 188:	ef ad       	ldd	r30, Y+63	; 0x3f
 18a:	24 97       	sbiw	r28, 0x04	; 4
 18c:	ee 23       	and	r30, r30
 18e:	c1 f6       	brne	.-80     	; 0x140 <__stack+0x61>
	unsigned char colums_e[5] = {0x7f, 0x49, 0x49, 0x49, 0x41};
 190:	ce 01       	movw	r24, r28
 192:	47 96       	adiw	r24, 0x17	; 23
 194:	26 96       	adiw	r28, 0x06	; 6
 196:	9f af       	std	Y+63, r25	; 0x3f
 198:	8e af       	std	Y+62, r24	; 0x3e
 19a:	26 97       	sbiw	r28, 0x06	; 6
 19c:	e4 e7       	ldi	r30, 0x74	; 116
 19e:	f0 e0       	ldi	r31, 0x00	; 0
 1a0:	28 96       	adiw	r28, 0x08	; 8
 1a2:	ff af       	std	Y+63, r31	; 0x3f
 1a4:	ee af       	std	Y+62, r30	; 0x3e
 1a6:	28 97       	sbiw	r28, 0x08	; 8
 1a8:	f5 e0       	ldi	r31, 0x05	; 5
 1aa:	29 96       	adiw	r28, 0x09	; 9
 1ac:	ff af       	std	Y+63, r31	; 0x3f
 1ae:	29 97       	sbiw	r28, 0x09	; 9
 1b0:	28 96       	adiw	r28, 0x08	; 8
 1b2:	ee ad       	ldd	r30, Y+62	; 0x3e
 1b4:	ff ad       	ldd	r31, Y+63	; 0x3f
 1b6:	28 97       	sbiw	r28, 0x08	; 8
 1b8:	00 80       	ld	r0, Z
 1ba:	28 96       	adiw	r28, 0x08	; 8
 1bc:	8e ad       	ldd	r24, Y+62	; 0x3e
 1be:	9f ad       	ldd	r25, Y+63	; 0x3f
 1c0:	28 97       	sbiw	r28, 0x08	; 8
 1c2:	01 96       	adiw	r24, 0x01	; 1
 1c4:	28 96       	adiw	r28, 0x08	; 8
 1c6:	9f af       	std	Y+63, r25	; 0x3f
 1c8:	8e af       	std	Y+62, r24	; 0x3e
 1ca:	28 97       	sbiw	r28, 0x08	; 8
 1cc:	26 96       	adiw	r28, 0x06	; 6
 1ce:	ee ad       	ldd	r30, Y+62	; 0x3e
 1d0:	ff ad       	ldd	r31, Y+63	; 0x3f
 1d2:	26 97       	sbiw	r28, 0x06	; 6
 1d4:	00 82       	st	Z, r0
 1d6:	26 96       	adiw	r28, 0x06	; 6
 1d8:	8e ad       	ldd	r24, Y+62	; 0x3e
 1da:	9f ad       	ldd	r25, Y+63	; 0x3f
 1dc:	26 97       	sbiw	r28, 0x06	; 6
 1de:	01 96       	adiw	r24, 0x01	; 1
 1e0:	26 96       	adiw	r28, 0x06	; 6
 1e2:	9f af       	std	Y+63, r25	; 0x3f
 1e4:	8e af       	std	Y+62, r24	; 0x3e
 1e6:	26 97       	sbiw	r28, 0x06	; 6
 1e8:	29 96       	adiw	r28, 0x09	; 9
 1ea:	9f ad       	ldd	r25, Y+63	; 0x3f
 1ec:	29 97       	sbiw	r28, 0x09	; 9
 1ee:	91 50       	subi	r25, 0x01	; 1
 1f0:	29 96       	adiw	r28, 0x09	; 9
 1f2:	9f af       	std	Y+63, r25	; 0x3f
 1f4:	29 97       	sbiw	r28, 0x09	; 9
 1f6:	29 96       	adiw	r28, 0x09	; 9
 1f8:	ef ad       	ldd	r30, Y+63	; 0x3f
 1fa:	29 97       	sbiw	r28, 0x09	; 9
 1fc:	ee 23       	and	r30, r30
 1fe:	c1 f6       	brne	.-80     	; 0x1b0 <__stack+0xd1>
	unsigned char colums_f[5] = {0x7f, 0x48, 0x48, 0x48, 0x40};
 200:	ce 01       	movw	r24, r28
 202:	4c 96       	adiw	r24, 0x1c	; 28
 204:	2b 96       	adiw	r28, 0x0b	; 11
 206:	9f af       	std	Y+63, r25	; 0x3f
 208:	8e af       	std	Y+62, r24	; 0x3e
 20a:	2b 97       	sbiw	r28, 0x0b	; 11
 20c:	ef e6       	ldi	r30, 0x6F	; 111
 20e:	f0 e0       	ldi	r31, 0x00	; 0
 210:	2d 96       	adiw	r28, 0x0d	; 13
 212:	ff af       	std	Y+63, r31	; 0x3f
 214:	ee af       	std	Y+62, r30	; 0x3e
 216:	2d 97       	sbiw	r28, 0x0d	; 13
 218:	f5 e0       	ldi	r31, 0x05	; 5
 21a:	2e 96       	adiw	r28, 0x0e	; 14
 21c:	ff af       	std	Y+63, r31	; 0x3f
 21e:	2e 97       	sbiw	r28, 0x0e	; 14
 220:	2d 96       	adiw	r28, 0x0d	; 13
 222:	ee ad       	ldd	r30, Y+62	; 0x3e
 224:	ff ad       	ldd	r31, Y+63	; 0x3f
 226:	2d 97       	sbiw	r28, 0x0d	; 13
 228:	00 80       	ld	r0, Z
 22a:	2d 96       	adiw	r28, 0x0d	; 13
 22c:	8e ad       	ldd	r24, Y+62	; 0x3e
 22e:	9f ad       	ldd	r25, Y+63	; 0x3f
 230:	2d 97       	sbiw	r28, 0x0d	; 13
 232:	01 96       	adiw	r24, 0x01	; 1
 234:	2d 96       	adiw	r28, 0x0d	; 13
 236:	9f af       	std	Y+63, r25	; 0x3f
 238:	8e af       	std	Y+62, r24	; 0x3e
 23a:	2d 97       	sbiw	r28, 0x0d	; 13
 23c:	2b 96       	adiw	r28, 0x0b	; 11
 23e:	ee ad       	ldd	r30, Y+62	; 0x3e
 240:	ff ad       	ldd	r31, Y+63	; 0x3f
 242:	2b 97       	sbiw	r28, 0x0b	; 11
 244:	00 82       	st	Z, r0
 246:	2b 96       	adiw	r28, 0x0b	; 11
 248:	8e ad       	ldd	r24, Y+62	; 0x3e
 24a:	9f ad       	ldd	r25, Y+63	; 0x3f
 24c:	2b 97       	sbiw	r28, 0x0b	; 11
 24e:	01 96       	adiw	r24, 0x01	; 1
 250:	2b 96       	adiw	r28, 0x0b	; 11
 252:	9f af       	std	Y+63, r25	; 0x3f
 254:	8e af       	std	Y+62, r24	; 0x3e
 256:	2b 97       	sbiw	r28, 0x0b	; 11
 258:	2e 96       	adiw	r28, 0x0e	; 14
 25a:	9f ad       	ldd	r25, Y+63	; 0x3f
 25c:	2e 97       	sbiw	r28, 0x0e	; 14
 25e:	91 50       	subi	r25, 0x01	; 1
 260:	2e 96       	adiw	r28, 0x0e	; 14
 262:	9f af       	std	Y+63, r25	; 0x3f
 264:	2e 97       	sbiw	r28, 0x0e	; 14
 266:	2e 96       	adiw	r28, 0x0e	; 14
 268:	ef ad       	ldd	r30, Y+63	; 0x3f
 26a:	2e 97       	sbiw	r28, 0x0e	; 14
 26c:	ee 23       	and	r30, r30
 26e:	c1 f6       	brne	.-80     	; 0x220 <__stack+0x141>
	unsigned char colums_h[5] = {0x7f, 0x08, 0x08, 0x08, 0x7f};
 270:	ce 01       	movw	r24, r28
 272:	81 96       	adiw	r24, 0x21	; 33
 274:	60 96       	adiw	r28, 0x10	; 16
 276:	9f af       	std	Y+63, r25	; 0x3f
 278:	8e af       	std	Y+62, r24	; 0x3e
 27a:	60 97       	sbiw	r28, 0x10	; 16
 27c:	ea e6       	ldi	r30, 0x6A	; 106
 27e:	f0 e0       	ldi	r31, 0x00	; 0
 280:	62 96       	adiw	r28, 0x12	; 18
 282:	ff af       	std	Y+63, r31	; 0x3f
 284:	ee af       	std	Y+62, r30	; 0x3e
 286:	62 97       	sbiw	r28, 0x12	; 18
 288:	f5 e0       	ldi	r31, 0x05	; 5
 28a:	63 96       	adiw	r28, 0x13	; 19
 28c:	ff af       	std	Y+63, r31	; 0x3f
 28e:	63 97       	sbiw	r28, 0x13	; 19
 290:	62 96       	adiw	r28, 0x12	; 18
 292:	ee ad       	ldd	r30, Y+62	; 0x3e
 294:	ff ad       	ldd	r31, Y+63	; 0x3f
 296:	62 97       	sbiw	r28, 0x12	; 18
 298:	00 80       	ld	r0, Z
 29a:	62 96       	adiw	r28, 0x12	; 18
 29c:	8e ad       	ldd	r24, Y+62	; 0x3e
 29e:	9f ad       	ldd	r25, Y+63	; 0x3f
 2a0:	62 97       	sbiw	r28, 0x12	; 18
 2a2:	01 96       	adiw	r24, 0x01	; 1
 2a4:	62 96       	adiw	r28, 0x12	; 18
 2a6:	9f af       	std	Y+63, r25	; 0x3f
 2a8:	8e af       	std	Y+62, r24	; 0x3e
 2aa:	62 97       	sbiw	r28, 0x12	; 18
 2ac:	60 96       	adiw	r28, 0x10	; 16
 2ae:	ee ad       	ldd	r30, Y+62	; 0x3e
 2b0:	ff ad       	ldd	r31, Y+63	; 0x3f
 2b2:	60 97       	sbiw	r28, 0x10	; 16
 2b4:	00 82       	st	Z, r0
 2b6:	60 96       	adiw	r28, 0x10	; 16
 2b8:	8e ad       	ldd	r24, Y+62	; 0x3e
 2ba:	9f ad       	ldd	r25, Y+63	; 0x3f
 2bc:	60 97       	sbiw	r28, 0x10	; 16
 2be:	01 96       	adiw	r24, 0x01	; 1
 2c0:	60 96       	adiw	r28, 0x10	; 16
 2c2:	9f af       	std	Y+63, r25	; 0x3f
 2c4:	8e af       	std	Y+62, r24	; 0x3e
 2c6:	60 97       	sbiw	r28, 0x10	; 16
 2c8:	63 96       	adiw	r28, 0x13	; 19
 2ca:	9f ad       	ldd	r25, Y+63	; 0x3f
 2cc:	63 97       	sbiw	r28, 0x13	; 19
 2ce:	91 50       	subi	r25, 0x01	; 1
 2d0:	63 96       	adiw	r28, 0x13	; 19
 2d2:	9f af       	std	Y+63, r25	; 0x3f
 2d4:	63 97       	sbiw	r28, 0x13	; 19
 2d6:	63 96       	adiw	r28, 0x13	; 19
 2d8:	ef ad       	ldd	r30, Y+63	; 0x3f
 2da:	63 97       	sbiw	r28, 0x13	; 19
 2dc:	ee 23       	and	r30, r30
 2de:	c1 f6       	brne	.-80     	; 0x290 <__stack+0x1b1>
	unsigned char colums_l[5] = {0x7f, 0x01, 0x01, 0x01, 0x01};
 2e0:	ce 01       	movw	r24, r28
 2e2:	86 96       	adiw	r24, 0x26	; 38
 2e4:	65 96       	adiw	r28, 0x15	; 21
 2e6:	9f af       	std	Y+63, r25	; 0x3f
 2e8:	8e af       	std	Y+62, r24	; 0x3e
 2ea:	65 97       	sbiw	r28, 0x15	; 21
 2ec:	e5 e6       	ldi	r30, 0x65	; 101
 2ee:	f0 e0       	ldi	r31, 0x00	; 0
 2f0:	67 96       	adiw	r28, 0x17	; 23
 2f2:	ff af       	std	Y+63, r31	; 0x3f
 2f4:	ee af       	std	Y+62, r30	; 0x3e
 2f6:	67 97       	sbiw	r28, 0x17	; 23
 2f8:	f5 e0       	ldi	r31, 0x05	; 5
 2fa:	68 96       	adiw	r28, 0x18	; 24
 2fc:	ff af       	std	Y+63, r31	; 0x3f
 2fe:	68 97       	sbiw	r28, 0x18	; 24
 300:	67 96       	adiw	r28, 0x17	; 23
 302:	ee ad       	ldd	r30, Y+62	; 0x3e
 304:	ff ad       	ldd	r31, Y+63	; 0x3f
 306:	67 97       	sbiw	r28, 0x17	; 23
 308:	00 80       	ld	r0, Z
 30a:	67 96       	adiw	r28, 0x17	; 23
 30c:	8e ad       	ldd	r24, Y+62	; 0x3e
 30e:	9f ad       	ldd	r25, Y+63	; 0x3f
 310:	67 97       	sbiw	r28, 0x17	; 23
 312:	01 96       	adiw	r24, 0x01	; 1
 314:	67 96       	adiw	r28, 0x17	; 23
 316:	9f af       	std	Y+63, r25	; 0x3f
 318:	8e af       	std	Y+62, r24	; 0x3e
 31a:	67 97       	sbiw	r28, 0x17	; 23
 31c:	65 96       	adiw	r28, 0x15	; 21
 31e:	ee ad       	ldd	r30, Y+62	; 0x3e
 320:	ff ad       	ldd	r31, Y+63	; 0x3f
 322:	65 97       	sbiw	r28, 0x15	; 21
 324:	00 82       	st	Z, r0
 326:	65 96       	adiw	r28, 0x15	; 21
 328:	8e ad       	ldd	r24, Y+62	; 0x3e
 32a:	9f ad       	ldd	r25, Y+63	; 0x3f
 32c:	65 97       	sbiw	r28, 0x15	; 21
 32e:	01 96       	adiw	r24, 0x01	; 1
 330:	65 96       	adiw	r28, 0x15	; 21
 332:	9f af       	std	Y+63, r25	; 0x3f
 334:	8e af       	std	Y+62, r24	; 0x3e
 336:	65 97       	sbiw	r28, 0x15	; 21
 338:	68 96       	adiw	r28, 0x18	; 24
 33a:	9f ad       	ldd	r25, Y+63	; 0x3f
 33c:	68 97       	sbiw	r28, 0x18	; 24
 33e:	91 50       	subi	r25, 0x01	; 1
 340:	68 96       	adiw	r28, 0x18	; 24
 342:	9f af       	std	Y+63, r25	; 0x3f
 344:	68 97       	sbiw	r28, 0x18	; 24
 346:	68 96       	adiw	r28, 0x18	; 24
 348:	ef ad       	ldd	r30, Y+63	; 0x3f
 34a:	68 97       	sbiw	r28, 0x18	; 24
 34c:	ee 23       	and	r30, r30
 34e:	c1 f6       	brne	.-80     	; 0x300 <__stack+0x221>
	unsigned char colums_o[5] = {0x3e, 0x41, 0x41, 0x41, 0x3e};
 350:	ce 01       	movw	r24, r28
 352:	8b 96       	adiw	r24, 0x2b	; 43
 354:	6a 96       	adiw	r28, 0x1a	; 26
 356:	9f af       	std	Y+63, r25	; 0x3f
 358:	8e af       	std	Y+62, r24	; 0x3e
 35a:	6a 97       	sbiw	r28, 0x1a	; 26
 35c:	e0 e6       	ldi	r30, 0x60	; 96
 35e:	f0 e0       	ldi	r31, 0x00	; 0
 360:	6c 96       	adiw	r28, 0x1c	; 28
 362:	ff af       	std	Y+63, r31	; 0x3f
 364:	ee af       	std	Y+62, r30	; 0x3e
 366:	6c 97       	sbiw	r28, 0x1c	; 28
 368:	f5 e0       	ldi	r31, 0x05	; 5
 36a:	6d 96       	adiw	r28, 0x1d	; 29
 36c:	ff af       	std	Y+63, r31	; 0x3f
 36e:	6d 97       	sbiw	r28, 0x1d	; 29
 370:	6c 96       	adiw	r28, 0x1c	; 28
 372:	ee ad       	ldd	r30, Y+62	; 0x3e
 374:	ff ad       	ldd	r31, Y+63	; 0x3f
 376:	6c 97       	sbiw	r28, 0x1c	; 28
 378:	00 80       	ld	r0, Z
 37a:	6c 96       	adiw	r28, 0x1c	; 28
 37c:	8e ad       	ldd	r24, Y+62	; 0x3e
 37e:	9f ad       	ldd	r25, Y+63	; 0x3f
 380:	6c 97       	sbiw	r28, 0x1c	; 28
 382:	01 96       	adiw	r24, 0x01	; 1
 384:	6c 96       	adiw	r28, 0x1c	; 28
 386:	9f af       	std	Y+63, r25	; 0x3f
 388:	8e af       	std	Y+62, r24	; 0x3e
 38a:	6c 97       	sbiw	r28, 0x1c	; 28
 38c:	6a 96       	adiw	r28, 0x1a	; 26
 38e:	ee ad       	ldd	r30, Y+62	; 0x3e
 390:	ff ad       	ldd	r31, Y+63	; 0x3f
 392:	6a 97       	sbiw	r28, 0x1a	; 26
 394:	00 82       	st	Z, r0
 396:	6a 96       	adiw	r28, 0x1a	; 26
 398:	8e ad       	ldd	r24, Y+62	; 0x3e
 39a:	9f ad       	ldd	r25, Y+63	; 0x3f
 39c:	6a 97       	sbiw	r28, 0x1a	; 26
 39e:	01 96       	adiw	r24, 0x01	; 1
 3a0:	6a 96       	adiw	r28, 0x1a	; 26
 3a2:	9f af       	std	Y+63, r25	; 0x3f
 3a4:	8e af       	std	Y+62, r24	; 0x3e
 3a6:	6a 97       	sbiw	r28, 0x1a	; 26
 3a8:	6d 96       	adiw	r28, 0x1d	; 29
 3aa:	9f ad       	ldd	r25, Y+63	; 0x3f
 3ac:	6d 97       	sbiw	r28, 0x1d	; 29
 3ae:	91 50       	subi	r25, 0x01	; 1
 3b0:	6d 96       	adiw	r28, 0x1d	; 29
 3b2:	9f af       	std	Y+63, r25	; 0x3f
 3b4:	6d 97       	sbiw	r28, 0x1d	; 29
 3b6:	6d 96       	adiw	r28, 0x1d	; 29
 3b8:	ef ad       	ldd	r30, Y+63	; 0x3f
 3ba:	6d 97       	sbiw	r28, 0x1d	; 29
 3bc:	ee 23       	and	r30, r30
 3be:	c1 f6       	brne	.-80     	; 0x370 <__stack+0x291>
	unsigned int i;
	
	DDRB |= 0x1f;
 3c0:	a7 e3       	ldi	r26, 0x37	; 55
 3c2:	b0 e0       	ldi	r27, 0x00	; 0
 3c4:	e7 e3       	ldi	r30, 0x37	; 55
 3c6:	f0 e0       	ldi	r31, 0x00	; 0
 3c8:	80 81       	ld	r24, Z
 3ca:	8f 61       	ori	r24, 0x1F	; 31
 3cc:	8c 93       	st	X, r24
	DDRD |= 0x7c;
 3ce:	a1 e3       	ldi	r26, 0x31	; 49
 3d0:	b0 e0       	ldi	r27, 0x00	; 0
 3d2:	e1 e3       	ldi	r30, 0x31	; 49
 3d4:	f0 e0       	ldi	r31, 0x00	; 0
 3d6:	80 81       	ld	r24, Z
 3d8:	8c 67       	ori	r24, 0x7C	; 124
 3da:	8c 93       	st	X, r24
	DDRA |= 0x03;
 3dc:	aa e3       	ldi	r26, 0x3A	; 58
 3de:	b0 e0       	ldi	r27, 0x00	; 0
 3e0:	ea e3       	ldi	r30, 0x3A	; 58
 3e2:	f0 e0       	ldi	r31, 0x00	; 0
 3e4:	80 81       	ld	r24, Z
 3e6:	83 60       	ori	r24, 0x03	; 3
 3e8:	8c 93       	st	X, r24
	
	PORTB &= ~0x1f;
 3ea:	a8 e3       	ldi	r26, 0x38	; 56
 3ec:	b0 e0       	ldi	r27, 0x00	; 0
 3ee:	e8 e3       	ldi	r30, 0x38	; 56
 3f0:	f0 e0       	ldi	r31, 0x00	; 0
 3f2:	80 81       	ld	r24, Z
 3f4:	80 7e       	andi	r24, 0xE0	; 224
 3f6:	8c 93       	st	X, r24
	
	while(1)
	{
		for (i = 0; i <= 1000; i++)
 3f8:	1a 82       	std	Y+2, r1	; 0x02
 3fa:	19 82       	std	Y+1, r1	; 0x01
 3fc:	08 c0       	rjmp	.+16     	; 0x40e <__stack+0x32f>
			disp_char(colums_h);
 3fe:	ce 01       	movw	r24, r28
 400:	81 96       	adiw	r24, 0x21	; 33
 402:	3f d0       	rcall	.+126    	; 0x482 <disp_char>
	
	PORTB &= ~0x1f;
	
	while(1)
	{
		for (i = 0; i <= 1000; i++)
 404:	89 81       	ldd	r24, Y+1	; 0x01
 406:	9a 81       	ldd	r25, Y+2	; 0x02
 408:	01 96       	adiw	r24, 0x01	; 1
 40a:	9a 83       	std	Y+2, r25	; 0x02
 40c:	89 83       	std	Y+1, r24	; 0x01
 40e:	89 81       	ldd	r24, Y+1	; 0x01
 410:	9a 81       	ldd	r25, Y+2	; 0x02
 412:	f3 e0       	ldi	r31, 0x03	; 3
 414:	89 3e       	cpi	r24, 0xE9	; 233
 416:	9f 07       	cpc	r25, r31
 418:	90 f3       	brcs	.-28     	; 0x3fe <__stack+0x31f>
			disp_char(colums_h);
		for (i = 0; i <= 1000; i++)
 41a:	1a 82       	std	Y+2, r1	; 0x02
 41c:	19 82       	std	Y+1, r1	; 0x01
 41e:	08 c0       	rjmp	.+16     	; 0x430 <__stack+0x351>
			disp_char(colums_e);
 420:	ce 01       	movw	r24, r28
 422:	47 96       	adiw	r24, 0x17	; 23
 424:	2e d0       	rcall	.+92     	; 0x482 <disp_char>
	
	while(1)
	{
		for (i = 0; i <= 1000; i++)
			disp_char(colums_h);
		for (i = 0; i <= 1000; i++)
 426:	89 81       	ldd	r24, Y+1	; 0x01
 428:	9a 81       	ldd	r25, Y+2	; 0x02
 42a:	01 96       	adiw	r24, 0x01	; 1
 42c:	9a 83       	std	Y+2, r25	; 0x02
 42e:	89 83       	std	Y+1, r24	; 0x01
 430:	89 81       	ldd	r24, Y+1	; 0x01
 432:	9a 81       	ldd	r25, Y+2	; 0x02
 434:	23 e0       	ldi	r18, 0x03	; 3
 436:	89 3e       	cpi	r24, 0xE9	; 233
 438:	92 07       	cpc	r25, r18
 43a:	90 f3       	brcs	.-28     	; 0x420 <__stack+0x341>
			disp_char(colums_e);
		for (i = 0; i <= 2000; i++)
 43c:	1a 82       	std	Y+2, r1	; 0x02
 43e:	19 82       	std	Y+1, r1	; 0x01
 440:	08 c0       	rjmp	.+16     	; 0x452 <__stack+0x373>
			disp_char(colums_l);
 442:	ce 01       	movw	r24, r28
 444:	86 96       	adiw	r24, 0x26	; 38
 446:	1d d0       	rcall	.+58     	; 0x482 <disp_char>
	{
		for (i = 0; i <= 1000; i++)
			disp_char(colums_h);
		for (i = 0; i <= 1000; i++)
			disp_char(colums_e);
		for (i = 0; i <= 2000; i++)
 448:	89 81       	ldd	r24, Y+1	; 0x01
 44a:	9a 81       	ldd	r25, Y+2	; 0x02
 44c:	01 96       	adiw	r24, 0x01	; 1
 44e:	9a 83       	std	Y+2, r25	; 0x02
 450:	89 83       	std	Y+1, r24	; 0x01
 452:	89 81       	ldd	r24, Y+1	; 0x01
 454:	9a 81       	ldd	r25, Y+2	; 0x02
 456:	e7 e0       	ldi	r30, 0x07	; 7
 458:	81 3d       	cpi	r24, 0xD1	; 209
 45a:	9e 07       	cpc	r25, r30
 45c:	90 f3       	brcs	.-28     	; 0x442 <__stack+0x363>
			disp_char(colums_l);
		for (i = 0; i <= 1000; i++)
 45e:	1a 82       	std	Y+2, r1	; 0x02
 460:	19 82       	std	Y+1, r1	; 0x01
 462:	08 c0       	rjmp	.+16     	; 0x474 <__stack+0x395>
			disp_char(colums_o);			
 464:	ce 01       	movw	r24, r28
 466:	8b 96       	adiw	r24, 0x2b	; 43
 468:	0c d0       	rcall	.+24     	; 0x482 <disp_char>
			disp_char(colums_h);
		for (i = 0; i <= 1000; i++)
			disp_char(colums_e);
		for (i = 0; i <= 2000; i++)
			disp_char(colums_l);
		for (i = 0; i <= 1000; i++)
 46a:	89 81       	ldd	r24, Y+1	; 0x01
 46c:	9a 81       	ldd	r25, Y+2	; 0x02
 46e:	01 96       	adiw	r24, 0x01	; 1
 470:	9a 83       	std	Y+2, r25	; 0x02
 472:	89 83       	std	Y+1, r24	; 0x01
 474:	89 81       	ldd	r24, Y+1	; 0x01
 476:	9a 81       	ldd	r25, Y+2	; 0x02
 478:	f3 e0       	ldi	r31, 0x03	; 3
 47a:	89 3e       	cpi	r24, 0xE9	; 233
 47c:	9f 07       	cpc	r25, r31
 47e:	90 f3       	brcs	.-28     	; 0x464 <__stack+0x385>
 480:	bb cf       	rjmp	.-138    	; 0x3f8 <__stack+0x319>

00000482 <disp_char>:
			disp_char(colums_o);			
	}
}

void disp_char(unsigned char *colums)
{
 482:	df 93       	push	r29
 484:	cf 93       	push	r28
 486:	00 d0       	rcall	.+0      	; 0x488 <disp_char+0x6>
 488:	00 d0       	rcall	.+0      	; 0x48a <disp_char+0x8>
 48a:	cd b7       	in	r28, 0x3d	; 61
 48c:	de b7       	in	r29, 0x3e	; 62
 48e:	9c 83       	std	Y+4, r25	; 0x04
 490:	8b 83       	std	Y+3, r24	; 0x03
	unsigned char i, j;
	
	for (j = 0; j <= 4; j++)
 492:	19 82       	std	Y+1, r1	; 0x01
 494:	b9 c0       	rjmp	.+370    	; 0x608 <disp_char+0x186>
	{
		if (colums[j] & (0x01 << 0))
 496:	89 81       	ldd	r24, Y+1	; 0x01
 498:	28 2f       	mov	r18, r24
 49a:	30 e0       	ldi	r19, 0x00	; 0
 49c:	8b 81       	ldd	r24, Y+3	; 0x03
 49e:	9c 81       	ldd	r25, Y+4	; 0x04
 4a0:	fc 01       	movw	r30, r24
 4a2:	e2 0f       	add	r30, r18
 4a4:	f3 1f       	adc	r31, r19
 4a6:	80 81       	ld	r24, Z
 4a8:	88 2f       	mov	r24, r24
 4aa:	90 e0       	ldi	r25, 0x00	; 0
 4ac:	81 70       	andi	r24, 0x01	; 1
 4ae:	90 70       	andi	r25, 0x00	; 0
 4b0:	88 23       	and	r24, r24
 4b2:	41 f0       	breq	.+16     	; 0x4c4 <disp_char+0x42>
			PORTA &= ~(0x01 << 0);
 4b4:	ab e3       	ldi	r26, 0x3B	; 59
 4b6:	b0 e0       	ldi	r27, 0x00	; 0
 4b8:	eb e3       	ldi	r30, 0x3B	; 59
 4ba:	f0 e0       	ldi	r31, 0x00	; 0
 4bc:	80 81       	ld	r24, Z
 4be:	8e 7f       	andi	r24, 0xFE	; 254
 4c0:	8c 93       	st	X, r24
 4c2:	07 c0       	rjmp	.+14     	; 0x4d2 <disp_char+0x50>
		else
			PORTA |= (0x01 << 0);
 4c4:	ab e3       	ldi	r26, 0x3B	; 59
 4c6:	b0 e0       	ldi	r27, 0x00	; 0
 4c8:	eb e3       	ldi	r30, 0x3B	; 59
 4ca:	f0 e0       	ldi	r31, 0x00	; 0
 4cc:	80 81       	ld	r24, Z
 4ce:	81 60       	ori	r24, 0x01	; 1
 4d0:	8c 93       	st	X, r24
		if (colums[j] & (0x01 << 1))
 4d2:	89 81       	ldd	r24, Y+1	; 0x01
 4d4:	28 2f       	mov	r18, r24
 4d6:	30 e0       	ldi	r19, 0x00	; 0
 4d8:	8b 81       	ldd	r24, Y+3	; 0x03
 4da:	9c 81       	ldd	r25, Y+4	; 0x04
 4dc:	fc 01       	movw	r30, r24
 4de:	e2 0f       	add	r30, r18
 4e0:	f3 1f       	adc	r31, r19
 4e2:	80 81       	ld	r24, Z
 4e4:	88 2f       	mov	r24, r24
 4e6:	90 e0       	ldi	r25, 0x00	; 0
 4e8:	82 70       	andi	r24, 0x02	; 2
 4ea:	90 70       	andi	r25, 0x00	; 0
 4ec:	00 97       	sbiw	r24, 0x00	; 0
 4ee:	41 f0       	breq	.+16     	; 0x500 <disp_char+0x7e>
			PORTA &= ~(0x01 << 1);
 4f0:	ab e3       	ldi	r26, 0x3B	; 59
 4f2:	b0 e0       	ldi	r27, 0x00	; 0
 4f4:	eb e3       	ldi	r30, 0x3B	; 59
 4f6:	f0 e0       	ldi	r31, 0x00	; 0
 4f8:	80 81       	ld	r24, Z
 4fa:	8d 7f       	andi	r24, 0xFD	; 253
 4fc:	8c 93       	st	X, r24
 4fe:	07 c0       	rjmp	.+14     	; 0x50e <disp_char+0x8c>
		else
			PORTA |= (0x01 << 1);
 500:	ab e3       	ldi	r26, 0x3B	; 59
 502:	b0 e0       	ldi	r27, 0x00	; 0
 504:	eb e3       	ldi	r30, 0x3B	; 59
 506:	f0 e0       	ldi	r31, 0x00	; 0
 508:	80 81       	ld	r24, Z
 50a:	82 60       	ori	r24, 0x02	; 2
 50c:	8c 93       	st	X, r24
		for (i = 2; i <= 6; i++)
 50e:	82 e0       	ldi	r24, 0x02	; 2
 510:	8a 83       	std	Y+2, r24	; 0x02
 512:	44 c0       	rjmp	.+136    	; 0x59c <disp_char+0x11a>
		{
			if (colums[j] & (0x01 << i))
 514:	89 81       	ldd	r24, Y+1	; 0x01
 516:	28 2f       	mov	r18, r24
 518:	30 e0       	ldi	r19, 0x00	; 0
 51a:	8b 81       	ldd	r24, Y+3	; 0x03
 51c:	9c 81       	ldd	r25, Y+4	; 0x04
 51e:	fc 01       	movw	r30, r24
 520:	e2 0f       	add	r30, r18
 522:	f3 1f       	adc	r31, r19
 524:	80 81       	ld	r24, Z
 526:	28 2f       	mov	r18, r24
 528:	30 e0       	ldi	r19, 0x00	; 0
 52a:	8a 81       	ldd	r24, Y+2	; 0x02
 52c:	88 2f       	mov	r24, r24
 52e:	90 e0       	ldi	r25, 0x00	; 0
 530:	a9 01       	movw	r20, r18
 532:	02 c0       	rjmp	.+4      	; 0x538 <disp_char+0xb6>
 534:	55 95       	asr	r21
 536:	47 95       	ror	r20
 538:	8a 95       	dec	r24
 53a:	e2 f7       	brpl	.-8      	; 0x534 <disp_char+0xb2>
 53c:	ca 01       	movw	r24, r20
 53e:	81 70       	andi	r24, 0x01	; 1
 540:	90 70       	andi	r25, 0x00	; 0
 542:	88 23       	and	r24, r24
 544:	a9 f0       	breq	.+42     	; 0x570 <disp_char+0xee>
				PORTD &= ~(0x01 << i);
 546:	a2 e3       	ldi	r26, 0x32	; 50
 548:	b0 e0       	ldi	r27, 0x00	; 0
 54a:	e2 e3       	ldi	r30, 0x32	; 50
 54c:	f0 e0       	ldi	r31, 0x00	; 0
 54e:	80 81       	ld	r24, Z
 550:	48 2f       	mov	r20, r24
 552:	8a 81       	ldd	r24, Y+2	; 0x02
 554:	28 2f       	mov	r18, r24
 556:	30 e0       	ldi	r19, 0x00	; 0
 558:	81 e0       	ldi	r24, 0x01	; 1
 55a:	90 e0       	ldi	r25, 0x00	; 0
 55c:	02 2e       	mov	r0, r18
 55e:	02 c0       	rjmp	.+4      	; 0x564 <disp_char+0xe2>
 560:	88 0f       	add	r24, r24
 562:	99 1f       	adc	r25, r25
 564:	0a 94       	dec	r0
 566:	e2 f7       	brpl	.-8      	; 0x560 <disp_char+0xde>
 568:	80 95       	com	r24
 56a:	84 23       	and	r24, r20
 56c:	8c 93       	st	X, r24
 56e:	13 c0       	rjmp	.+38     	; 0x596 <disp_char+0x114>
			else
				PORTD |= (0x01 << i);
 570:	a2 e3       	ldi	r26, 0x32	; 50
 572:	b0 e0       	ldi	r27, 0x00	; 0
 574:	e2 e3       	ldi	r30, 0x32	; 50
 576:	f0 e0       	ldi	r31, 0x00	; 0
 578:	80 81       	ld	r24, Z
 57a:	48 2f       	mov	r20, r24
 57c:	8a 81       	ldd	r24, Y+2	; 0x02
 57e:	28 2f       	mov	r18, r24
 580:	30 e0       	ldi	r19, 0x00	; 0
 582:	81 e0       	ldi	r24, 0x01	; 1
 584:	90 e0       	ldi	r25, 0x00	; 0
 586:	02 2e       	mov	r0, r18
 588:	02 c0       	rjmp	.+4      	; 0x58e <disp_char+0x10c>
 58a:	88 0f       	add	r24, r24
 58c:	99 1f       	adc	r25, r25
 58e:	0a 94       	dec	r0
 590:	e2 f7       	brpl	.-8      	; 0x58a <disp_char+0x108>
 592:	84 2b       	or	r24, r20
 594:	8c 93       	st	X, r24
			PORTA |= (0x01 << 0);
		if (colums[j] & (0x01 << 1))
			PORTA &= ~(0x01 << 1);
		else
			PORTA |= (0x01 << 1);
		for (i = 2; i <= 6; i++)
 596:	8a 81       	ldd	r24, Y+2	; 0x02
 598:	8f 5f       	subi	r24, 0xFF	; 255
 59a:	8a 83       	std	Y+2, r24	; 0x02
 59c:	8a 81       	ldd	r24, Y+2	; 0x02
 59e:	87 30       	cpi	r24, 0x07	; 7
 5a0:	08 f4       	brcc	.+2      	; 0x5a4 <disp_char+0x122>
 5a2:	b8 cf       	rjmp	.-144    	; 0x514 <disp_char+0x92>
			if (colums[j] & (0x01 << i))
				PORTD &= ~(0x01 << i);
			else
				PORTD |= (0x01 << i);
		}
		PORTB |= (0x01 << j);
 5a4:	a8 e3       	ldi	r26, 0x38	; 56
 5a6:	b0 e0       	ldi	r27, 0x00	; 0
 5a8:	e8 e3       	ldi	r30, 0x38	; 56
 5aa:	f0 e0       	ldi	r31, 0x00	; 0
 5ac:	80 81       	ld	r24, Z
 5ae:	48 2f       	mov	r20, r24
 5b0:	89 81       	ldd	r24, Y+1	; 0x01
 5b2:	28 2f       	mov	r18, r24
 5b4:	30 e0       	ldi	r19, 0x00	; 0
 5b6:	81 e0       	ldi	r24, 0x01	; 1
 5b8:	90 e0       	ldi	r25, 0x00	; 0
 5ba:	02 2e       	mov	r0, r18
 5bc:	02 c0       	rjmp	.+4      	; 0x5c2 <disp_char+0x140>
 5be:	88 0f       	add	r24, r24
 5c0:	99 1f       	adc	r25, r25
 5c2:	0a 94       	dec	r0
 5c4:	e2 f7       	brpl	.-8      	; 0x5be <disp_char+0x13c>
 5c6:	84 2b       	or	r24, r20
 5c8:	8c 93       	st	X, r24
		for (i = 0; i <= 100; i++);
 5ca:	1a 82       	std	Y+2, r1	; 0x02
 5cc:	03 c0       	rjmp	.+6      	; 0x5d4 <disp_char+0x152>
 5ce:	8a 81       	ldd	r24, Y+2	; 0x02
 5d0:	8f 5f       	subi	r24, 0xFF	; 255
 5d2:	8a 83       	std	Y+2, r24	; 0x02
 5d4:	8a 81       	ldd	r24, Y+2	; 0x02
 5d6:	85 36       	cpi	r24, 0x65	; 101
 5d8:	d0 f3       	brcs	.-12     	; 0x5ce <disp_char+0x14c>
			//for (k = 0; k <= 100; k++);
		PORTB &= ~(0x01 << j);
 5da:	a8 e3       	ldi	r26, 0x38	; 56
 5dc:	b0 e0       	ldi	r27, 0x00	; 0
 5de:	e8 e3       	ldi	r30, 0x38	; 56
 5e0:	f0 e0       	ldi	r31, 0x00	; 0
 5e2:	80 81       	ld	r24, Z
 5e4:	48 2f       	mov	r20, r24
 5e6:	89 81       	ldd	r24, Y+1	; 0x01
 5e8:	28 2f       	mov	r18, r24
 5ea:	30 e0       	ldi	r19, 0x00	; 0
 5ec:	81 e0       	ldi	r24, 0x01	; 1
 5ee:	90 e0       	ldi	r25, 0x00	; 0
 5f0:	02 2e       	mov	r0, r18
 5f2:	02 c0       	rjmp	.+4      	; 0x5f8 <disp_char+0x176>
 5f4:	88 0f       	add	r24, r24
 5f6:	99 1f       	adc	r25, r25
 5f8:	0a 94       	dec	r0
 5fa:	e2 f7       	brpl	.-8      	; 0x5f4 <disp_char+0x172>
 5fc:	80 95       	com	r24
 5fe:	84 23       	and	r24, r20
 600:	8c 93       	st	X, r24

void disp_char(unsigned char *colums)
{
	unsigned char i, j;
	
	for (j = 0; j <= 4; j++)
 602:	89 81       	ldd	r24, Y+1	; 0x01
 604:	8f 5f       	subi	r24, 0xFF	; 255
 606:	89 83       	std	Y+1, r24	; 0x01
 608:	89 81       	ldd	r24, Y+1	; 0x01
 60a:	85 30       	cpi	r24, 0x05	; 5
 60c:	08 f4       	brcc	.+2      	; 0x610 <disp_char+0x18e>
 60e:	43 cf       	rjmp	.-378    	; 0x496 <disp_char+0x14>
		PORTB |= (0x01 << j);
		for (i = 0; i <= 100; i++);
			//for (k = 0; k <= 100; k++);
		PORTB &= ~(0x01 << j);
	}
 610:	0f 90       	pop	r0
 612:	0f 90       	pop	r0
 614:	0f 90       	pop	r0
 616:	0f 90       	pop	r0
 618:	cf 91       	pop	r28
 61a:	df 91       	pop	r29
 61c:	08 95       	ret

0000061e <_exit>:
 61e:	f8 94       	cli

00000620 <__stop_program>:
 620:	ff cf       	rjmp	.-2      	; 0x620 <__stop_program>
